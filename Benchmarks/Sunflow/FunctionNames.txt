java.lang.System.checkKey(java.lang.String)
java.text.NumberFormat.getInstance(java.util.Locale)
org.codehaus.janino.Java$SuperclassMethodInvocation.init(org.codehaus.janino.Location,java.lang.String,org.codehaus.janino.Java$Rvalue[])
org.codehaus.janino.Java$ConstructorDeclarator.init(org.codehaus.janino.Location,java.lang.String,short,org.codehaus.janino.Java$FunctionDeclarator$FormalParameter[],org.codehaus.janino.Java$Type[],org.codehaus.janino.Java$ConstructorInvocation,org.codehaus.janino.Java$Block)
org.codehaus.janino.Parser.join(java.lang.String[],java.lang.String)
javax.swing.text.AbstractDocument.fireUndoableEditUpdate(javax.swing.event.UndoableEditEvent)
sun.misc.FDBigInt.lshiftMe(int)
org.sunflow.core.photonmap.GlobalPhotonMap.store(org.sunflow.core.ShadingState,org.sunflow.math.Vector3,org.sunflow.image.Color,org.sunflow.image.Color)
javax.swing.text.SegmentCache.releaseSegment(javax.swing.text.Segment)
org.codehaus.janino.Java$NewArray.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Type,org.codehaus.janino.Java$Rvalue[],int)
sun.awt.image.SunVolatileImage.init(java.awt.Component,java.awt.GraphicsConfiguration,int,int,java.lang.Object,int,java.awt.ImageCapabilities,int)
java.awt.Container.adjustListeningChildren(long,int)
java.lang.StringBuilder.append(long)
java.awt.Point.equals(java.lang.Object)
java.nio.charset.CoderResult.isUnderflow()
java.util.concurrent.ConcurrentHashMap.hash(int)
java.awt.VKCollection.findName(java.lang.Integer)
java.awt.Component.isOpaque()
java.awt.EventQueue$4.init(java.awt.EventQueue)
org.codehaus.janino.util.resource.ResourceFinder.init()
java.awt.Component.reshape(int,int,int,int)
javax.swing.JComponent.setFlag(int,boolean)
java.awt.GraphicsDevice.setFullScreenWindow(java.awt.Window)
javax.swing.JComponent.isManagingFocus()
java.awt.dnd.DropTarget.setDefaultActions(int)
sun.util.calendar.CalendarDate.setTimeOfDay(int,int,int,int)
java.awt.Container.validate()
java.util.BitSet.get(int)
java.util.regex.ASCII.isLower(int)
java.util.regex.Pattern$CharProperty.complement()
org.codehaus.janino.Java$ContinuableStatement.init(org.codehaus.janino.Location)
java.lang.Character.codePointBeforeImpl(char[],int,int)
javax.swing.text.AbstractDocument.createPosition(int)
javax.swing.ArrayTable.containsKey(java.lang.Object)
java.awt.image.ColorModel.getPixelSize()
org.codehaus.janino.Java$ThrowStatement.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Rvalue)
org.sunflow.system.Parser$ParserException.init(java.lang.String,java.lang.String)
javax.swing.JComponent.setAlignmentY(float)
java.util.Currency.getMainTableEntry(char,char)
org.sunflow.util.FastHashMap.init()
java.lang.AbstractStringBuilder.append(int)
org.codehaus.janino.tools.JGrep.createJavacLikePathIClassLoader(java.io.File[],java.io.File[],java.io.File[])
javax.swing.text.StyleContext.getCompressionThreshold()
javax.swing.JFrame.createRootPane()
org.codehaus.janino.samples.DemoBase.createObject(java.lang.Class,java.lang.String)
java.lang.Long.getChars(long,int,char[])
java.util.regex.ASCII.isUpper(int)
java.awt.datatransfer.SystemFlavorMap.parseAndStoreReader(java.io.BufferedReader)
javax.swing.text.AbstractDocument$BranchElement.replace(int,int,javax.swing.text.Element[])
java.awt.AWTKeyStroke.getVKValue(java.lang.String)
sun.awt.OSInfo.getOSTypeAction()
java.awt.Window.getTemporaryLostComponent()
sun.reflect.ReflectionFactory.copyField(java.lang.reflect.Field)
java.security.Permissions.add(java.security.Permission)
java.awt.Component.getOpaqueShape()
org.sunflow.core.tesselatable.Gumbo.main(java.lang.String[])
java.net.SocketPermission.getHost(java.lang.String)
java.beans.VetoableChangeSupport.fire(java.beans.VetoableChangeListener[],java.beans.PropertyChangeEvent)
org.codehaus.janino.Parser.parseMultiplicativeExpression()
java.util.concurrent.locks.ReentrantLock.init()
java.text.DecimalFormat.expandAffix(java.lang.String,java.lang.StringBuffer)
sun.reflect.UnsafeQualifiedStaticDoubleFieldAccessorImpl.init(java.lang.reflect.Field,boolean)
org.sunflow.util.FastHashMap$Entry.access$200(org.sunflow.util.FastHashMap$Entry)
java.lang.ConditionalSpecialCasing.isConditionMet(java.lang.String,int,java.util.Locale,int)
org.codehaus.janino.Parser.parseDimExprs()
org.sunflow.system.ImagePanel.zoom(int,int)
sun.awt.PostEventQueue.postEvent(java.awt.AWTEvent)
sun.util.calendar.CalendarUtils.isGregorianLeapYear(int)
javax.swing.LookAndFeel.installProperty(javax.swing.JComponent,java.lang.String,java.lang.Object)
javax.swing.DebugGraphics.setDebugOptions(int)
java.awt.datatransfer.MimeTypeParameterList.init(java.lang.String)
org.codehaus.janino.Parser.peekOperator(java.lang.String)
java.util.Calendar.internalSet(int,int)
javax.swing.JButton.init(java.lang.String,javax.swing.Icon)
java.lang.Enum.ordinal()
java.util.logging.Logger.fine(java.lang.String)
org.codehaus.janino.samples.DemoBase.toString(java.lang.Object)
java.util.MissingFormatWidthException.init(java.lang.String)
java.util.ResourceBundle.getLoader(java.lang.Class)
sun.awt.image.IntegerComponentRaster.getDataOffset(int)
java.text.DecimalFormat.init(java.lang.String,java.text.DecimalFormatSymbols)
sun.awt.SunToolkit.getDataTransfererClassName()
org.codehaus.janino.SimpleCompiler.classToType(org.codehaus.janino.Location,java.lang.Class)
org.sunflow.util.FastHashMap$Entry.getKey()
org.sunflow.core.parser.RA3Parser.init()
org.sunflow.core.Geometry.init(org.sunflow.core.PrimitiveList)
sun.awt.AWTAccessor.getMenuComponentAccessor()
java.util.HashMap$Entry.recordAccess(java.util.HashMap)
java.security.Policy.getPolicyNoCheck()
java.util.TimeZone.getDSTSavings()
sun.reflect.Reflection.isSameClassPackage(java.lang.Class,java.lang.Class)
java.lang.reflect.Array.newInstance(java.lang.Class,int)
javax.swing.ScrollPaneLayout.init()
org.sunflow.core.Scene.setCamera(org.sunflow.core.Camera)
java.util.regex.Pattern$SingleU.init(int)
org.codehaus.janino.util.Traverser$1.init(org.codehaus.janino.util.Traverser)
java.util.regex.Pattern.RemoveQEQuoting()
org.sunflow.core.ParameterList$Parameter.getStringValue()
org.sunflow.system.Timer.nanos()
java.io.FilterInputStream.read(byte[])
org.codehaus.janino.Java$PackageDeclaration.init(org.codehaus.janino.Location,java.lang.String)
java.io.File.getParentFile()
sun.awt.image.VSyncedBSManager.init()
org.sunflow.core.primitive.TriangleMesh.getPoint(int)
sun.reflect.Label.bind()
java.awt.Menu.getItemImpl(int)
java.lang.ConditionalSpecialCasing$Entry.getLowerCase()
org.codehaus.janino.Parser.peekIdentifier()
org.codehaus.janino.util.resource.FileResource.init(java.io.File)
java.lang.Shutdown.exit(int)
org.codehaus.janino.ScriptEvaluator.setStaticMethod(boolean)
java.util.HashMap.transfer(java.util.HashMap$Entry[])
org.codehaus.janino.Java$Atom.toType()
org.sunflow.core.ParameterList$Parameter.size()
java.awt.AWTEvent.isConsumed()
sun.reflect.MethodAccessorImpl.init()
org.codehaus.janino.Parser.parseLiteral()
sun.awt.image.SunVolatileImage.getHeight()
sun.reflect.ClassFileAssembler.opc_new(short)
java.nio.charset.UnsupportedCharsetException.init(java.lang.String)
sun.reflect.ClassFileAssembler.emitConstantPoolClass(short)
sun.util.calendar.CalendarDate.setDaylightSaving(int)
org.sunflow.system.ui.SilentInterface.init()
sun.reflect.ClassFileAssembler.opc_dup_x1()
java.text.FieldPosition.init(int)
java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.init(java.util.concurrent.locks.AbstractQueuedSynchronizer)
org.sunflow.Benchmark.kernelBegin()
java.util.LinkedList.remove(java.util.LinkedList$Entry)
javax.swing.RepaintManager.addInvalidComponent(javax.swing.JComponent)
java.util.Date.init(long)
java.lang.ThreadLocal$ThreadLocalMap.resize()
java.lang.Math.min(double,double)
javax.swing.JPopupMenu.setInvoker(java.awt.Component)
java.io.PrintStream.print(char)
java.io.DataInputStream.readDouble()
java.util.regex.Pattern.countChars(java.lang.CharSequence,int,int)
sun.java2d.loops.CompositeType.getUniqueID()
java.util.logging.LogManager.getLevelProperty(java.lang.String,java.util.logging.Level)
java.awt.event.HierarchyEvent.init(java.awt.Component,int,java.awt.Component,java.awt.Container)
java.util.ResourceBundle$CacheKey.getLoader()
org.codehaus.janino.samples.ScriptDemo.main(java.lang.String[])
java.lang.reflect.Constructor.getConstructorAccessor()
sun.misc.FloatingDecimal.readJavaFormatString(java.lang.String)
java.awt.Container.proxyEnableEvents(long)
java.util.regex.Matcher.groupCount()
org.sunflow.core.photonmap.GridPhotonMap.init(int,int,float)
sun.util.calendar.CalendarDate.setZoneOffset(int)
sun.reflect.ClassFileAssembler.opc_f2d()
javax.swing.JComponent.getToolTipText()
javax.swing.Autoscroller._stop(javax.swing.JComponent)
java.io.BufferedInputStream.init(java.io.InputStream)
org.codehaus.janino.Java$Lvalue.init(org.codehaus.janino.Location)
org.codehaus.janino.ScriptEvaluator.cook(org.codehaus.janino.Scanner[])
javax.swing.JScrollPane.setVerticalScrollBar(javax.swing.JScrollBar)
java.awt.Container.getLayout()
SunflowGUI$SceneTransferHandler.init(SunflowGUI,SunflowGUI$1)
org.codehaus.janino.Scanner$Token.isLiteral()
org.codehaus.janino.IClassLoader.postConstruct()
java.text.DecimalFormat.setMaximumIntegerDigits(int)
java.text.DecimalFormatSymbols.getDecimalSeparator()
java.awt.dnd.DropTarget.removeNotify(java.awt.peer.ComponentPeer)
java.awt.KeyboardFocusManager.clearGlobalFocusOwner()
javax.swing.RepaintManager.copyArea(javax.swing.JComponent,java.awt.Graphics,int,int,int,int,int,int,boolean)
java.lang.reflect.Field.getName()
org.codehaus.janino.Java$LocalClassDeclaration.init(org.codehaus.janino.Location,java.lang.String,short,java.lang.String,org.codehaus.janino.Java$Type,org.codehaus.janino.Java$Type[])
javax.swing.ToolTipManager.init()
sun.reflect.AccessorGenerator.typeSizeInStackSlots(java.lang.Class)
java.awt.Component.processEvent(java.awt.AWTEvent)
javax.swing.UIManager.getUI(javax.swing.JComponent)
org.sunflow.core.shader.AmbientOcclusionShader.init(org.sunflow.image.Color,float)
SunflowGUI$20.init(SunflowGUI)
org.sunflow.RenderObjectMap$RenderObjectHandle.getShader()
java.awt.datatransfer.MimeType.getPrimaryType()
java.util.concurrent.locks.ReentrantLock.newCondition()
javax.swing.text.AbstractDocument.getCurrentWriter()
org.sunflow.system.Timer.end()
java.lang.Character.toUpperCaseEx(int)
sun.awt.image.IntegerComponentRaster.getDataStorage()
javax.swing.text.AbstractDocument$BranchElement.getStartOffset()
java.lang.Character.getType(int)
java.util.Locale.getCountry()
org.codehaus.janino.Scanner$Token.getKeyword()
javax.swing.plaf.ComponentUI.update(java.awt.Graphics,javax.swing.JComponent)
java.util.HashMap.putForCreate(java.lang.Object,java.lang.Object)
java.awt.Window.setLocationRelativeTo(java.awt.Component)
java.lang.StringBuilder.append(java.lang.StringBuilder)
javax.swing.JMenuItem.setAccelerator(javax.swing.KeyStroke)
org.codehaus.janino.Cookable.cook(java.lang.String,java.io.Reader)
sun.misc.FloatingDecimal.stripLeadingZeros(java.lang.String)
java.util.Vector.copyInto(java.lang.Object[])
java.awt.SequencedEvent.dispose()
java.lang.ConditionalSpecialCasing$Entry.getCondition()
javax.swing.JViewport.getExtentSize()
java.util.logging.LogManager.addLogger(java.util.logging.Logger)
sun.java2d.Disposer.add(java.lang.Object,sun.java2d.DisposerRecord)
javax.swing.JPopupMenu.getDefaultLightWeightPopupEnabled()
sun.reflect.AccessorGenerator.canWidenTo(java.lang.Class,java.lang.Class)
javax.swing.JViewport.createViewListener()
java.awt.Component.isMaximumSizeSet()
java.util.regex.ASCII.toLower(int)
java.util.regex.Pattern.u()
org.codehaus.janino.util.AutoIndentWriter.init(java.io.Writer)
java.awt.Container.clearCurrentFocusCycleRootOnHide()
java.io.LineNumberReader.readLine()
java.lang.SecurityManager.checkWrite(java.lang.String)
org.codehaus.janino.Scanner.stringToDoubleLiteralToken(java.lang.String)
javax.swing.RepaintManager.getPaintManager()
org.codehaus.janino.Parser.parseLocalVariableDeclarators()
java.lang.reflect.Method.getCallerClass()
java.util.ArrayList$Itr.init(java.util.ArrayList)
java.text.NumberFormat.getMaximumFractionDigits()
java.lang.ref.ReferenceQueue$Lock.init(java.lang.ref.ReferenceQueue$1)
org.codehaus.janino.Parser.parseShiftExpression()
javax.swing.Timer.cancelEvent()
java.util.logging.LogManager.checkPermission()
java.awt.Graphics.create(int,int,int,int)
javax.swing.AbstractButton.setText(java.lang.String)
java.util.Formatter$Conversion.isGeneral(char)
java.util.Date.normalize()
java.util.logging.LogManager$2.init(java.util.logging.LogManager)
java.text.NumberFormat.setMaximumFractionDigits(int)
java.util.regex.Pattern$Dollar.init(boolean)
javax.swing.SwingUtilities.installSwingDropTargetAsNecessary(java.awt.Component,javax.swing.TransferHandler)
org.sunflow.system.UI.printInfo(org.sunflow.system.UI$Module,java.lang.String,java.lang.Object[])
org.codehaus.janino.Parser.location()
javax.swing.JComponent.setUIProperty(java.lang.String,java.lang.Object)
sun.java2d.pipe.LoopPipe.getFillSSI(sun.java2d.SunGraphics2D)
sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl.init(java.lang.reflect.Field,boolean)
java.awt.image.ColorModel.getComponentSize()
org.sunflow.SunflowAPI.parameter(java.lang.String,java.lang.String[])
org.codehaus.janino.Java$BasicType.init(org.codehaus.janino.Location,int)
java.io.File.isAbsolute()
org.codehaus.janino.tools.Disassembler.unindent(java.lang.String)
java.lang.StringBuilder.getChars(int,int,char[],int)
sun.java2d.loops.RenderLoops.init()
java.lang.SecurityManager.checkAccess(java.lang.Thread)
java.util.ResourceBundle$Control.getFormats(java.lang.String)
org.sunflow.core.accel.KDTree.setDumpMode(boolean,java.lang.String)
java.awt.geom.Point2D$Double.init()
sun.java2d.loops.CompositeType.getSuperType()
javax.swing.JRootPane.setLayeredPane(javax.swing.JLayeredPane)
java.util.regex.Matcher.reset()
sun.reflect.ClassFileAssembler.init()
java.lang.ThreadGroup.getParent()
javax.swing.JLabel.setDisabledIcon(javax.swing.Icon)
sun.java2d.x11.X11SurfaceData.isAccelerationEnabled()
java.util.logging.LogManager$LoggerContext.processParentHandlers(java.util.logging.Logger,java.lang.String)
java.io.File.isDirectory()
sun.awt.AWTAutoShutdown.notifyThreadBusy(java.lang.Thread)
sun.reflect.ClassFileAssembler.setStack(int)
javax.swing.JScrollPane$ScrollBar.init(javax.swing.JScrollPane,int)
sun.util.calendar.ImmutableGregorianDate.init(sun.util.calendar.BaseCalendar$Date)
java.awt.Component.setDropTarget(java.awt.dnd.DropTarget)
javax.swing.text.AbstractDocument$BranchElement.getElementIndex(int)
java.io.File.getCanonicalPath()
java.awt.Rectangle.reshape(int,int,int,int)
sun.misc.URLClassPath$3.init(sun.misc.URLClassPath,java.net.URL)
java.util.Locale.toLowerCase(java.lang.String)
javax.swing.JScrollPane.getRowHeader()
java.awt.geom.Point2D.equals(java.lang.Object)
javax.swing.DebugGraphics.debugLog()
org.codehaus.janino.Java$Instanceof.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Rvalue,org.codehaus.janino.Java$Type)
java.io.InputStreamReader.init(java.io.InputStream,java.lang.String)
java.awt.Component.getContainingWindow()
org.codehaus.janino.util.ClassFile.storeConstantPool(java.io.DataOutputStream,java.util.List)
sun.text.normalizer.Trie.getCodePointOffset(int)
sun.reflect.BootstrapConstructorAccessorImpl.init(java.lang.reflect.Constructor)
javax.swing.JComponent.getObscuredState(int,int,int,int,int)
org.codehaus.janino.Compiler.parseCompilationUnit(java.lang.String,java.io.InputStream,java.lang.String)
java.lang.reflect.Field.getFieldAccessor(boolean)
javax.swing.JScrollBar.checkOrientation(int)
java.lang.String.charAt(int)
java.awt.datatransfer.SystemFlavorMap.init()
java.text.BreakIterator$BreakIteratorCache.init(java.util.Locale,java.text.BreakIterator)
org.codehaus.janino.Parser.parseClassBodyDeclaration(org.codehaus.janino.Java$ClassDeclaration)
java.awt.Window$WindowDisposerRecord.init(sun.awt.AppContext,java.awt.Window)
sun.reflect.ClassFileAssembler.init(sun.reflect.ByteVector)
java.util.regex.Pattern.init(java.lang.String,int)
java.awt.AWTEvent.convertToOld()
sun.awt.dnd.SunDropTargetContextPeer$EventDispatcher.unregisterEvent(sun.awt.dnd.SunDropTargetEvent)
sun.reflect.ClassFileAssembler.emitShort(short)
java.net.NetworkInterface.access$000(java.net.NetworkInterface)
sun.misc.FloatingDecimal.doubleValue()
org.sunflow.core.photonmap.GridPhotonMap.store(org.sunflow.core.ShadingState,org.sunflow.math.Vector3,org.sunflow.image.Color,org.sunflow.image.Color)
java.awt.image.ColorModel.getRed(java.lang.Object)
javax.swing.RepaintManager.currentManager(sun.awt.AppContext)
java.util.HashMap.putForNullKey(java.lang.Object)
org.sunflow.core.ParameterList$Parameter.getColor()
javax.swing.JComponent.getX()
javax.swing.text.StateInvariantError.init(java.lang.String)
org.sunflow.system.RenderGlobalsPanel.initGUI()
javax.swing.JRootPane.createContentPane()
sun.util.calendar.CalendarDate.clone()
java.lang.Shutdown.halt(int)
org.sunflow.util.FastHashMap$Entry.access$400(org.sunflow.util.FastHashMap$Entry)
java.awt.Component.gotFocus(java.awt.Event,java.lang.Object)
javax.swing.UIDefaults.getResourceCache(java.util.Locale)
org.sunflow.core.accel.UniformGrid.init()
sun.reflect.UnsafeQualifiedStaticObjectFieldAccessorImpl.init(java.lang.reflect.Field,boolean)
java.lang.StringBuilder.length()
org.sunflow.math.Matrix4.init(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float)
java.util.logging.LogManager$LoggerContext.demandLogger(java.lang.String,java.lang.String)
java.util.logging.LogManager$LoggerContext.getNode(java.lang.String)
java.lang.Math.min(float,float)
sun.misc.FDBigInt.init(sun.misc.FDBigInt)
org.sunflow.core.ParameterList$Parameter.access$1700(org.sunflow.core.ParameterList$Parameter)
java.lang.Character.isLetter(char)
java.awt.KeyboardFocusManager.setMostRecentFocusOwner(java.awt.Component)
org.sunflow.math.Matrix4.asRowMajor()
org.codehaus.janino.JavaSourceClassLoader.init(java.lang.ClassLoader,org.codehaus.janino.util.resource.ResourceFinder,java.lang.String,org.codehaus.janino.util.enumerator.EnumeratorSet)
java.net.SocketPermission.getMask(java.lang.String)
org.codehaus.janino.util.enumerator.EnumeratorSet.init(java.lang.Class,java.lang.String)
sun.awt.im.InputMethodLocator.init(java.awt.im.spi.InputMethodDescriptor,java.lang.ClassLoader,java.util.Locale)
java.awt.color.ColorSpace.getType()
org.codehaus.janino.util.iterator.DirectoryIterator$1.init(java.io.FilenameFilter,java.io.FilenameFilter,java.io.File)
java.lang.Throwable.printStackTraceAsCause(java.io.PrintStream,java.lang.StackTraceElement[])
java.awt.geom.AffineTransform.getRotateInstance(double,double)
org.codehaus.janino.tools.Disassembler.indent(java.lang.String)
java.lang.reflect.Field.getModifiers()
javax.swing.text.Segment.next()
java.util.regex.Pattern$Begin.init()
org.codehaus.janino.Java$BooleanRvalue.init(org.codehaus.janino.Location)
sun.awt.EmbeddedFrame.getAppletIfAncestorOf(java.awt.Component)
java.awt.Window.isFocusableWindow()
javax.swing.JRootPane.createRootLayout()
org.codehaus.janino.tools.Disassembler$ExceptionTableEntry.init(org.codehaus.janino.tools.Disassembler,short,short,short,short)
org.codehaus.janino.ScriptEvaluator.setReturnTypes(java.lang.Class[])
sun.reflect.misc.ReflectUtil.checkProxyPackageAccess(java.lang.Class)
java.util.Formatter$FormatSpecifier.failMismatch(java.util.Formatter$Flags,char)
sun.security.provider.PolicyFile.initPolicyFile(sun.security.provider.PolicyFile$PolicyInfo,java.net.URL)
java.lang.AssertionError.init(long)
sun.misc.FloatingDecimal.parseHexString(java.lang.String)
java.net.InetAddress.init()
javax.swing.text.SegmentCache.getSegment()
javax.swing.text.JTextComponent.setDocument(javax.swing.text.Document)
javax.swing.RepaintManager$DoubleBufferInfo.init(javax.swing.RepaintManager,javax.swing.RepaintManager$1)
org.codehaus.janino.Descriptor.isArrayReference(java.lang.String)
org.codehaus.janino.FilterWarningHandler.init(org.codehaus.janino.util.StringPattern[],org.codehaus.janino.WarningHandler)
org.codehaus.janino.Mod.shortToString(short)
java.lang.AbstractStringBuilder.append(java.lang.CharSequence,int,int)
java.util.Formatter.toString()
java.util.regex.Pattern$TreeInfo.init()
java.util.logging.Logger.getUseParentHandlers()
java.util.regex.Pattern$NotBehindS.init(java.util.regex.Pattern$Node,int,int)
java.lang.Error.init(java.lang.Throwable)
java.lang.ThreadGroup.addUnstarted()
javax.swing.JComponent.paintComponent(java.awt.Graphics)
sun.security.util.Debug.isOn(java.lang.String)
java.util.concurrent.ConcurrentHashMap$Segment.scanAndLockForPut(java.lang.Object,int,java.lang.Object)
java.util.Vector.ensureCapacityHelper(int)
java.lang.ClassLoader.checkCreateClassLoader()
java.lang.StringBuilder.append(char[],int,int)
java.text.AttributedString$AttributedStringIterator.init(java.text.AttributedString,java.text.AttributedCharacterIterator$Attribute[],int,int)
java.util.logging.LogManager.drainLoggerRefQueueBounded()
java.util.Formatter$FormatSpecifier.checkText()
org.codehaus.janino.util.Benchmark.endReporting()
java.lang.StringBuilder.append(java.lang.CharSequence,int,int)
java.awt.AWTEvent.init(java.lang.Object,int)
java.util.Arrays.copyOf(java.lang.Object[],int)
java.util.AbstractList.init()
org.codehaus.janino.Parser.parseRelationalExpression()
SunflowGUI$6.init(SunflowGUI)
SunflowGUI$10.init(SunflowGUI)
java.awt.Window.access$1000(java.awt.Window)
java.lang.NumberFormatException.forInputString(java.lang.String)
org.sunflow.core.Texture.load()
org.sunflow.core.shader.MirrorShader.init()
java.util.logging.LogManager$LogNode.walkAndSetParent(java.util.logging.Logger)
java.util.logging.LogRecord.getLevel()
java.beans.ChangeListenerMap.remove(java.lang.String,java.util.EventListener)
sun.util.calendar.ZoneInfo.getOffsets(long,int[])
javax.swing.JScrollPane.getVerticalScrollBar()
sun.reflect.misc.ReflectUtil.checkPackageAccess(java.lang.Class)
org.sunflow.system.Parser.peekNextToken(java.lang.String)
javax.swing.AbstractButton.setContentAreaFilled(boolean)
sun.misc.SoftCache$ValueCell.access$000(sun.misc.SoftCache$ValueCell)
sun.net.util.IPAddressUtil.isIPv4MappedAddress(byte[])
java.lang.ClassLoader.init(java.lang.ClassLoader)
org.codehaus.janino.util.Benchmark$1.init()
java.io.FileReader.init(java.lang.String)
java.awt.KeyboardFocusManager.setCurrentSequencedEvent(java.awt.SequencedEvent)
sun.awt.image.VSyncedBSManager$SingleVSyncedBSMgr.init(sun.awt.image.VSyncedBSManager$1)
java.util.HashSet.init()
org.sunflow.math.Vector3.init()
org.codehaus.janino.ScriptEvaluator.getMethod(int)
org.sunflow.core.shader.DiffuseShader.init()
java.awt.KeyboardFocusManager.getMostRecentFocusOwner(java.awt.Window)
org.sunflow.core.light.TriangleMeshLight.access$200(org.sunflow.core.light.TriangleMeshLight)
java.io.DataOutputStream.writeInt(int)
java.lang.Math.max(float,float)
java.net.Inet6Address$Inet6AddressHolder.init(byte[],java.net.NetworkInterface)
sun.awt.dnd.SunDropTargetContextPeer.access$402(sun.awt.dnd.SunDropTargetContextPeer,int)
java.util.regex.Pattern$NotBehind.init(java.util.regex.Pattern$Node,int,int)
java.awt.DefaultFocusTraversalPolicy.init()
java.net.Inet6Address.differentLocalAddressTypes(byte[],byte[])
java.lang.Class.isLocalOrAnonymousClass()
java.awt.datatransfer.MimeType.toString()
org.codehaus.janino.UnparseVisitor.unparse(org.codehaus.janino.Java$CompilationUnit,java.io.Writer)
java.util.SimpleTimeZone.decodeRules()
org.sunflow.SunflowAPI.parameter(java.lang.String,boolean)
java.util.concurrent.atomic.AtomicLong.set(long)
java.lang.Class.getMethod0(java.lang.String,java.lang.Class[])
javax.swing.text.AbstractDocument.createLeafElement(javax.swing.text.Element,javax.swing.text.AttributeSet,int,int)
java.util.TimeZone.getID()
java.text.DecimalFormatSymbols.getCurrency()
org.codehaus.janino.tools.Disassembler.print(java.lang.String)
sun.awt.X11GraphicsConfig.getProxyKey()
sun.misc.SoftCache$ValueCell.strip(java.lang.Object,boolean)
java.lang.ThreadLocal$ThreadLocalMap.init(java.lang.ThreadLocal$ThreadLocalMap,java.lang.ThreadLocal$1)
java.awt.LightweightDispatcher.dispose()
java.awt.dnd.DropTarget.getDropTargetContext()
java.text.DictionaryBasedBreakIterator.prepareCategoryFlags(byte[])
java.security.cert.CertificateEncodingException.init(java.lang.String)
java.awt.Component.processKeyEvent(java.awt.event.KeyEvent)
org.codehaus.janino.tools.Disassembler$8.init(long,org.codehaus.janino.tools.Disassembler)
org.sunflow.SunflowAPI.lookupOptions(java.lang.String)
java.awt.dnd.DropTarget.addNotify(java.awt.peer.ComponentPeer)
javax.swing.text.GapVector.shiftGapEndUp(int)
java.io.EOFException.init(java.lang.String)
javax.swing.JComponent.getManagingFocusForwardTraversalKeys()
java.nio.charset.Charset.lookup(java.lang.String)
java.util.regex.Pattern.append(int,int)
org.sunflow.core.ParameterList$Parameter.access$1500(org.sunflow.core.ParameterList$Parameter)
javax.swing.UIDefaults.getFromResourceBundle(java.lang.Object,java.util.Locale)
sun.awt.SunToolkit.awtUnlock()
sun.reflect.MethodAccessorGenerator.numNonPrimitiveParameterTypes()
java.awt.datatransfer.MimeType.getSubType()
java.lang.ClassLoader.isAncestor(java.lang.ClassLoader)
java.awt.event.InvocationEvent.init(java.lang.Object,java.lang.Runnable)
java.awt.LightweightDispatcher.enableEvents(long)
sun.reflect.UnsafeQualifiedFieldAccessorImpl.init(java.lang.reflect.Field,boolean)
sun.util.calendar.ZoneInfo.getOffsetsByStandard(long,int[])
org.codehaus.janino.Parser.parseEmptyStatement()
javax.swing.JComponent.dropLocationForPoint(java.awt.Point)
java.awt.AWTKeyStroke.getVKCollection()
org.sunflow.system.RenderGlobalsPanel.main(java.lang.String[])
java.awt.Component.addMouseListener(java.awt.event.MouseListener)
org.codehaus.janino.Java$ClassLiteral.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Type)
sun.reflect.ClassFileAssembler.opc_goto(sun.reflect.Label)
java.text.AttributedString.ensureRunBreak(int,boolean)
sun.reflect.NativeMethodAccessorImpl.init(java.lang.reflect.Method)
java.awt.event.InputMethodEvent.getWhen()
java.awt.Window.addNotify()
sun.java2d.loops.GraphicsPrimitive.makeUniqueID(int,sun.java2d.loops.SurfaceType,sun.java2d.loops.CompositeType,sun.java2d.loops.SurfaceType)
org.sunflow.SunflowAPI.options(java.lang.String)
sun.util.calendar.CalendarSystem.forName(java.lang.String)
java.awt.image.ColorModel.getColorSpace()
org.codehaus.janino.Java$AmbiguousName.init(org.codehaus.janino.Location,java.lang.String[])
org.sunflow.Benchmark$BenchmarkScene.init(org.sunflow.Benchmark)
sun.misc.FloatingDecimal.init(double)
java.nio.charset.Charset.name()
org.codehaus.janino.samples.DemoBase.stringToTypes(java.lang.String)
java.awt.Component.setBounds(int,int,int,int)
java.lang.Character.isValidCodePoint(int)
sun.reflect.ClassFileAssembler.emitByte(byte)
java.text.BreakDictionary$1.init(java.text.BreakDictionary,java.lang.String)
java.security.ProtectionDomain.implies(java.security.Permission)
org.sunflow.Benchmark.kernelMain()
org.codehaus.janino.util.StringPattern.init(java.lang.String)
org.codehaus.janino.Java$TryStatement.init(org.codehaus.janino.Location,org.codehaus.janino.Java$BlockStatement,java.util.List,org.codehaus.janino.Java$Block)
java.security.Policy.isSet()
sun.reflect.ReflectionFactory.newMethodAccessor(java.lang.reflect.Method)
javax.swing.JScrollPane.getViewport()
javax.swing.TimerQueue.init()
org.codehaus.janino.util.ClassFile$MethodInfo.store(java.io.DataOutputStream)
sun.util.resources.LocaleData.getAvailableLocales()
javax.swing.TimerQueue$1.init(javax.swing.TimerQueue,java.lang.ThreadGroup)
java.util.regex.Pattern.setDifference(java.util.regex.Pattern$CharProperty,java.util.regex.Pattern$CharProperty)
javax.swing.text.AbstractDocument.init(javax.swing.text.AbstractDocument$Content)
java.awt.KeyboardFocusManager.getGlobalFocusOwner()
java.nio.charset.Charset$2.init(java.lang.String)
java.awt.Window.init(java.awt.GraphicsConfiguration)
java.awt.event.MouseEvent.getXOnScreen()
java.util.regex.Pattern$2.init(int,int)
java.net.URL.getURLStreamHandler(java.lang.String)
java.awt.KeyboardFocusManager.setGlobalPermanentFocusOwner(java.awt.Component)
sun.reflect.UnsafeQualifiedStaticFloatFieldAccessorImpl.init(java.lang.reflect.Field,boolean)
java.awt.Font.getAttributeValues()
sun.awt.HeadlessToolkit.createKeyboardFocusManagerPeer(java.awt.KeyboardFocusManager)
org.sunflow.RenderObjectMap.lookupLight(java.lang.String)
sun.reflect.Reflection.filter(java.lang.reflect.Member[],java.lang.String[])
java.awt.Window.setWarningString()
java.awt.geom.RectangularShape.init()
java.lang.StringCoding$StringDecoder.decode(byte[],int,int)
org.sunflow.math.Vector3.length()
org.sunflow.core.LightServer.build(org.sunflow.core.Options)
org.sunflow.RenderObjectMap.update(java.lang.String,org.sunflow.core.ParameterList,org.sunflow.SunflowAPI)
java.awt.Component.reshapeNativePeer(int,int,int,int,int)
org.codehaus.janino.ClassBodyEvaluator.class$(java.lang.String)
java.lang.StringBuffer.append(java.lang.CharSequence,int,int)
java.io.PrintStream.print(java.lang.String)
java.lang.StringBuilder.init(java.lang.String)
java.text.BreakIterator.getWordInstance(java.util.Locale)
sun.java2d.loops.FillPath.locate(sun.java2d.loops.SurfaceType,sun.java2d.loops.CompositeType,sun.java2d.loops.SurfaceType)
java.util.WeakHashMap$Entry.init(java.lang.Object,java.lang.Object,java.lang.ref.ReferenceQueue,int,java.util.WeakHashMap$Entry)
javax.swing.text.AbstractDocument.remove(int,int)
java.lang.Boolean.init(boolean)
org.sunflow.system.RenderGlobalsPanel.initialize()
org.codehaus.janino.util.Benchmark.reportIndented(java.lang.String)
java.util.StringTokenizer.setMaxDelimCodePoint()
java.awt.event.InputEvent.canAccessSystemClipboard()
java.lang.ClassLoader.checkClassLoaderPermission(java.lang.ClassLoader,java.lang.Class)
javax.swing.JScrollPane.setViewportView(java.awt.Component)
java.awt.Component.isValid()
sun.reflect.ReflectionFactory.copyMethod(java.lang.reflect.Method)
org.codehaus.janino.Compiler.init(org.codehaus.janino.util.resource.ResourceFinder,org.codehaus.janino.IClassLoader,org.codehaus.janino.util.resource.ResourceFinder,org.codehaus.janino.util.resource.ResourceCreator,java.lang.String,boolean,org.codehaus.janino.util.enumerator.EnumeratorSet,org.codehaus.janino.WarningHandler)
java.util.concurrent.DelayQueue.init()
org.codehaus.janino.Parser.parsePrimary()
org.sunflow.core.gi.InstantGI$PointLightStore.store(org.sunflow.core.ShadingState,org.sunflow.math.Vector3,org.sunflow.image.Color,org.sunflow.image.Color)
org.codehaus.janino.ScriptEvaluator.setParameters(java.lang.String[][],java.lang.Class[][])
java.awt.Component.getGraphics()
java.awt.Component.setVisible(boolean)
java.lang.SecurityManager.getThreadGroup()
javax.swing.SwingUtilities.appContextGet(java.lang.Object)
java.awt.GraphicsConfiguration.createCompatibleVolatileImage(int,int,java.awt.ImageCapabilities,int)
java.awt.Component.getInputContext()
org.sunflow.core.shader.QuickGrayShader.init()
java.lang.Thread.getPriority()
org.codehaus.janino.Scanner.stringToIntegerLiteralToken(java.lang.String,int)
javax.swing.JRootPane$1.init(javax.swing.JRootPane)
java.awt.image.Raster.getNumBands()
java.util.MissingFormatArgumentException.init(java.lang.String)
org.sunflow.system.UI.taskStart(java.lang.String,int,int)
java.beans.PropertyChangeEvent.getNewValue()
sun.reflect.UnsafeQualifiedFloatFieldAccessorImpl.init(java.lang.reflect.Field,boolean)
javax.swing.text.AbstractDocument$DefaultDocumentEvent.init(javax.swing.text.AbstractDocument,int,int,javax.swing.event.DocumentEvent$EventType)
javax.swing.text.AbstractDocument.calculateBidiLevels(int,int)
java.lang.ThreadGroup.isDestroyed()
java.lang.String.valueOf(java.lang.Object)
java.beans.PropertyChangeSupport.addPropertyChangeListener(java.beans.PropertyChangeListener)
java.nio.charset.CoderResult$Cache.get(int)
org.codehaus.janino.ScriptEvaluator.evaluate(java.lang.Object[])
java.lang.Class.getMethod(java.lang.String,java.lang.Class[])
javax.swing.text.JTextComponent.select(int,int)
java.lang.Object.wait()
java.util.logging.Logger.updateEffectiveLevel()
java.net.URL.init(java.lang.String)
sun.awt.PaintEventDispatcher.setPaintEventDispatcher(sun.awt.PaintEventDispatcher)
java.util.ResourceBundle$CacheKey.access$600(java.util.ResourceBundle$CacheKey)
java.awt.geom.AffineTransform.createInverse()
javax.swing.text.DocumentFilter$FilterBypass.init()
sun.misc.SoftCache$ValueCell.access$300(java.lang.Object,boolean)
java.util.regex.Pattern$Curly.init(java.util.regex.Pattern$Node,int,int,int)
java.util.ResourceBundle$CacheKey.access$602(java.util.ResourceBundle$CacheKey,long)
java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)
SunflowGUI.usage(boolean)
java.text.AttributedString.getIterator()
java.awt.Component.getX()
java.awt.Component.getParent_NoClientCode()
java.util.regex.Matcher.search(int)
java.lang.Exception.init(java.lang.String,java.lang.Throwable)
java.lang.Class$1.init(java.lang.Class,java.lang.reflect.Constructor)
java.lang.ref.Reference.clear()
org.codehaus.janino.Java$Initializer.init(org.codehaus.janino.Location,boolean,org.codehaus.janino.Java$Block)
org.codehaus.janino.CompileException.init(java.lang.String,org.codehaus.janino.Location)
java.util.Formatter$Flags.toString()
javax.swing.DefaultBoundedRangeModel.init()
java.awt.dnd.DropTargetDragEvent.getLocation()
java.util.regex.Pattern.countCodePoints(java.lang.CharSequence)
java.util.Formatter$FixedString.init(java.util.Formatter,java.lang.String)
java.text.DateFormatSymbols.init(java.util.Locale)
java.nio.Bits.byteOrder()
java.util.ResourceBundle$Control.getTimeToLive(java.lang.String,java.util.Locale)
sun.misc.FDBigInt.quoRemIteration(sun.misc.FDBigInt)
SunflowGUI$21.init(SunflowGUI)
sun.java2d.loops.DrawGlyphList.locate(sun.java2d.loops.SurfaceType,sun.java2d.loops.CompositeType,sun.java2d.loops.SurfaceType)
sun.util.calendar.ZoneInfoFile.getZoneInfo(java.lang.String)
java.util.regex.ASCII.isHexDigit(int)
org.codehaus.janino.tools.Disassembler.println()
javax.swing.JComponent.printBorder(java.awt.Graphics)
java.awt.Frame.init(java.lang.String,java.awt.GraphicsConfiguration)
java.lang.Character.isLowerCase(int)
org.sunflow.math.BoundingBox.getCenter()
java.util.LinkedList.init()
java.util.Vector.elementData(int)
java.lang.String.replace(char,char)
sun.misc.Launcher.getLauncher()
org.sunflow.RenderObjectMap$RenderObjectHandle.access$1600(org.sunflow.RenderObjectMap$RenderObjectHandle)
java.util.regex.Pattern.c()
org.sunflow.core.LightServer.shadingCache(float)
java.util.regex.Pattern.compile(java.lang.String,int)
java.io.PrintStream.println(java.lang.Object)
java.util.regex.Matcher.match(int,int)
java.awt.event.AdjustmentEvent.getValueIsAdjusting()
java.io.BufferedReader.ensureOpen()
sun.util.calendar.Era.init(java.lang.String,java.lang.String,long,boolean)
org.codehaus.janino.Scanner$Token.isKeyword()
java.awt.Component.isPreferredSizeSet()
org.codehaus.janino.Scanner$Token.isOperator(java.lang.String)
org.codehaus.janino.Parser.parseContinueStatement()
java.util.logging.LogManager$LoggerWeakRef.setNode(java.util.logging.LogManager$LogNode)
java.awt.Window.init()
java.awt.dnd.DropTargetContext.getDropTarget()
sun.java2d.pipe.ShapeSpanIterator.init(boolean)
sun.util.calendar.CalendarDate.setLeapYear(boolean)
org.codehaus.janino.Scanner.init(java.lang.String,java.io.InputStream,java.lang.String)
sun.misc.SoftCache$ValueCell.init(java.lang.Object,java.lang.Object,java.lang.ref.ReferenceQueue)
org.sunflow.core.ParameterList.getFloat(java.lang.String,float)
sun.util.calendar.CalendarDate.getMonth()
sun.security.action.GetBooleanAction.init(java.lang.String)
java.nio.charset.CharsetEncoder.charset()
sun.awt.image.SunVolatileImage.getGraphicsConfig()
java.util.WeakHashMap.get(java.lang.Object)
java.awt.image.DirectColorModel.getRedMask()
org.codehaus.janino.Java$Invocation.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Rvalue[])
java.text.NumberFormat.getMinimumFractionDigits()
org.codehaus.janino.Parser.parseAndExpression()
sun.security.util.Debug.getInstance(java.lang.String,java.lang.String)
java.util.IllegalFormatException.init()
java.awt.KeyboardFocusManager.getCurrentKeyboardFocusManager(sun.awt.AppContext)
org.sunflow.math.Matrix4.transformPX(float,float,float)
org.sunflow.core.display.FileDisplay.init(java.lang.String)
java.lang.ThreadLocal$ThreadLocalMap.access$100(java.lang.ThreadLocal$ThreadLocalMap,java.lang.ThreadLocal,java.lang.Object)
java.awt.Insets.init(int,int,int,int)
java.util.concurrent.ConcurrentHashMap$HashEntry.setNext(java.util.concurrent.ConcurrentHashMap$HashEntry)
javax.swing.JComponent.getManagingFocusBackwardTraversalKeys()
java.lang.Character.toUpperCase(int)
java.util.ResourceBundle$Control.newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean)
org.codehaus.janino.Java$ArrayType.init(org.codehaus.janino.Java$Type)
java.lang.SecurityManager.checkSystemClipboardAccess()
java.awt.Component.adjustListeningChildrenOnParent(long,int)
java.awt.AWTKeyStroke.mapOldModifiers(int)
java.io.OutputStream.write(byte[],int,int)
java.util.AbstractList$Itr.init(java.util.AbstractList,java.util.AbstractList$1)
javax.swing.text.AbstractDocument.postRemoveUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent)
java.nio.charset.CharsetDecoder.reset()
org.sunflow.SunflowAPI.parameter(java.lang.String,float)
javax.swing.JComponent.shouldDebugGraphics()
java.util.Locale.getLanguage()
javax.swing.JRootPane.setDoubleBuffered(boolean)
sun.reflect.ReflectionFactory.newConstructorAccessor(java.lang.reflect.Constructor)
org.sunflow.core.ParameterList.addColor(java.lang.String,org.sunflow.image.Color)
java.awt.Component.isEnabled()
javax.swing.JViewport.computeBlit(int,int,java.awt.Point,java.awt.Point,java.awt.Dimension,java.awt.Rectangle)
java.text.SimpleDateFormat.init(java.lang.String,java.util.Locale)
sun.reflect.ClassFileAssembler.decStack()
java.lang.ThreadGroup.getMaxPriority()
sun.reflect.UnsafeQualifiedShortFieldAccessorImpl.init(java.lang.reflect.Field,boolean)
org.codehaus.janino.Java$InterfaceDeclaration.init(org.codehaus.janino.Location,java.lang.String,short,java.lang.String,org.codehaus.janino.Java$Type[])
sun.awt.image.SurfaceManager.flush()
javax.swing.JScrollPane.createHorizontalScrollBar()
java.lang.SecurityManager.checkConnect(java.lang.String,int)
java.text.BreakIterator.setText(java.lang.String)
java.awt.event.MouseEvent.setNewModifiers()
sun.java2d.opengl.GLXGraphicsConfig.isCapPresent(int)
java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale)
sun.reflect.AccessorGenerator.isPrimitive(java.lang.Class)
java.awt.Component.setBoundsOp(int)
java.util.AbstractQueue.init()
java.util.Arrays.copyOf(int[],int)
java.util.regex.Pattern.split(java.lang.CharSequence,int)
java.awt.EventQueue.getMostRecentEventTimeImpl()
sun.awt.image.ByteComponentRaster.getDataStorage()
java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetWaitStatus(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,int,int)
org.codehaus.janino.Parser.parseModifiersOpt()
org.sunflow.Benchmark$BenchmarkScene.sphere(java.lang.String,java.lang.String,float,float,float,float)
sun.reflect.UnsafeStaticShortFieldAccessorImpl.init(java.lang.reflect.Field)
javax.swing.text.StyleContext.addStyle(java.lang.String,javax.swing.text.Style)
java.util.ResourceBundle$Control.getCandidateLocales(java.lang.String,java.util.Locale)
java.beans.PropertyChangeSupport.fire(java.beans.PropertyChangeListener[],java.beans.PropertyChangeEvent)
java.net.InetAddress.getByAddress(java.lang.String,byte[])
java.lang.UnsupportedOperationException.init()
javax.swing.text.Segment.init()
java.awt.event.KeyEvent.getKeyChar()
org.sunflow.system.UI.taskUpdate(int)
java.awt.Rectangle.setBounds(java.awt.Rectangle)
org.codehaus.janino.Java$NewClassInstance.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Rvalue,org.codehaus.janino.Java$Type,org.codehaus.janino.Java$Rvalue[])
java.util.regex.Pattern$SliceNode.init(int[])
java.util.Currency.init(java.lang.String,int,int)
java.util.Calendar.init(java.util.TimeZone,java.util.Locale)
org.sunflow.core.ParameterList$Parameter.access$2000(org.sunflow.core.ParameterList$Parameter)
org.sunflow.system.SearchPath.resolvePath(java.lang.String)
java.awt.datatransfer.MimeTypeParameterList.parse(java.lang.String)
java.awt.AWTEventMulticaster.addInternal(java.util.EventListener,java.util.EventListener)
java.lang.Character.toUpperCaseCharArray(int)
java.util.ArrayList.size()
java.awt.Container.recursiveApplyCurrentShape(int,int)
java.awt.Component.getChangeSupportLock()
org.codehaus.janino.Java$CompilationUnit$SingleTypeImportDeclaration.init(org.codehaus.janino.Location,java.lang.String[])
javax.swing.SwingUtilities.computeIntersection(int,int,int,int,java.awt.Rectangle)
java.io.DataInputStream.read(byte[])
org.codehaus.janino.Parser.parseQualifiedIdentifier()
sun.java2d.pipe.Region.getIntersectionXYXY(int,int,int,int)
java.util.HashMap.init(java.util.Map)
java.lang.String.startsWith(java.lang.String,int)
java.util.EventListenerProxy.getListener()
java.awt.geom.Point2D$Double.init(double,double)
sun.awt.image.ByteComponentRaster.getScanlineStride()
java.lang.Throwable.toString()
org.codehaus.janino.Descriptor.isPrimitive(java.lang.String)
javax.swing.DebugGraphics.init(java.awt.Graphics)
java.text.AttributedString.init(java.text.AttributedCharacterIterator,int,int,java.text.AttributedCharacterIterator$Attribute[])
javax.swing.JRootPane$RootLayout.init(javax.swing.JRootPane)
org.codehaus.janino.Scanner.peek()
javax.swing.JTextField.setDocument(javax.swing.text.Document)
java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)
sun.misc.Unsafe.getUnsafe()
java.util.Calendar.setTimeInMillis(long)
sun.util.calendar.ZoneInfo.clone()
java.util.Hashtable.rehash()
org.sunflow.system.ImagePanel$ScrollZoomListener.init(org.sunflow.system.ImagePanel)
javax.swing.AbstractButton.doClick()
sun.font.FontManager.isNonSimpleChar(char)
java.nio.CharBuffer.init(int,int,int,int,char[],int)
sun.awt.SunToolkit$2.init()
java.beans.PropertyChangeSupport.firePropertyChange(java.beans.PropertyChangeEvent)
org.codehaus.janino.util.resource.DirectoryResourceCreator.init(java.io.File)
org.codehaus.janino.CachingJavaSourceClassLoader.init(java.lang.ClassLoader,java.io.File[],java.lang.String,java.io.File,org.codehaus.janino.util.enumerator.EnumeratorSet)
org.codehaus.janino.Java$SwitchStatement.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Rvalue,java.util.List)
javax.swing.JScrollPane.setLayout(java.awt.LayoutManager)
java.lang.Integer.toHexString(int)
org.codehaus.janino.Compiler.compile(java.io.File[])
java.awt.event.KeyAdapter.init()
SunflowGUI$2.init(SunflowGUI)
java.lang.StringBuffer.substring(int)
org.sunflow.image.Color.copy()
java.util.logging.Logger.getLogger(java.lang.String)
java.lang.LinkageError.init(java.lang.String)
java.text.BreakIterator$BreakIteratorCache.createBreakInstance()
javax.swing.text.PlainDocument.createDefaultRoot()
sun.util.calendar.AbstractCalendar.getDayOfWeekDateBefore(long,int)
java.util.HashMap.addEntry(int,java.lang.Object,java.lang.Object,int)
java.util.HashMap$Entry.recordRemoval(java.util.HashMap)
javax.swing.RepaintManager$ProcessingRunnable.markPending()
org.codehaus.janino.Parser.parseDoStatement()
javax.swing.MultiUIDefaults.init(javax.swing.UIDefaults[])
org.codehaus.janino.Java$MethodDeclarator.init(org.codehaus.janino.Location,java.lang.String,short,org.codehaus.janino.Java$Type,java.lang.String,org.codehaus.janino.Java$FunctionDeclarator$FormalParameter[],org.codehaus.janino.Java$Type[],org.codehaus.janino.Java$Block)
java.lang.ThreadLocal.get()
java.awt.AWTEventMulticaster.add(java.awt.event.ComponentListener,java.awt.event.ComponentListener)
sun.awt.SunToolkit.getAppContext(java.lang.Object)
org.sunflow.core.display.ImgPipeDisplay.imagePrepare(int,int,int,int,int)
javax.swing.text.AbstractDocument.handleInsertString(int,java.lang.String,javax.swing.text.AttributeSet)
sun.awt.dnd.SunDropTargetContextPeer$EventDispatcher.dispatchExitEvent(sun.awt.dnd.SunDropTargetEvent)
org.sunflow.Benchmark.init()
java.awt.KeyboardFocusManager.getFocusOwner()
java.nio.charset.CharsetDecoder.charset()
org.codehaus.janino.Java$QualifiedThisReference.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Type)
java.awt.KeyboardFocusManager.retargetFocusGained(java.awt.event.FocusEvent)
java.util.concurrent.locks.AbstractQueuedSynchronizer.release(int)
java.awt.GraphicsEnvironment.getCenterPoint()
java.security.AccessControlContext.containsAllPDs(java.security.ProtectionDomain[],java.security.ProtectionDomain[])
javax.swing.text.Segment.current()
java.awt.event.FocusEvent.getOppositeComponent()
org.sunflow.core.tesselatable.Teapot.init()
java.util.concurrent.locks.ReentrantLock$Sync.newCondition()
java.awt.Image.init()
javax.swing.RepaintManager$ProcessingRunnable.init(javax.swing.RepaintManager,javax.swing.RepaintManager$1)
java.awt.Rectangle.intersection(java.awt.Rectangle)
javax.swing.text.AbstractDocument.getAttributeContext()
java.awt.Component.invalidateIfValid()
java.io.Writer.init(java.lang.Object)
sun.awt.SunToolkit.createLayoutPolicy()
java.util.ResourceBundle$Control.toBundleName(java.lang.String,java.util.Locale)
java.lang.Character.toCodePoint(char,char)
org.codehaus.janino.tools.Disassembler.indentln(java.lang.String)
java.security.Permission.init(java.lang.String)
java.lang.reflect.Modifier.isPublic(int)
org.codehaus.janino.tools.Disassembler$15.init(short[],org.codehaus.janino.tools.Disassembler)
org.sunflow.system.Parser$ParserException.init(java.lang.String,java.lang.String,org.sunflow.system.Parser$1)
java.awt.Component.getLocationOnScreen()
java.lang.reflect.Constructor.getExceptionTypes()
java.util.Vector.init(int,int)
javax.swing.AbstractButton.getMnemonic()
sun.net.www.ParseUtil.encodePath(java.lang.String,boolean)
java.awt.event.ComponentAdapter.init()
java.lang.ThreadLocal$ThreadLocalMap.setThreshold(int)
java.util.logging.Level$KnownLevel.findByName(java.lang.String)
org.sunflow.core.ParameterList$FloatParameter.init(org.sunflow.core.ParameterList$InterpolationType,float[])
java.util.Calendar.setWeekCountData(java.util.Locale)
sun.misc.FloatingDecimal.getChars(char[])
java.util.regex.Pattern$CharProperty.maybeComplement(boolean)
sun.reflect.MethodAccessorGenerator.isInterface()
java.lang.NoSuchFieldException.init(java.lang.String)
java.awt.Component.hasFocus()
org.sunflow.math.Matrix4.rotateZ(float)
org.codehaus.janino.Java$NewInitializedArray.init(org.codehaus.janino.Location,org.codehaus.janino.Java$ArrayType,org.codehaus.janino.Java$ArrayInitializer)
org.codehaus.janino.util.enumerator.EnumeratorFormatException.init(java.lang.String)
java.lang.Class.reflectionData()
java.lang.String.init(java.lang.String)
java.lang.Character.isUpperCase(char)
java.lang.ClassLoader.findResource(java.lang.String)
java.text.BreakIterator.isBoundary(int)
java.lang.Throwable.getMessage()
java.lang.Long.valueOf(long)
org.codehaus.janino.Parser.readOperator()
java.security.AccessController.getContext()
java.lang.Character.toLowerCase(int)
java.lang.Character.isJavaIdentifierPart(int)
org.codehaus.janino.UnitCompiler.init(org.codehaus.janino.Java$CompilationUnit,org.codehaus.janino.IClassLoader)
sun.reflect.AccessorGenerator.emitMethod(short,int,sun.reflect.ClassFileAssembler,sun.reflect.ClassFileAssembler,short[])
sun.java2d.loops.GraphicsPrimitiveMgr.locatePrim(int,sun.java2d.loops.SurfaceType,sun.java2d.loops.CompositeType,sun.java2d.loops.SurfaceType)
org.codehaus.janino.ScriptEvaluator.createFastEvaluator(org.codehaus.janino.ScriptEvaluator,java.lang.String,java.lang.String[],java.lang.Class)
org.codehaus.janino.Parser.parseImportDeclaration()
java.awt.Dimension.getHeight()
sun.java2d.pipe.Region.isEmpty()
javax.swing.event.EventListenerList.remove(java.lang.Class,java.util.EventListener)
java.awt.Component.isLightweight()
javax.swing.JComponent.checkIfChildObscuredBySibling()
java.beans.ChangeListenerMap.get(java.lang.String)
java.text.AttributedCharacterIterator$Attribute.equals(java.lang.Object)
org.sunflow.core.shader.AmbientOcclusionShader.init()
javax.swing.text.StyleContext$NamedStyle.init(javax.swing.text.StyleContext,javax.swing.text.Style)
java.awt.Component.requestFocusInWindow(sun.awt.CausedFocusEvent$Cause)
java.util.Formatter$Flags.access$100(java.util.Formatter$Flags,java.util.Formatter$Flags)
java.util.HashMap.init(int,float)
java.net.Inet6Address.init(java.lang.String,byte[])
org.codehaus.janino.Parser.parseCompilationUnit()
javax.swing.plaf.metal.MetalTheme.init()
javax.swing.text.AbstractDocument.replace(int,int,java.lang.String,javax.swing.text.AttributeSet)
javax.swing.text.StyleContext$NamedStyle.setName(java.lang.String)
sun.reflect.UnsafeObjectFieldAccessorImpl.init(java.lang.reflect.Field)
java.lang.String.valueOf(char)
java.util.Arrays.sort(java.lang.Object[],java.util.Comparator)
java.awt.dnd.DropTargetDropEvent.getLocation()
org.codehaus.janino.Parser.verifyIdentifierIsConventionalClassOrInterfaceName(java.lang.String,org.codehaus.janino.Location)
sun.reflect.MethodAccessorGenerator.generate(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Class,java.lang.Class[],int,boolean,boolean,java.lang.Class)
java.awt.KeyboardFocusManager.focusedWindowChanged(java.awt.Component,java.awt.Component)
java.io.FileReader.init(java.io.File)
org.codehaus.janino.IClassLoader.loadIClass(java.lang.String)
sun.awt.dnd.SunDropTargetContextPeer.access$400(sun.awt.dnd.SunDropTargetContextPeer)
java.awt.event.KeyEvent.setNewModifiers()
java.text.NumberFormat$NumberFormatGetter.access$000()
org.codehaus.janino.Parser.verifyIdentifierIsConventionalLocalVariableOrParameterName(java.lang.String,org.codehaus.janino.Location)
java.util.WeakHashMap.maskNull(java.lang.Object)
java.awt.Component.isRequestFocusAccepted(boolean,boolean,sun.awt.CausedFocusEvent$Cause)
java.awt.Image.flush()
java.awt.PopupMenu.addNotify()
javax.swing.JLabel.getDisplayedMnemonic()
javax.swing.Timer$DoPostEvent.init(javax.swing.Timer)
javax.swing.UIDefaults.getUIClass(java.lang.String,java.lang.ClassLoader)
javax.swing.text.Segment.init(char[],int,int)
java.awt.EventQueue.removeSourceEvents(java.lang.Object,boolean)
java.util.ResourceBundle$CacheKey.getName()
java.lang.AbstractStringBuilder.init(int)
java.awt.AWTEventMulticaster.remove(java.awt.event.ComponentListener,java.awt.event.ComponentListener)
org.sunflow.math.BoundingBox.init()
javax.swing.JComponent.paintImmediately(int,int,int,int)
java.awt.Container.recursiveSubtractAndApplyShape(sun.java2d.pipe.Region,int,int)
org.codehaus.janino.util.ClassFile.storeFields(java.io.DataOutputStream,java.util.List)
java.lang.ref.WeakReference.init(java.lang.Object,java.lang.ref.ReferenceQueue)
java.beans.PropertyChangeSupport$PropertyChangeListenerMap.init()
sun.reflect.Reflection.filterMethods(java.lang.Class,java.lang.reflect.Method[])
java.lang.Long.parseLong(java.lang.String,int)
org.sunflow.core.light.TriangleMeshLight$TriangleLight.init(org.sunflow.core.light.TriangleMeshLight,int)
org.sunflow.SunflowAPI.parameter(java.lang.String,java.lang.String,java.lang.String,float[])
java.util.Date.getTime()
javax.swing.FocusManager.isFocusManagerEnabled()
java.lang.Runtime.getRuntime()
java.io.BufferedReader.readLine()
org.codehaus.janino.Java$PackageMemberInterfaceDeclaration.init(org.codehaus.janino.Location,java.lang.String,short,java.lang.String,org.codehaus.janino.Java$Type[])
java.awt.image.DirectColorModel.getBlueMask()
java.awt.Button.getLabel()
java.awt.geom.AffineTransform.init()
sun.misc.URLClassPath.init(java.net.URL[],java.net.URLStreamHandlerFactory)
java.io.BufferedWriter.newLine()
java.awt.Component.setLocale(java.util.Locale)
java.awt.Component.createHierarchyEvents(int,java.awt.Component,java.awt.Container,long,boolean)
sun.security.action.GetPropertyAction.init(java.lang.String)
java.io.File.exists()
java.util.regex.Pattern.read()
javax.swing.undo.CompoundEdit.end()
javax.swing.JComponent.safelyGetGraphics(java.awt.Component,java.awt.Component)
java.lang.ClassLoader.checkName(java.lang.String)
java.awt.IllegalComponentStateException.init(java.lang.String)
java.util.Currency.getInstance(java.lang.String)
org.codehaus.janino.tools.Disassembler$13.init(org.codehaus.janino.tools.Disassembler$AttributeInfo[],byte[],org.codehaus.janino.tools.Disassembler$ExceptionTableEntry[],short,short,org.codehaus.janino.tools.Disassembler)
java.lang.AbstractStringBuilder.getChars(int,int,char[],int)
org.sunflow.system.ui.ConsoleInterface.init()
java.awt.AWTEvent.copyPrivateDataInto(java.awt.AWTEvent)
javax.swing.AbstractButton$Handler.init(javax.swing.AbstractButton)
java.util.Properties$LineReader.readLine()
java.util.Arrays.copyOfRange(char[],int,int)
SunflowGUI.main(java.lang.String[])
java.util.Formatter.init()
java.util.concurrent.locks.ReentrantReadWriteLock.init()
javax.swing.JComponent.revalidate()
sun.util.calendar.CalendarDate.getMinutes()
sun.java2d.pipe.Region.getTranslatedRegion(int,int)
java.util.HashMap.values()
sun.misc.Launcher$1.init(java.lang.String)
sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor(java.lang.reflect.Field,boolean)
sun.awt.PostEventQueue.flush()
sun.util.calendar.CalendarDate.getZone()
java.util.regex.ASCII.getType(int)
javax.swing.ToolTipManager$insideTimerAction.init(javax.swing.ToolTipManager)
java.util.regex.Matcher.replaceFirst(java.lang.String)
sun.util.resources.LocaleData.getBundle(java.lang.String,java.util.Locale)
javax.swing.AbstractButton.init()
java.lang.SecurityManager.checkPermission(java.security.Permission)
javax.swing.JScrollPane.init(java.awt.Component,int,int)
java.text.DecimalFormat.getMinimumIntegerDigits()
javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent,java.awt.Image,java.awt.Graphics,int,int,int,int)
org.codehaus.janino.Java$Block.addStatement(org.codehaus.janino.Java$BlockStatement)
java.util.regex.Matcher.start()
java.nio.BufferUnderflowException.init()
javax.swing.SwingUtilities.findDisplayedMnemonicIndex(java.lang.String,int)
java.lang.reflect.Modifier.isVolatile(int)
sun.misc.Launcher.getBootstrapClassPath()
sun.awt.AppContext.getAppContext()
java.lang.RuntimeException.init()
sun.reflect.AccessorGenerator.ctorIndexForPrimitiveType(java.lang.Class)
org.sunflow.core.ParameterList.addInteger(java.lang.String,int)
java.util.regex.Pattern$BehindS.init(java.util.regex.Pattern$Node,int,int)
sun.reflect.NativeConstructorAccessorImpl.init(java.lang.reflect.Constructor)
org.codehaus.janino.util.StringPattern.parseCombinedPattern(java.lang.String)
java.lang.StringBuffer.getChars(int,int,char[],int)
java.awt.Frame.init()
java.util.TimeZone.getDefault()
sun.awt.image.SunVolatileImage.init(java.awt.GraphicsConfiguration,int,int,int,java.awt.ImageCapabilities)
java.awt.event.AdjustmentEvent.getValue()
org.codehaus.janino.Parser.parseArgumentList()
sun.security.provider.PolicyFile$PolicyInfo.init(int)
org.sunflow.core.tesselatable.Gumbo.init()
org.sunflow.system.SearchPath.init(java.lang.String)
java.lang.ClassNotFoundException.init(java.lang.String)
java.net.Inet6Address.access$000(byte[],java.net.NetworkInterface)
sun.util.calendar.ZoneInfoFile.toCustomID(int)
java.util.logging.Logger.log(java.util.logging.Level,java.lang.String)
javax.swing.AbstractButton.setEnabled(boolean)
java.lang.String.init(byte[],int,int,java.lang.String)
java.lang.ThreadLocal.setInitialValue()
org.codehaus.janino.tools.Disassembler.main(java.lang.String[])
javax.swing.JViewport.removeChangeListener(javax.swing.event.ChangeListener)
sun.awt.AppContext.get(java.lang.Object)
java.io.PrintStream.ensureOpen()
sun.awt.dnd.SunDropTargetContextPeer.access$000(sun.awt.dnd.SunDropTargetContextPeer)
java.awt.datatransfer.SystemFlavorMap.continueLine(java.lang.String)
sun.reflect.UnsafeQualifiedCharacterFieldAccessorImpl.init(java.lang.reflect.Field,boolean)
sun.reflect.UnsafeQualifiedStaticBooleanFieldAccessorImpl.init(java.lang.reflect.Field,boolean)
javax.swing.UIManager.getLookAndFeel()
org.codehaus.janino.tools.Disassembler$11.init(short,org.codehaus.janino.tools.Disassembler$AttributeInfo[],short,short,org.codehaus.janino.tools.Disassembler)
javax.swing.UIDefaults.getColor(java.lang.Object)
javax.swing.JComponent.printChildren(java.awt.Graphics)
java.net.UnknownHostException.init(java.lang.String)
java.util.ResourceBundle$CacheKey.setFormat(java.lang.String)
java.util.ResourceBundle.throwMissingResourceException(java.lang.String,java.util.Locale,java.lang.Throwable)
java.awt.Component.getName()
javax.swing.UIManager.getCrossPlatformLookAndFeelClassName()
org.sunflow.RenderObjectMap.init()
java.lang.Character.forDigit(int,int)
java.text.NumberFormat.getIntegerInstance(java.util.Locale)
java.lang.StringBuilder.append(float)
org.codehaus.janino.tools.Disassembler.setVerbose(boolean)
java.awt.image.Raster.getDataElements(int,int,java.lang.Object)
java.util.WeakHashMap.newTable(int)
java.util.Calendar.createCalendar(java.util.TimeZone,java.util.Locale)
java.lang.ConditionalSpecialCasing.isFinalCased(java.lang.String,int,java.util.Locale)
java.io.File.isFile()
java.util.regex.Pattern.next()
sun.font.AttributeValues.setSize(float)
java.awt.Insets.equals(java.lang.Object)
java.io.InputStream.read(byte[])
java.security.AccessControlContext$1.init(java.security.AccessControlContext,sun.security.util.Debug,java.security.ProtectionDomain)
java.io.ByteArrayOutputStream.init(int)
org.sunflow.core.ParameterList$Parameter.getIntValue()
java.awt.Component.getNativeContainer()
javax.swing.JComponent.setCreatedDoubleBuffer(boolean)
java.awt.Window.getFocusableWindowState()
javax.swing.JComponent.paintBorder(java.awt.Graphics)
javax.swing.event.EventListenerList.init()
sun.java2d.x11.X11Renderer$X11TracingRenderer.init()
java.awt.event.InputEvent.getWhen()
org.codehaus.janino.util.iterator.DirectoryIterator$1$State.init(java.io.FilenameFilter,java.io.FilenameFilter,org.codehaus.janino.util.iterator.DirectoryIterator$1,java.io.File)
java.util.logging.Logger$1.init(java.util.Locale)
java.lang.Class$EnclosingMethodInfo.init(java.lang.Object[])
java.awt.event.ActionEvent.getModifiers()
sun.util.calendar.LocalGregorianCalendar.init(java.lang.String,sun.util.calendar.Era[])
sun.reflect.MethodAccessorGenerator.generateConstructor(java.lang.Class,java.lang.Class[],java.lang.Class[],int)
sun.reflect.AccessorGenerator.getClassName(java.lang.Class,boolean)
SunflowGUI$5.init(SunflowGUI)
java.lang.ThreadLocal.set(java.lang.Object)
org.sunflow.core.TextureCache.getTexture(java.lang.String,boolean)
java.util.regex.Pattern$Branch.init(java.util.regex.Pattern$Node,java.util.regex.Pattern$Node,java.util.regex.Pattern$Node)
javax.swing.UIDefaults.put(java.lang.Object,java.lang.Object)
sun.java2d.loops.SurfaceType.getUniqueID()
java.lang.AbstractStringBuilder.expandCapacity(int)
java.io.PrintWriter.println()
java.security.Permission.getName()
sun.reflect.UnsafeIntegerFieldAccessorImpl.init(java.lang.reflect.Field)
java.lang.ThreadLocal$ThreadLocalMap.access$000(java.lang.ThreadLocal$ThreadLocalMap,java.lang.ThreadLocal)
sun.misc.SoftCache$ValueCell.isValid()
org.codehaus.janino.Java$WhileStatement.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Rvalue,org.codehaus.janino.Java$BlockStatement)
java.nio.charset.Charset.cache(java.lang.String,java.nio.charset.Charset)
java.net.InetAddress$InetAddressHolder.init()
org.codehaus.janino.Java$DoStatement.init(org.codehaus.janino.Location,org.codehaus.janino.Java$BlockStatement,org.codehaus.janino.Java$Rvalue)
org.codehaus.janino.SimpleCompiler.precook()
org.codehaus.janino.Java$ForStatement.init(org.codehaus.janino.Location,org.codehaus.janino.Java$BlockStatement,org.codehaus.janino.Java$Rvalue,org.codehaus.janino.Java$Rvalue[],org.codehaus.janino.Java$BlockStatement)
java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(java.lang.Thread)
org.sunflow.core.shader.UVShader.init()
org.sunflow.RenderObjectMap$RenderObjectHandle.access$200(org.sunflow.RenderObjectMap$RenderObjectHandle)
org.codehaus.janino.samples.DeclarationCounter.main(java.lang.String[])
org.codehaus.janino.Scanner$LocatedException.getMessage()
java.util.Formatter$Conversion.isText(char)
org.codehaus.janino.tools.JGrep.parseMethodInvocationPattern(java.lang.String)
javax.swing.RepaintManager.endPaint()
sun.reflect.MethodAccessorGenerator.buildInternalSignature()
java.lang.Character.toLowerCase(char)
java.lang.String.split(java.lang.String,int)
java.awt.image.ColorModel.getTransferType()
java.awt.event.MouseWheelEvent.init(java.awt.Component,int,long,int,int,int,int,int,int,boolean,int,int,int)
java.text.DateFormatSymbols.cacheLookup(java.util.Locale)
sun.reflect.UTF8.encode(java.lang.String)
java.lang.Character.isLowSurrogate(char)
java.awt.Window.setTemporaryLostComponent(java.awt.Component)
java.nio.charset.CharsetEncoder.onMalformedInput(java.nio.charset.CodingErrorAction)
sun.reflect.ClassFileAssembler.opc_dup()
org.codehaus.janino.Scanner$Token.getLiteralValue()
sun.util.calendar.CalendarDate.getMillis()
org.sunflow.Benchmark$BenchmarkScene.buildCornellBox()
java.text.DecimalFormatSymbols.getMinusSign()
org.sunflow.core.display.FastDisplay.paint(java.awt.Graphics)
sun.misc.FDBigInt.add(sun.misc.FDBigInt)
java.text.StringCharacterIterator.init(java.lang.String)
java.util.ResourceBundle$BundleReference.init(java.util.ResourceBundle,java.lang.ref.ReferenceQueue,java.util.ResourceBundle$CacheKey)
sun.awt.AppContext$3.init()
org.sunflow.util.FastHashMap.resize(int)
sun.awt.image.BufImgSurfaceData.createData(java.awt.image.BufferedImage)
sun.reflect.UTF8.utf8Length(java.lang.String)
java.awt.Dialog.unblockWindow(java.awt.Window)
java.io.ByteArrayOutputStream.size()
javax.swing.LookAndFeel.provideErrorFeedback(java.awt.Component)
sun.awt.im.InputMethodLocator.getLocale()
javax.swing.DebugGraphics.debugComponentCount()
java.util.MissingResourceException.init(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)
java.lang.StringBuffer.init(java.lang.String)
java.awt.Component.getFont()
sun.util.calendar.ZoneInfo.getLastRule()
org.sunflow.math.Matrix4.rotateX(float)
org.codehaus.janino.util.resource.FileResourceFinder.init()
org.sunflow.core.ParameterList$Parameter.access$1300(org.sunflow.core.ParameterList$Parameter)
java.util.AbstractCollection.isEmpty()
java.util.regex.Pattern$Ctype.init(int)
java.awt.Component.calculateCurrentShape()
sun.util.calendar.ZoneInfo.getLastRuleInstance()
javax.swing.JLabel.setIcon(javax.swing.Icon)
org.codehaus.janino.Cookable.cook(java.lang.String,java.io.InputStream,java.lang.String)
java.awt.datatransfer.MimeType.parse(java.lang.String)
java.lang.Integer.parseInt(java.lang.String,int)
org.sunflow.core.shader.ShinyDiffuseShader.init()
sun.swing.AccessibleMethod$AccessMethodAction.init(java.lang.Class,java.lang.String,java.lang.Class[])
java.beans.PropertyChangeSupport.addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)
javax.swing.text.SegmentCache.getSharedInstance()
org.sunflow.Benchmark.init(int,boolean,boolean,boolean,int)
java.lang.ThreadLocal.getMap(java.lang.Thread)
java.lang.ThreadLocal$ThreadLocalMap.nextIndex(int,int)
sun.util.calendar.ZoneInfoFile.getFileName(java.lang.String)
org.codehaus.janino.tools.JGrep$1.init()
org.codehaus.janino.Java$AnonymousClassDeclaration.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Type)
sun.awt.im.InputContext.getComponentWindow(java.awt.Component)
java.util.Collections.unmodifiableSet(java.util.Set)
java.util.concurrent.locks.ReentrantLock.lock()
java.beans.PropertyChangeSupport.removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)
java.awt.Rectangle.union(java.awt.Rectangle)
java.text.SimpleDateFormat.compile(java.lang.String)
java.util.regex.Pattern.range(java.util.regex.Pattern$BitClass)
sun.java2d.loops.DrawPolygons.locate(sun.java2d.loops.SurfaceType,sun.java2d.loops.CompositeType,sun.java2d.loops.SurfaceType)
sun.java2d.loops.SurfaceType.equals(java.lang.Object)
java.awt.Component.canBeFocusOwner()
org.sunflow.core.photonmap.GridPhotonMap.getRadiance(org.sunflow.math.Point3,org.sunflow.math.Vector3)
org.sunflow.Benchmark.kernelEnd()
sun.java2d.pipe.Region.getIntersection(java.awt.Rectangle)
javax.swing.plaf.metal.DefaultMetalTheme$WindowsFontDelegate.init()
java.awt.image.ColorModel.isCompatibleRaster(java.awt.image.Raster)
javax.swing.text.AbstractDocument$ElementEdit.init(javax.swing.text.Element,int,javax.swing.text.Element[],javax.swing.text.Element[])
java.security.ProtectionDomain.getCodeSource()
org.sunflow.core.LightServer.calculatePhotons(org.sunflow.core.PhotonStore,java.lang.String,int)
java.lang.StringCoding$StringDecoder.requestedCharsetName()
org.codehaus.janino.tools.JGrep.jGrep(java.util.Iterator,java.util.List)
java.lang.reflect.InvocationTargetException.getCause()
java.lang.Thread$1.init(java.lang.Class)
java.awt.event.InputEvent.init(java.awt.Component,int,long,int)
java.awt.AWTEventMulticaster.add(java.awt.event.FocusListener,java.awt.event.FocusListener)
sun.util.calendar.CalendarDate.getDayOfMonth()
sun.java2d.pipe.Region.getBounds(int[])
java.lang.Math.toRadians(double)
java.awt.Container.doLayout()
java.util.concurrent.locks.ReentrantReadWriteLock$Sync.init()
java.awt.Component.checkTreeLock()
java.lang.StringCoding.deref(java.lang.ThreadLocal)
org.sunflow.system.Parser.getNextLine()
java.util.SimpleTimeZone.getOffset(long)
javax.accessibility.AccessibleContext.firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)
java.util.Currency.getInstance(java.lang.String,int,int)
sun.java2d.SunGraphics2D.setDevClip(java.awt.Rectangle)
sun.awt.image.ShortComponentRaster.getPixelStride()
java.text.RuleBasedBreakIterator.readFile(java.lang.String)
java.awt.image.ColorModel.getRGB(java.lang.Object)
javax.swing.text.StyleContext$NamedStyle.addAttribute(java.lang.Object,java.lang.Object)
java.security.AccessControlContext.combine(java.security.ProtectionDomain[],java.security.ProtectionDomain[])
java.awt.Component.location_NoClientCode()
javax.swing.text.AbstractDocument.readLock()
java.io.OutputStream.flush()
javax.swing.InternalFrameFocusTraversalPolicy.init()
sun.awt.X11GraphicsConfig.getBitsPerPixel()
java.beans.PropertyChangeListenerProxy.getPropertyName()
java.util.Stack.push(java.lang.Object)
java.util.ResourceBundle.findBundle(java.util.ResourceBundle$CacheKey,java.util.List,java.util.List,int,java.util.ResourceBundle$Control,java.util.ResourceBundle)
java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread()
org.codehaus.janino.tools.Disassembler$9.init(double,org.codehaus.janino.tools.Disassembler)
javax.swing.JScrollBar.setUI(javax.swing.plaf.ScrollBarUI)
sun.reflect.Reflection.filterFields(java.lang.Class,java.lang.reflect.Field[])
sun.reflect.UnsafeQualifiedBooleanFieldAccessorImpl.init(java.lang.reflect.Field,boolean)
java.lang.reflect.Field.acquireFieldAccessor(boolean)
sun.util.calendar.Gregorian.newCalendarDate(java.util.TimeZone)
java.util.regex.Matcher.init(java.util.regex.Pattern,java.lang.CharSequence)
sun.misc.SoftCache.get(java.lang.Object)
javax.swing.JComponent.computeVisibleRect(java.awt.Rectangle)
org.codehaus.janino.tools.JGrep.class$(java.lang.String)
java.io.File.getAbsoluteFile()
java.lang.SecurityManager.checkPackageAccess(java.lang.String)
sun.util.calendar.BaseCalendar$Date.setNormalizedDate(int,int,int)
org.sunflow.core.ParameterList$Parameter.init(float)
java.util.SimpleTimeZone.decodeStartRule()
java.util.logging.LogManager.doSetLevel(java.util.logging.Logger,java.util.logging.Level)
javax.swing.text.StyleContext.init()
java.util.regex.Pattern.o()
javax.swing.TransferHandler.init()
java.io.FilterOutputStream.init(java.io.OutputStream)
java.util.Calendar.clear()
java.util.logging.Logger.getResourceBundleName()
java.lang.Math.abs(double)
java.lang.Class$Atomic.casReflectionData(java.lang.Class,java.lang.ref.SoftReference,java.lang.ref.SoftReference)
sun.nio.cs.StreamDecoder.init(java.io.InputStream,java.lang.Object,java.nio.charset.CharsetDecoder)
java.util.Formatter$FormatSpecifier.checkCharacter()
java.awt.EventQueue.setCurrentEventAndMostRecentTimeImpl(java.awt.AWTEvent)
java.util.logging.LogManager$LoggerContext.removeLogger(java.lang.String)
java.lang.Math.min(int,int)
javax.swing.text.GapContent.init(int)
org.codehaus.janino.Java$CompilationUnit.addPackageMemberTypeDeclaration(org.codehaus.janino.Java$PackageMemberTypeDeclaration)
org.codehaus.janino.Scanner.stringToFloatLiteralToken(java.lang.String)
java.awt.Container.invalidate()
sun.util.calendar.BaseCalendar.getMonthLength(sun.util.calendar.CalendarDate)
sun.awt.image.BufImgSurfaceData.getSolidLoops(sun.java2d.loops.SurfaceType)
org.codehaus.janino.Java$ThisReference.init(org.codehaus.janino.Location)
javax.swing.AbstractButton.getHandler()
sun.text.normalizer.NormalizerImpl.getCombiningClass(int)
java.security.Permissions.getUnresolvedPermissions(java.security.Permission)
sun.reflect.ClassFileAssembler.opc_invokespecial(short,int,int)
org.sunflow.system.UI.verbosity(int)
javax.swing.JComponent.computeVisibleRect(java.awt.Component,java.awt.Rectangle)
javax.swing.JViewport$ViewListener.init(javax.swing.JViewport)
sun.java2d.loops.FillRect.locate(sun.java2d.loops.SurfaceType,sun.java2d.loops.CompositeType,sun.java2d.loops.SurfaceType)
java.util.ResourceBundle$CacheKey.calculateHashCode()
javax.swing.RepaintManager$PaintManager.endPaint()
java.util.WeakHashMap.getTable()
sun.reflect.ClassFileAssembler.opc_l2d()
java.awt.event.MouseEvent.getYOnScreen()
java.lang.StringBuffer.init()
org.codehaus.janino.ScriptEvaluator.addMethodDeclarationAndBlock(org.codehaus.janino.Location,org.codehaus.janino.Java$ClassDeclaration,boolean,java.lang.Class,java.lang.String,java.lang.Class[],java.lang.String[],java.lang.Class[])
java.util.regex.Pattern.isSupplementary(int)
sun.util.resources.LocaleData.getCurrencyNames(java.util.Locale)
java.util.Properties.getProperty(java.lang.String,java.lang.String)
java.util.logging.Logger.log(java.util.logging.LogRecord)
java.lang.Thread.nextThreadNum()
org.codehaus.janino.Scanner.unescapeCharacterLiteral()
java.lang.ClassLoader.findClass(java.lang.String)
java.awt.Component.eventTypeEnabled(int)
javax.swing.JScrollPane.getColumnHeader()
sun.awt.dnd.SunDropTargetContextPeer$EventDispatcher.dispatchMotionEvent(sun.awt.dnd.SunDropTargetEvent)
sun.nio.cs.StreamEncoder.forOutputStreamWriter(java.io.OutputStream,java.lang.Object,java.lang.String)
java.util.AbstractCollection.add(java.lang.Object)
java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(int,int)
javax.swing.text.GapVector.shiftGapStartDown(int)
org.sunflow.core.ParameterList$Parameter.init(float,org.sunflow.core.ParameterList$1)
java.nio.ByteBuffer.array()
sun.reflect.AccessorGenerator.add(short,short)
java.awt.Graphics2D.init()
java.util.concurrent.locks.ReentrantLock.tryLock()
java.util.Formatter$Conversion.isValid(char)
java.awt.Container.setFocusTraversalKeys(int,java.util.Set)
javax.swing.text.JTextComponent.updateUI()
org.codehaus.janino.tools.Disassembler.disasm(java.io.File)
sun.swing.AccessibleMethod.init(java.lang.Class,java.lang.String,java.lang.Class[])
sun.misc.SoftCache.processQueue()
java.lang.ThreadLocal$ThreadLocalMap.replaceStaleEntry(java.lang.ThreadLocal,java.lang.Object,int)
java.io.File.deleteOnExit()
java.io.FileDescriptor.decrementAndGetUseCount()
java.io.FilePermission$1.init(java.io.FilePermission)
java.awt.Window.getOwner()
sun.awt.image.BytePackedRaster.getDataStorage()
org.codehaus.janino.util.ClassFile.getThisClassName()
SunflowGUI$SceneTransferHandler.init(SunflowGUI)
org.codehaus.janino.Parser.parseMethodBody()
java.lang.Long.init(long)
java.util.regex.Pattern$TreeInfo.reset()
java.lang.Class.checkInitted()
org.sunflow.core.ParameterList$Parameter.access$002(org.sunflow.core.ParameterList$Parameter,boolean)
org.sunflow.Benchmark.main(java.lang.String[])
org.codehaus.janino.Parser.parseConditionalOrExpression()
java.net.NetworkInterface.getInetAddresses()
sun.java2d.x11.X11SurfaceData.getSurfaceType(sun.awt.X11GraphicsConfig,int)
java.util.logging.LogManager$LoggerWeakRef.setParentRef(java.lang.ref.WeakReference)
org.codehaus.janino.UnparseVisitor.init(java.io.Writer)
java.util.HashMap$KeySet.init(java.util.HashMap,java.util.HashMap$1)
javax.swing.text.DocumentFilter.replace(javax.swing.text.DocumentFilter$FilterBypass,int,int,java.lang.String,javax.swing.text.AttributeSet)
org.sunflow.SunflowAPI.parse(java.lang.String)
java.net.Inet6Address.isSiteLocalAddress(byte[])
org.codehaus.janino.Parser.parseEqualityExpression()
java.lang.Math.max(long,long)
org.codehaus.janino.util.ClassFile$FieldInfo.store(java.io.DataOutputStream)
sun.reflect.AccessorGenerator.isStatic()
java.lang.ThreadLocal.createMap(java.lang.Thread,java.lang.Object)
javax.swing.text.StyleContext$NamedStyle.fireStateChanged()
org.codehaus.janino.JavaSourceClassLoader.class$(java.lang.String)
sun.security.provider.PolicyFile.initStaticPolicy(sun.security.provider.PolicyFile$PolicyInfo)
java.util.StringTokenizer.init(java.lang.String,java.lang.String,boolean)
org.sunflow.util.FastHashMap$Entry.access$000(org.sunflow.util.FastHashMap$Entry)
java.lang.String.replaceFirst(java.lang.String,java.lang.String)
org.sunflow.RealtimeBenchmark.createGeometry()
java.awt.Font.equals(java.lang.Object)
java.lang.Throwable.init(java.lang.String,java.lang.Throwable)
sun.awt.im.InputContext.getClientComponent()
sun.reflect.misc.MethodUtil.invoke(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])
javax.swing.JTextField.createDefaultModel()
java.nio.charset.CharsetDecoder.implFlush(java.nio.CharBuffer)
sun.reflect.DelegatingConstructorAccessorImpl.setDelegate(sun.reflect.ConstructorAccessorImpl)
org.codehaus.janino.Parser.parsePackageDeclaration()
java.lang.Object.init()
java.util.PriorityQueue.siftUpUsingComparator(int,java.lang.Object)
java.lang.reflect.Method.setMethodAccessor(sun.reflect.MethodAccessor)
org.codehaus.janino.tools.Disassembler.unindentln(java.lang.String)
org.sunflow.RenderObjectMap.put(java.lang.String,org.sunflow.core.Shader)
java.util.regex.ASCII.toDigit(int)
java.io.File.createTempFile0(java.lang.String,java.lang.String,java.io.File,boolean)
java.awt.Component.getY()
sun.util.calendar.LocalGregorianCalendar.newCalendarDate(java.util.TimeZone)
sun.misc.SharedSecrets.getJavaSecurityProtectionDomainAccess()
sun.awt.dnd.SunDropTargetContextPeer$EventDispatcher.setReturnValue(int)
java.awt.AlphaComposite.getAlpha()
org.codehaus.janino.Scanner$LiteralToken.init(org.codehaus.janino.Scanner,java.lang.Object)
sun.reflect.AccessorGenerator.emitConstructor()
java.awt.event.KeyEvent.isActionKey()
org.sunflow.util.FastHashMap$EntryIterator.inc()
sun.security.provider.PolicyFile$3.init(sun.security.provider.PolicyFile,java.lang.String,sun.security.provider.PolicyFile$PolicyInfo,java.lang.String)
java.lang.StringCoding.access$000(int,float)
javax.swing.JRootPane.setWindowDecorationStyle(int)
java.util.Calendar.isLenient()
org.codehaus.janino.Scanner$ScanException.init(org.codehaus.janino.Scanner,java.lang.String)
java.lang.Character.isJavaIdentifierStart(int)
java.util.ResourceBundle.setParent(java.util.ResourceBundle)
java.awt.Window.postWindowEvent(int)
org.codehaus.janino.util.enumerator.EnumeratorSet.getNamedEnumeratorSets(java.lang.Class)
java.lang.StringBuilder.append(java.lang.String)
sun.awt.image.SunVolatileImage.createGraphics()
org.sunflow.RenderObjectMap$RenderObjectHandle.getCamera()
java.awt.Component.location()
sun.misc.FloatingDecimal.doubleToBigInt(double)
java.util.ResourceBundle$RBClassLoader.access$000()
javax.swing.text.SimpleAttributeSet.addAttribute(java.lang.Object,java.lang.Object)
java.awt.event.MouseMotionAdapter.init()
java.util.Hashtable.getEnumeration(int)
java.awt.VKCollection.findCode(java.lang.String)
java.util.regex.ASCII.isAscii(int)
org.sunflow.system.BenchmarkFramework.init(int,int)
javax.swing.event.MouseInputAdapter.init()
org.sunflow.core.parser.SCParser.init()
org.codehaus.janino.Scanner$IdentifierToken.init(org.codehaus.janino.Scanner,java.lang.String)
java.util.LinkedList.addBefore(java.lang.Object,java.util.LinkedList$Entry)
java.security.ProtectionDomain.getPermissions()
java.util.Locale.getVariant()
sun.reflect.AccessorGenerator.sub(short,short)
org.codehaus.janino.util.resource.JarDirectoriesResourceFinder$1.init(java.util.Iterator)
org.sunflow.SunflowAPI.parameter(java.lang.String,java.lang.String)
java.awt.Dimension.init(int,int)
org.sunflow.core.ParameterList.add(java.lang.String,org.sunflow.core.ParameterList$Parameter)
java.lang.Shutdown.sequence()
org.codehaus.janino.util.ClassFile.storeAttributes(java.io.DataOutputStream,java.util.List)
java.awt.KeyboardFocusManager.isAutoFocusTransferEnabledFor(java.awt.Component)
java.awt.Component.getFont_NoClientCode()
sun.java2d.SunGraphics2D.init(sun.java2d.SurfaceData,java.awt.Color,java.awt.Color,java.awt.Font)
java.awt.Component.getContainer()
java.util.regex.Pattern$6.init(java.util.regex.Pattern$CharProperty,java.util.regex.Pattern$CharProperty)
java.lang.StringBuffer.append(java.lang.StringBuffer)
java.awt.Container.countComponents()
java.lang.ConditionalSpecialCasing.toUpperCaseEx(java.lang.String,int,java.util.Locale)
java.lang.ClassLoader.loadClass(java.lang.String,boolean)
java.awt.FlowLayout.init(int,int,int)
org.codehaus.janino.ExpressionEvaluator.init()
SunflowGUI$13.init(SunflowGUI)
java.util.Formatter$FormatSpecifier.index(java.lang.String)
java.util.regex.Pattern$BmpCharProperty.init(java.util.regex.Pattern$1)
javax.swing.JComponent.putClientProperty(java.lang.Object,java.lang.Object)
org.sunflow.core.Instance.removeShader(org.sunflow.core.Shader)
javax.swing.JLabel.init()
org.codehaus.janino.tools.JGrep.main(java.lang.String[])
java.util.Formatter$Flags.parse(char)
javax.swing.JComponent$2.init(javax.swing.JComponent)
org.sunflow.RenderObjectMap$RenderObjectHandle.getModifier()
java.util.UnknownFormatFlagsException.init(java.lang.String)
sun.awt.image.VSyncedBSManager.getInstance(boolean)
org.sunflow.core.Options.init()
java.util.HashMap$Values.init(java.util.HashMap)
java.awt.Component.setFocusTraversalKeysEnabled(boolean)
java.awt.event.WindowEvent.init(java.awt.Window,int,java.awt.Window,int,int)
org.sunflow.SunflowAPI.instance(java.lang.String,java.lang.String)
java.awt.geom.AffineTransform.getType()
java.lang.Object.equals(java.lang.Object)
java.net.URL.init(java.net.URL,java.lang.String,java.net.URLStreamHandler)
javax.swing.JTextField.init(javax.swing.text.Document,java.lang.String,int)
java.util.ResourceBundle$Control$1.init(java.util.ResourceBundle$Control,boolean,java.lang.ClassLoader,java.lang.String)
org.codehaus.janino.Java$Atom.toLvalueOrPE()
javax.swing.plaf.metal.MetalLookAndFeel.useSystemFonts()
org.codehaus.janino.Java$AbstractTypeDeclaration.getLocation()
java.awt.Event.init(java.lang.Object,int,java.lang.Object)
java.util.NoSuchElementException.init()
java.util.regex.Pattern.sequence(java.util.regex.Pattern$Node)
org.codehaus.janino.samples.DemoBase.explode(java.lang.String)
java.util.HashMap.getEntry(java.lang.Object)
java.util.Formatter$Flags.valueOf()
org.sunflow.SunflowAPI.geometry(java.lang.String,org.sunflow.core.PrimitiveList)
javax.swing.text.AbstractDocument$AbstractElement.init(javax.swing.text.AbstractDocument,javax.swing.text.Element,javax.swing.text.AttributeSet)
java.util.HashMap$KeySet.init(java.util.HashMap)
java.text.DecimalFormatSymbols.getCurrencySymbol()
sun.misc.URLClassPath$Loader$1.init(sun.misc.URLClassPath$Loader,java.lang.String,java.net.URL,java.net.URLConnection)
java.util.logging.Logger.doLog(java.util.logging.LogRecord)
java.awt.EventQueue.initDispatchThread()
java.text.Normalizer.normalize(java.lang.CharSequence,java.text.Normalizer$Form)
javax.swing.JPopupMenu.updateUI()
org.sunflow.RenderObjectMap$RenderObjectHandle.getOptions()
sun.reflect.ClassFileAssembler.opc_swap()
java.util.Formatter$Flags.dup()
org.codehaus.janino.Java$BinaryOperation.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Rvalue,java.lang.String,org.codehaus.janino.Java$Rvalue)
java.util.GregorianCalendar.init(java.util.TimeZone)
sun.util.calendar.AbstractCalendar.setEras(sun.util.calendar.Era[])
java.util.ArrayList.ensureCapacity(int)
sun.reflect.UnsafeByteFieldAccessorImpl.init(java.lang.reflect.Field)
org.codehaus.janino.tools.Disassembler.setOut(java.io.OutputStream)
sun.awt.SunToolkit.awtLock()
java.lang.String.trim()
java.util.Date.normalize(sun.util.calendar.BaseCalendar$Date)
sun.java2d.SunGraphics2D.validateCompClip()
java.util.PriorityQueue.siftDownUsingComparator(int,java.lang.Object)
sun.reflect.ClassFileAssembler.opc_ifnonnull(sun.reflect.Label)
javax.swing.text.AbstractDocument.getLength()
java.awt.Component.setAutoFocusTransferOnDisposal(boolean)
sun.reflect.Reflection.getCallerClass(int)
java.awt.image.BufferedImage.isStandard(java.awt.image.ColorModel,java.awt.image.WritableRaster)
java.util.regex.ASCII.isDigit(int)
java.awt.image.ColorModel.getComponentSize(int)
java.awt.AWTKeyStroke.registerSubclass(java.lang.Class)
java.util.AbstractCollection.init()
java.text.Bidi.init(char[],int,byte[],int,int,int)
org.sunflow.core.ParameterList$Parameter.init(int)
org.codehaus.janino.tools.HprofScrubber.dumpSamples(org.codehaus.janino.tools.HprofScrubber$Sample[],java.util.Map)
java.text.BreakIterator.getBundle(java.lang.String,java.util.Locale)
sun.misc.FloatingDecimal.multPow52(sun.misc.FDBigInt,int,int)
sun.java2d.loops.GraphicsPrimitiveProxy.getPackageName(java.lang.String)
java.lang.ref.Reference.init(java.lang.Object)
sun.misc.FDBigInt.dataInRangeIsZero(int,int,sun.misc.FDBigInt)
org.codehaus.janino.Java$ClassDeclaration.addConstructor(org.codehaus.janino.Java$ConstructorDeclarator)
java.lang.String.length()
javax.swing.BoxLayout.init(java.awt.Container,int)
sun.reflect.ClassFileAssembler.opc_astore_2()
javax.swing.JFrame.isRootPaneCheckingEnabled()
java.util.Formatter$FormatSpecifier.checkGeneral()
org.sunflow.system.Parser.getNextFloat()
java.lang.SecurityManager.checkDelete(java.lang.String)
sun.reflect.ClassFileAssembler.opc_i2f()
java.awt.EventQueue.noEvents()
java.util.regex.Pattern.has(int)
java.lang.Thread.join()
java.net.MalformedURLException.init(java.lang.String)
java.util.Formatter$DateTime.isValid(char)
java.util.concurrent.atomic.AtomicLong.get()
java.util.Vector.get(int)
sun.awt.image.SunVolatileImage.getForcedAccelSurfaceType()
sun.reflect.ReflectionFactory.newFieldAccessor(java.lang.reflect.Field,boolean)
java.lang.String.contains(java.lang.CharSequence)
java.awt.Component.getToolkit()
org.sunflow.RealtimeBenchmark.init(boolean,int)
org.codehaus.janino.Java$CompilationUnit$ImportDeclaration.init(org.codehaus.janino.Location)
org.codehaus.janino.tools.HprofScrubber$Sample.init(int,int)
org.codehaus.janino.Parser.verifyStringIsConventionalPackageName(java.lang.String,org.codehaus.janino.Location)
java.util.ResourceBundle$Control.toResourceName0(java.lang.String,java.lang.String)
java.util.regex.Pattern$BmpCharProperty.init()
java.util.regex.Pattern$GroupTail.init(int,int)
java.awt.datatransfer.SystemFlavorMap.loadConvert(java.lang.String)
java.util.concurrent.atomic.AtomicInteger.compareAndSet(int,int)
org.codehaus.janino.ClassBodyEvaluator.init()
javax.swing.plaf.metal.DefaultMetalTheme.init()
java.nio.charset.CoderResult.isOverflow()
sun.reflect.UnsafeQualifiedStaticShortFieldAccessorImpl.init(java.lang.reflect.Field,boolean)
javax.swing.UIDefaults.get(java.lang.Object)
javax.swing.DefaultButtonModel.fireStateChanged()
java.awt.EventQueue.mergePaintEvents(java.awt.event.PaintEvent,java.awt.event.PaintEvent)
java.util.ResourceBundle$CacheKey.setLocale(java.util.Locale)
java.awt.im.InputContext.dispatchEvent(java.awt.AWTEvent)
java.util.LinkedHashSet.init()
javax.swing.JViewport.addChangeListener(javax.swing.event.ChangeListener)
sun.awt.image.BufImgSurfaceData.createDataIC(java.awt.image.BufferedImage,sun.java2d.loops.SurfaceType)
java.io.FilePermission.init(java.lang.String,java.lang.String)
java.awt.geom.AffineTransform.getTranslateY()
java.util.concurrent.ConcurrentHashMap.putIfAbsent(java.lang.Object,java.lang.Object)
java.lang.UnsupportedOperationException.init(java.lang.String)
java.lang.ref.Reference.init(java.lang.Object,java.lang.ref.ReferenceQueue)
java.awt.Window.hide()
javax.swing.text.AbstractDocument$BranchElement.getElementCount()
java.util.ArrayList.get(int)
javax.swing.AbstractButton.setBorderPainted(boolean)
java.text.SimpleDateFormat.initializeDefaultCentury()
javax.swing.AbstractButton.getText()
org.codehaus.janino.Parser.parseReferenceTypeList()
java.awt.datatransfer.SystemFlavorMap$1.init(java.awt.datatransfer.SystemFlavorMap)
org.codehaus.janino.util.ClassFile$ConstantUtf8Info.access$0(org.codehaus.janino.util.ClassFile$ConstantUtf8Info)
javax.swing.JScrollPane.setHorizontalScrollBarPolicy(int)
java.util.regex.Pattern.isLineSeparator(int)
java.nio.channels.spi.AbstractInterruptibleChannel.close()
java.awt.geom.AffineTransform.getScaleY()
org.codehaus.janino.Scanner.peekNextButOne()
java.util.concurrent.ConcurrentHashMap$Segment.put(java.lang.Object,int,java.lang.Object,boolean)
java.io.PrintWriter.ensureOpen()
org.sunflow.util.FastHashMap$Entry.init(java.lang.Object,java.lang.Object)
java.lang.Thread.dumpStack()
java.awt.Window.isModalBlocked()
java.lang.String.codePointBefore(int)
java.util.regex.Pattern$CharProperty.init(java.util.regex.Pattern$1)
java.text.MessageFormat.format(java.lang.String,java.lang.Object[])
java.security.PermissionCollection.isReadOnly()
java.util.regex.Pattern.unread()
java.awt.event.KeyEvent.setOldModifiers()
org.sunflow.core.ParameterList.addString(java.lang.String,java.lang.String)
org.codehaus.janino.Java.access$0(org.codehaus.janino.Java$ArrayInitializerOrRvalue,org.codehaus.janino.Java$BlockStatement)
org.sunflow.RenderObjectMap$RenderObjectHandle.init(org.sunflow.core.PrimitiveList,org.sunflow.RenderObjectMap$1)
org.codehaus.janino.Java$SimpleType.init(org.codehaus.janino.Location,org.codehaus.janino.IClass)
java.awt.Container.add(java.awt.Component,int)
org.sunflow.core.Scene.setShaderOverride(org.sunflow.core.Shader,boolean)
java.util.TimeZone.getDefaultRef()
org.codehaus.janino.Java$Block.init(org.codehaus.janino.Location)
sun.awt.AppContext.getThreadGroup()
java.lang.System.getSecurityManager()
java.util.Properties.load(java.io.InputStream)
java.text.BreakIterator.getBreakInstance(java.util.Locale,int,java.lang.String,java.lang.String)
java.awt.EventQueue.postEvent(java.awt.AWTEvent,int)
org.codehaus.janino.util.Benchmark.beginReporting(java.lang.String)
java.lang.Integer.init(int)
javax.swing.SortingFocusTraversalPolicy.init(java.util.Comparator)
javax.swing.text.Segment.first()
java.text.SimpleDateFormat.initialize(java.util.Locale)
java.security.AccessControlContext.init(java.security.ProtectionDomain[],boolean)
org.sunflow.core.ParameterList.addVectors(java.lang.String,org.sunflow.core.ParameterList$InterpolationType,float[])
java.util.logging.LogRecord.setResourceBundleName(java.lang.String)
javax.swing.text.AbstractDocument$BidiElement.init(javax.swing.text.AbstractDocument,javax.swing.text.Element,int,int,int)
java.lang.ClassCastException.init(java.lang.String)
org.sunflow.core.ParameterList$Parameter.access$2200(org.sunflow.core.ParameterList$Parameter)
java.util.Formatter$FormatSpecifier.toString()
org.codehaus.janino.util.iterator.DirectoryIterator.access$0(java.lang.Object)
sun.reflect.MethodAccessorGenerator.usesPrimitiveTypes()
java.text.DecimalFormatSymbols.getGroupingSeparator()
java.awt.Component.isAutoFocusTransferOnDisposal()
java.util.regex.Pattern$BitClass.init()
sun.util.resources.LocaleData.getCalendarData(java.util.Locale)
javax.swing.text.JTextComponent.setText(java.lang.String)
java.util.SimpleTimeZone.init(int,java.lang.String,int,int,int,int,int,int,int,int,int)
java.lang.reflect.Method.acquireMethodAccessor()
java.io.BufferedReader.close()
sun.awt.util.IdentityArrayList.remove(java.lang.Object)
java.util.logging.Logger.getEffectiveResourceBundleName()
java.lang.RuntimeException.init(java.lang.Throwable)
org.codehaus.janino.util.resource.DirectoryResourceFinder.init(java.io.File)
java.net.InetAddress.getByAddress(byte[])
javax.swing.JViewport.remove(java.awt.Component)
java.lang.String.toLowerCase()
java.util.regex.Pattern.family(boolean)
java.awt.Component.mouseUp(java.awt.Event,int,int)
org.codehaus.janino.Java$ConditionalExpression.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Rvalue,org.codehaus.janino.Java$Rvalue,org.codehaus.janino.Java$Rvalue)
java.lang.ConditionalSpecialCasing.isAfterI(java.lang.String,int)
java.util.regex.Pattern.union(java.util.regex.Pattern$CharProperty,java.util.regex.Pattern$CharProperty)
java.util.concurrent.ConcurrentHashMap.init(int,float,int)
java.util.regex.Matcher.matches()
org.sunflow.SunflowAPI.lookupGeometry(java.lang.String)
org.sunflow.core.ParameterList.isValidParameter(java.lang.String,org.sunflow.core.ParameterList$ParameterType,org.sunflow.core.ParameterList$InterpolationType,int,org.sunflow.core.ParameterList$Parameter)
java.io.DataOutputStream.incCount(int)
sun.util.calendar.CalendarDate.init(java.util.TimeZone)
javax.swing.UIDefaults.init()
java.lang.ThreadLocal$ThreadLocalMap.prevIndex(int,int)
java.awt.EventQueue.postEvent(java.awt.AWTEvent)
java.util.concurrent.atomic.AtomicInteger.decrementAndGet()
sun.awt.datatransfer.DataTransferer.doesSubtypeSupportCharset(java.lang.String,java.lang.String)
org.codehaus.janino.util.ClassFile.toByteArray()
java.lang.StringIndexOutOfBoundsException.init(java.lang.String)
java.lang.reflect.Modifier.isAbstract(int)
java.lang.Class$EnclosingMethodInfo.getEnclosingClass()
java.awt.KeyboardFocusManager.setGlobalCurrentFocusCycleRoot(java.awt.Container)
java.io.FileDescriptor.init()
org.codehaus.janino.UnitCompiler.compileUnit(org.codehaus.janino.util.enumerator.EnumeratorSet)
java.awt.Component.action(java.awt.Event,java.lang.Object)
javax.swing.text.SegmentCache.getSharedSegment()
java.lang.Character.isJavaIdentifierPart(char)
java.util.logging.Logger.setParent(java.util.logging.Logger)
SunflowGUI$18.init(SunflowGUI)
java.lang.StringBuilder.append(int)
java.text.AttributedString.ensureRunBreak(int)
java.nio.charset.CharsetDecoder.onUnmappableCharacter(java.nio.charset.CodingErrorAction)
java.lang.StackTraceElement.eq(java.lang.Object,java.lang.Object)
org.sunflow.core.primitive.Sphere.init()
javax.swing.JComponent.setAutoscrolls(boolean)
java.text.StringCharacterIterator.init(java.lang.String,int,int,int)
java.net.URL.isValidProtocol(java.lang.String)
java.awt.AWTKeyStroke.getAWTKeyStroke(java.lang.String)
java.lang.reflect.Field.checkAccess(java.lang.Class,java.lang.Class,java.lang.Object,int)
org.codehaus.janino.Scanner$KeywordToken.init(org.codehaus.janino.Scanner,org.codehaus.janino.Scanner$1,java.lang.String)
sun.font.AttributeValues.setWeight(float)
java.util.regex.Pattern$Start.init(java.util.regex.Pattern$Node)
java.awt.geom.AffineTransform.stateError()
sun.awt.dnd.SunDropTargetContextPeer.access$002(sun.awt.dnd.SunDropTargetContextPeer,int)
javax.swing.AbstractButton.setModel(javax.swing.ButtonModel)
java.lang.AbstractStringBuilder.append(double)
org.codehaus.janino.samples.DeclarationCounter.init()
sun.reflect.Reflection.quickCheckMemberAccess(java.lang.Class,int)
java.lang.Character.isJavaIdentifierStart(char)
javax.swing.AbstractButton.setRolloverEnabled(boolean)
java.awt.Component.addNotify()
java.util.logging.LogManager$LoggerWeakRef.init(java.util.logging.LogManager,java.util.logging.Logger)
org.sunflow.RenderObjectMap$RenderObjectHandle.access$600(org.sunflow.RenderObjectMap$RenderObjectHandle,org.sunflow.core.ParameterList,org.sunflow.SunflowAPI)
org.sunflow.core.Geometry.init(org.sunflow.core.Tesselatable)
java.util.ArrayList.iterator()
java.lang.String.init()
java.util.ArrayList.subListRangeCheck(int,int,int)
org.sunflow.core.renderer.BucketRenderer$BucketThread.run()
java.lang.Long.longValue()
java.lang.Double.init(double)
javax.swing.JScrollBar.updateUI()
sun.awt.util.IdentityArrayList.indexOf(java.lang.Object)
org.sunflow.core.camera.PinholeLens.update()
org.codehaus.janino.Parser.verifyIdentifierIsConventionalMethodName(java.lang.String,org.codehaus.janino.Location)
org.sunflow.util.FastHashMap$EntryIterator.init(org.sunflow.util.FastHashMap)
java.lang.SecurityManager.checkRead(java.lang.String)
java.lang.AbstractStringBuilder.length()
java.io.PrintWriter.println(java.lang.String)
sun.misc.FDBigInt.'cmp'(sun.misc.FDBigInt)
java.nio.Buffer.clear()
sun.reflect.DelegatingMethodAccessorImpl.init(sun.reflect.MethodAccessorImpl)
org.sunflow.RenderObjectMap.lookupCamera(java.lang.String)
sun.awt.X11GraphicsDevice.getProxyKeyFor(sun.java2d.loops.SurfaceType)
org.sunflow.core.primitive.TriangleMesh.init()
java.io.File.getPath()
sun.font.AttributeValues.updateDerivedTransforms()
org.sunflow.util.FastHashMap$Entry.access$100(org.sunflow.util.FastHashMap$Entry)
org.codehaus.janino.Java$1.init(org.codehaus.janino.Java$BlockStatement)
javax.swing.JLabel.getText()
java.util.concurrent.ConcurrentHashMap.init()
java.util.HashMap.init()
sun.java2d.x11.X11SurfaceData.makePipes()
java.util.logging.LogRecord.init(java.util.logging.Level,java.lang.String)
java.awt.EventQueue.invokeLater(java.lang.Runnable)
org.codehaus.janino.Parser.parseConstructorDeclarator(org.codehaus.janino.Java$ClassDeclaration,java.lang.String,short)
java.util.logging.LogManager.access$200(java.util.logging.LogManager)
java.lang.String.format(java.lang.String,java.lang.Object[])
java.lang.Math.round(float)
SunflowGUI$7.init(SunflowGUI)
sun.java2d.pipe.Region.endRow(int[])
java.util.ArrayList.subList(int,int)
javax.swing.RepaintManager.setPaintManager(javax.swing.RepaintManager$PaintManager)
SunflowGUI.initGUI()
java.lang.Character.toSurrogates(int,char[],int)
org.codehaus.janino.util.resource.PathResourceFinder.createIterator(java.util.Iterator)
org.codehaus.janino.tools.Disassembler$17.init(org.codehaus.janino.tools.Disassembler)
org.sunflow.SunflowAPI.lookupShader(java.lang.String)
org.sunflow.core.Instance.updateBounds()
java.text.DecimalFormat.setDecimalSeparatorAlwaysShown(boolean)
javax.swing.JComponent.setTransferHandler(javax.swing.TransferHandler)
java.lang.StringBuilder.init()
org.codehaus.janino.Parser.parseBlockStatements()
org.codehaus.janino.UnicodeUnescapeReader.init(java.io.Reader)
java.util.StringTokenizer.scanToken(int)
org.sunflow.image.Color.init(org.sunflow.image.Color)
sun.awt.util.IdentityArrayList.ensureCapacity(int)
sun.util.resources.LocaleData.getDateFormatData(java.util.Locale)
org.codehaus.janino.tools.Disassembler$16.init(org.codehaus.janino.tools.Disassembler)
java.awt.Graphics.init()
org.sunflow.system.Timer.toString()
java.io.File.list()
java.util.Random.init(long)
java.util.regex.Matcher.appendReplacement(java.lang.StringBuffer,java.lang.String)
java.awt.KeyboardFocusManager.clearMarkers()
org.codehaus.janino.Parser.parseMethodDeclarationRest(org.codehaus.janino.Java$AbstractTypeDeclaration,java.lang.String,short,org.codehaus.janino.Java$Type,java.lang.String)
org.sunflow.SunflowAPI.setCurrentFrame(int)
java.awt.image.Raster.getNumDataElements()
sun.awt.im.InputContext.notifyClientWindowChange(java.awt.Window)
javax.swing.JViewport.paintView(java.awt.Graphics)
SunflowGUI$11.init(SunflowGUI)
java.util.logging.LogManager.getProperty(java.lang.String)
javax.swing.JTextArea.createDefaultModel()
org.codehaus.janino.Java$Statement.init(org.codehaus.janino.Location)
java.text.MessageFormat.findKeyword(java.lang.String,java.lang.String[])
java.lang.SecurityManager$1.init(java.lang.SecurityManager)
org.codehaus.janino.Scanner.access$0(org.codehaus.janino.Scanner)
java.text.DecimalFormatSymbols.getZeroDigit()
sun.java2d.SurfaceManagerFactory.createVolatileManager(sun.awt.image.SunVolatileImage,java.lang.Object)
sun.util.calendar.BaseCalendar$Date.init(java.util.TimeZone)
sun.awt.AWTAutoShutdown.isReadyToShutdown()
org.codehaus.janino.Java$Type.init(org.codehaus.janino.Location)
java.lang.Class.privateGetDeclaredMethods(boolean)
java.awt.dnd.DropTargetContext.init(java.awt.dnd.DropTarget)
java.util.logging.LogManager.access$800(java.util.logging.Logger,java.util.logging.Level)
javax.swing.UIManager.getLAFState()
sun.text.normalizer.NormalizerBase$Mode.normalize(java.lang.String,int)
sun.reflect.ClassFileAssembler.opc_invokevirtual(short,int,int)
org.sunflow.math.Point3.sub(org.sunflow.math.Point3,org.sunflow.math.Point3,org.sunflow.math.Vector3)
java.util.ArrayList.elementData(int)
java.util.HashMap.hash(int)
sun.misc.FDBigInt.init(int[],int)
org.codehaus.janino.Java$RvalueMemberType.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Rvalue,java.lang.String)
java.lang.Error.init(java.lang.String,java.lang.Throwable)
java.awt.KeyboardFocusManager.isAutoFocusTransferEnabled()
javax.swing.JTextField.init()
java.util.ResourceBundle.access$200()
org.sunflow.system.UI.printDetailed(org.sunflow.system.UI$Module,java.lang.String,java.lang.Object[])
sun.reflect.UnsafeDoubleFieldAccessorImpl.init(java.lang.reflect.Field)
java.awt.event.MouseEvent.init(java.awt.Component,int,long,int,int,int,int,int,int,boolean,int)
java.util.regex.Pattern.peek()
SunflowGUI$14.init(SunflowGUI)
java.awt.Menu.countItems()
java.io.FilePermission.init(int)
javax.swing.JComponent.getVisibleRect()
org.codehaus.janino.Java$AbstractTypeDeclaration.setEnclosingScope(org.codehaus.janino.Java$Scope)
java.awt.Window.toFront_NoClientCode()
javax.swing.UIManager.getDefaults()
org.codehaus.janino.util.Benchmark.endReporting(java.lang.String)
java.lang.Integer.toUnsignedString(int,int)
sun.util.calendar.CalendarDate.getEra()
org.codehaus.janino.ClassBodyEvaluator.createFastClassBodyEvaluator(org.codehaus.janino.Scanner,java.lang.Class,java.lang.ClassLoader)
sun.swing.AccessibleMethod.invokeNoChecked(java.lang.Object,java.lang.Object[])
java.security.UnresolvedPermission.resolve(java.security.Permission,java.security.cert.Certificate[])
sun.awt.dnd.SunDropTargetContextPeer$EventDispatcher.dispatchEnterEvent(sun.awt.dnd.SunDropTargetEvent)
java.io.FileInputStream.init(java.lang.String)
java.lang.IllegalThreadStateException.init()
java.awt.Container.createChildHierarchyEvents(int,long,boolean)
java.lang.String.codePointAt(int)
org.sunflow.system.Parser.init(java.lang.String)
java.util.concurrent.locks.ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.init()
java.util.logging.Level.access$100(java.util.logging.Level)
java.util.ResourceBundle$Control.access$300()
sun.java2d.loops.FillSpans.locate(sun.java2d.loops.SurfaceType,sun.java2d.loops.CompositeType,sun.java2d.loops.SurfaceType)
sun.reflect.ClassFileAssembler.opc_i2l()
javax.swing.ArrayTable.getKeys(java.lang.Object[])
java.awt.image.ColorModel.hasAlpha()
java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])
java.awt.Component.getToolkitImpl()
sun.awt.X11GraphicsConfig.getSolidLoops(sun.java2d.loops.SurfaceType)
java.awt.Event.init(java.lang.Object,long,int,int,int,int,int)
java.lang.Math.max(int,int)
java.awt.Component.checkGD(java.lang.String)
javax.swing.JComponent.paint(java.awt.Graphics)
java.awt.Component.repaint(long,int,int,int,int)
java.util.regex.Pattern.parsePastLine()
java.awt.MenuComponent.removeNotify()
java.util.Collections.synchronizedMap(java.util.Map)
java.lang.Integer.valueOf(int)
java.awt.geom.AffineTransform.isIdentity()
java.lang.SecurityException.init(java.lang.String)
java.util.Formatter$Flags.parse(java.lang.String)
javax.swing.JScrollPane.getHorizontalScrollBar()
java.util.concurrent.CopyOnWriteArrayList.setArray(java.lang.Object[])
java.awt.geom.Rectangle2D.intersects(double,double,double,double)
org.sunflow.core.ParameterList.addFloat(java.lang.String,float)
java.io.FileOutputStream.init(java.io.File,boolean)
sun.java2d.pipe.Region.getIntersectionXYWH(int,int,int,int)
javax.swing.JComponent.getWidth()
java.awt.KeyboardFocusManager.getCurrentKeyboardFocusManager()
java.io.File.isInvalid()
org.sunflow.core.tesselatable.BezierMesh.init(float[][])
org.codehaus.janino.util.resource.PathResourceFinder.init(java.io.File[])
sun.reflect.UnsafeLongFieldAccessorImpl.init(java.lang.reflect.Field)
java.awt.Component.getFocusCycleRootAncestor()
java.lang.ThreadLocal$ThreadLocalMap.getEntry(java.lang.ThreadLocal)
java.lang.ClassLoader.getSystemClassLoader()
javax.swing.event.EventListenerList.getListenerList()
javax.swing.JViewport.setViewPosition(java.awt.Point)
java.util.Formatter$FormatSpecifier.init(java.util.Formatter,java.util.Formatter,java.lang.String[])
sun.misc.FpUtils.rawCopySign(double,double)
javax.swing.text.AbstractDocument$DefaultDocumentEvent.getOffset()
java.awt.Component.eventEnabled(java.awt.AWTEvent)
javax.swing.JComponent.setToolTipText(java.lang.String)
org.codehaus.janino.ScriptEvaluator.getMethod()
org.codehaus.janino.tools.Disassembler$4.init(short,short,org.codehaus.janino.tools.Disassembler)
java.awt.Component.removeMouseListener(java.awt.event.MouseListener)
java.awt.Component.numListening(long)
java.awt.Component.setEnabled(boolean)
java.nio.charset.Charset.checkName(java.lang.String)
org.codehaus.janino.tools.JGrep.init(org.codehaus.janino.IClassLoader,java.lang.String,boolean)
java.lang.NoSuchMethodException.init(java.lang.String)
sun.reflect.DelegatingConstructorAccessorImpl.init(sun.reflect.ConstructorAccessorImpl)
java.text.BreakIterator.getLong(byte[],int)
java.awt.AWTEventMulticaster.remove(java.util.EventListener)
javax.swing.LayoutComparator.init()
java.lang.StringBuilder.delete(int,int)
org.sunflow.image.RGBSpace.toString()
org.sunflow.core.Geometry.getBakingPrimitives()
java.util.Date.init(int,int,int,int,int,int)
java.util.regex.Pattern$Slice.init(int[])
java.text.DecimalFormatSymbols.getInstance(java.util.Locale)
sun.reflect.ByteVectorImpl.init()
java.awt.Toolkit.createComponent(java.awt.Component)
org.codehaus.janino.Descriptor.getComponentDescriptor(java.lang.String)
java.io.File.init(java.lang.String,java.io.File)
javax.swing.text.GapContent$MarkData.init(javax.swing.text.GapContent,int)
java.awt.Event.consume()
java.lang.Class.getConstructor(java.lang.Class[])
java.lang.Thread.init(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String)
org.codehaus.janino.SimpleCompiler.classesToTypes(org.codehaus.janino.Location,java.lang.Class[])
java.util.logging.Logger.getHandlers()
javax.swing.KeyStroke.getKeyStroke(java.lang.String)
org.sunflow.core.Scene.setBakingInstance(org.sunflow.core.Instance)
java.nio.charset.CoderResult.malformedForLength(int)
sun.awt.image.ShortComponentRaster.getScanlineStride()
javax.swing.JScrollPane.init()
sun.awt.image.BufImgSurfaceData.createDataSC(java.awt.image.BufferedImage,sun.java2d.loops.SurfaceType,java.awt.image.IndexColorModel)
java.awt.KeyboardFocusManager.getDefaultFocusTraversalKeys(int)
org.codehaus.janino.JavaSourceClassLoader.main(java.lang.String[])
javax.swing.JViewport.getView()
javax.swing.JScrollPane.setHorizontalScrollBar(javax.swing.JScrollBar)
java.util.regex.Pattern$BnMS.init(int[],int[],int[],java.util.regex.Pattern$Node)
java.util.TooManyListenersException.init()
java.awt.EventQueue.coalesceMouseEvent(java.awt.event.MouseEvent)
javax.swing.UIDefaults.init(int,float)
sun.java2d.x11.X11Renderer.getInstance()
java.util.regex.Pattern$GroupCurly.init(java.util.regex.Pattern$Node,int,int,int,int,int,boolean)
java.util.Currency.getCurrencyCode()
javax.swing.text.JTextComponent.init()
java.util.IdentityHashMap.init(int)
sun.font.AttributeValues.setFamily(java.lang.String)
java.lang.Class.getEnclosingClass()
java.util.AbstractList.outOfBoundsMsg(int)
java.util.Properties$LineReader.init(java.util.Properties,java.io.InputStream)
org.sunflow.RenderObjectMap.put(java.lang.String,org.sunflow.core.PrimitiveList)
java.awt.event.MouseEvent.getY()
java.net.Inet6Address$Inet6AddressHolder.init(java.net.Inet6Address)
org.codehaus.janino.Parser.parseForInit()
javax.swing.ToolTipManager$outsideTimerAction.init(javax.swing.ToolTipManager)
java.util.Arrays.copyOf(java.lang.Object[],int,java.lang.Class)
sun.text.normalizer.UTF16.getLeadSurrogate(int)
java.util.ArrayList.toArray(java.lang.Object[])
java.text.BreakIterator.createBreakInstance(java.util.Locale,int,java.lang.String,java.lang.String)
org.codehaus.janino.Parser.parseForStatement()
java.lang.Character.isSupplementaryCodePoint(int)
sun.misc.URLClassPath.getResource(java.lang.String)
org.sunflow.util.FastHashMap.get(java.lang.Object)
org.sunflow.system.Timer.toString(double)
java.awt.Toolkit.loadAssistiveTechnologies()
javax.swing.UIManager$LAFState.getPropertyChangeSupport(boolean)
sun.reflect.ReflectionFactory.langReflectAccess()
sun.font.AttributeValues.extractXRotation(java.awt.geom.AffineTransform,boolean)
java.awt.Container.recursiveSubtractAndApplyShape(sun.java2d.pipe.Region)
javax.swing.SwingUtilities.invokeLater(java.lang.Runnable)
javax.swing.RepaintManager$PaintManager.doubleBufferingChanged(javax.swing.JRootPane)
java.util.Formatter$Conversion.isInteger(char)
java.awt.event.MouseWheelEvent.getScrollType()
java.lang.Math.tan(double)
org.codehaus.janino.tools.Disassembler$ConstantPoolInfo.getSizeInConstantPool()
org.sunflow.core.parser.ShaveRibParser.init()
java.util.ArrayList.clear()
java.util.TimeZone.setDefaultZone()
org.sunflow.RenderObjectMap$RenderObjectHandle.init(org.sunflow.core.LightSource,org.sunflow.RenderObjectMap$1)
java.awt.FlowLayout.init()
org.codehaus.janino.IClassLoader.init(org.codehaus.janino.IClassLoader)
org.sunflow.Benchmark.execute()
javax.swing.text.StyleContext.addAttribute(javax.swing.text.AttributeSet,java.lang.Object,java.lang.Object)
java.awt.Container.getTopmostComponentIndex()
org.sunflow.SunflowAPI.parameter(java.lang.String,int[])
javax.swing.JViewport.fireStateChanged()
java.awt.Container.getComponentZOrder(java.awt.Component)
org.sunflow.RenderObjectMap$RenderObjectHandle.init(org.sunflow.core.Shader,org.sunflow.RenderObjectMap$1)
javax.swing.JFrame.frameInit()
org.codehaus.janino.Parser.parseInterfaceDeclarationRest(java.lang.String,short,org.codehaus.janino.Parser$InterfaceDeclarationContext)
javax.swing.RepaintManager.getVolatileOffscreenBuffer(java.awt.Component,int,int)
sun.awt.SunToolkit.getSystemEventQueueImplPP(sun.awt.AppContext)
sun.reflect.ClassFileAssembler.emitConstantPoolNameAndType(short,short)
java.text.NumberFormat.init()
org.codehaus.janino.ClassBodyEvaluator.setClassName(java.lang.String)
sun.util.calendar.CalendarSystem.getGregorianCalendar()
java.util.regex.Pattern.newSlice(int[],int,boolean)
java.util.Collections.emptyEnumeration()
SunflowGUI$1.init(SunflowGUI)
java.util.regex.Pattern.flags()
org.sunflow.core.parser.RA2Parser.init()
java.awt.Rectangle.intersects(java.awt.Rectangle)
java.lang.String.isEmpty()
javax.swing.text.DocumentFilter.insertString(javax.swing.text.DocumentFilter$FilterBypass,int,java.lang.String,javax.swing.text.AttributeSet)
org.sunflow.math.Matrix4.multiply(org.sunflow.math.Matrix4)
sun.java2d.loops.DrawGlyphListAA.locate(sun.java2d.loops.SurfaceType,sun.java2d.loops.CompositeType,sun.java2d.loops.SurfaceType)
javax.swing.JScrollBar$ModelListener.init(javax.swing.JScrollBar)
javax.swing.JLabel.init(java.lang.String,javax.swing.Icon,int)
javax.swing.ToolTipManager$AccessibilityKeyListener.init(javax.swing.ToolTipManager)
org.codehaus.janino.Parser.parseDimExpr()
java.lang.Character.isLowerCase(char)
java.lang.StringBuffer.append(long)
java.util.logging.Level.init(java.lang.String,int)
java.util.StringTokenizer.countTokens()
java.lang.StringIndexOutOfBoundsException.init(int)
java.awt.Component.updateCursorImmediately()
java.text.Bidi.getRunLimit(int)
sun.java2d.pipe.Region.appendSpan(int[])
java.util.HashMap.keySet()
java.lang.CharacterData.of(int)
javax.swing.AbstractButton.setUIProperty(java.lang.String,java.lang.Object)
sun.java2d.pipe.RegionIterator.init(sun.java2d.pipe.Region)
sun.awt.image.SunWritableRaster.stealTrackable(java.awt.image.DataBuffer)
javax.swing.RepaintManager.init(short)
java.awt.Container.hasHeavyweightDescendants()
java.awt.Component.getMinimumSize()
java.lang.Class.getClassLoader()
org.codehaus.janino.Java$UnaryOperation.init(org.codehaus.janino.Location,java.lang.String,org.codehaus.janino.Java$Rvalue)
org.codehaus.janino.Scanner$EOFToken.init(org.codehaus.janino.Scanner)
java.awt.Component.getLocation()
SunflowGUI$15.init(SunflowGUI)
java.io.InputStream.close()
org.sunflow.math.Matrix4.transformPY(float,float,float)
java.awt.Container.getListenersCount(int,boolean)
org.sunflow.core.display.ImgPipeDisplay.imageBegin(int,int,int)
sun.java2d.StateTrackableDelegate.setUntrackable()
java.io.BufferedWriter.ensureOpen()
sun.misc.FloatingDecimal.appendTo(java.lang.Appendable)
java.text.DecimalFormatSymbols.clone()
sun.java2d.SunGraphicsEnvironment.getUsableBounds(java.awt.GraphicsDevice)
sun.java2d.loops.DrawParallelogram.locate(sun.java2d.loops.SurfaceType,sun.java2d.loops.CompositeType,sun.java2d.loops.SurfaceType)
sun.reflect.ClassFileAssembler.getMaxStack()
javax.swing.JInternalFrame.getContentPane()
java.awt.EventQueue.coalesceOtherEvent(java.awt.AWTEvent,int)
java.util.Hashtable.keys()
org.sunflow.math.Matrix4.translation(float,float,float)
java.lang.Class.isEnum()
java.util.Locale.convertOldISOCodes(java.lang.String)
java.awt.Window$1DisposeAction.init(java.awt.Window)
java.awt.image.Raster.getDataBuffer()
sun.java2d.pipe.PixelToShapeConverter.init(sun.java2d.pipe.ShapeDrawPipe)
javax.swing.JFrame.getRootPane()
org.codehaus.janino.Parser.parseBracketsOpt()
sun.misc.FloatingDecimal.floatValue()
javax.swing.text.StyleContext.removeAttribute(javax.swing.text.AttributeSet,java.lang.Object)
java.awt.VKCollection.put(java.lang.String,java.lang.Integer)
org.codehaus.janino.util.resource.PathResourceFinder$1.init(java.util.Iterator)
java.util.LinkedList.remove(java.lang.Object)
javax.swing.RepaintManager.getDirtyRegion(javax.swing.JComponent)
sun.java2d.StateTrackableDelegate.createInstance(sun.java2d.StateTrackable$State)
sun.awt.SunGraphicsCallback.runOneComponent(java.awt.Component,java.awt.Rectangle,java.awt.Graphics,java.awt.Shape,int)
org.codehaus.janino.Parser.parseExpression()
sun.reflect.AccessorGenerator.emitWideningBytecodeForPrimitiveConversion(sun.reflect.ClassFileAssembler,java.lang.Class,java.lang.Class)
sun.reflect.ClassFileAssembler.getStack()
java.text.Format.clone()
java.text.SimpleDateFormat.getKey()
java.io.BufferedWriter.init(java.io.Writer)
sun.java2d.SurfaceData.init(sun.java2d.loops.SurfaceType,java.awt.image.ColorModel)
sun.security.provider.PolicyFile.init()
sun.java2d.pipe.Region.getInstance(int[])
java.awt.Container.setFocusTraversalPolicy(java.awt.FocusTraversalPolicy)
javax.swing.JScrollPane.setVerticalScrollBarPolicy(int)
javax.swing.event.CaretEvent.init(java.lang.Object)
sun.reflect.ClassFileAssembler.opc_aload_2()
java.lang.ref.ReferenceQueue$Lock.init()
java.awt.dnd.DropTarget.clearAutoscroll()
org.codehaus.janino.util.Benchmark.report(java.lang.String,java.lang.Object)
java.awt.Component.getForeground()
javax.swing.text.JTextComponent.getDocument()
org.sunflow.SunflowAPI.parameter(java.lang.String,org.sunflow.math.Matrix4)
org.sunflow.RenderObjectMap.has(java.lang.String)
org.codehaus.janino.SimpleCompiler$AuxiliaryClassLoader.addAuxiliaryClass(java.lang.Class)
java.util.ResourceBundle$Control.getFallbackLocale(java.lang.String,java.util.Locale)
java.lang.ThreadLocal.childValue(java.lang.Object)
sun.util.calendar.CalendarDate.setHours(int)
org.sunflow.core.ParameterList$Parameter.access$1400(org.sunflow.core.ParameterList$Parameter)
org.codehaus.janino.Parser$ParseException.init(java.lang.String,org.codehaus.janino.Location)
javax.swing.plaf.ComponentUI.installUI(javax.swing.JComponent)
sun.java2d.xr.XRVolatileSurfaceManager.init(sun.awt.image.SunVolatileImage,java.lang.Object)
org.codehaus.janino.tools.Disassembler.disasmFieldInfo(java.io.DataInputStream)
java.lang.AbstractStringBuilder.setLength(int)
java.lang.AbstractStringBuilder.append(long)
java.nio.CharBuffer.put(java.lang.String)
sun.util.calendar.AbstractCalendar.getTimeOfDayValue(sun.util.calendar.CalendarDate)
javax.swing.JProgressBar.setString(java.lang.String)
java.util.concurrent.atomic.AtomicInteger.incrementAndGet()
org.codehaus.janino.Scanner.setWarningHandler(org.codehaus.janino.WarningHandler)
sun.util.calendar.Gregorian.getCalendarDate(long,sun.util.calendar.CalendarDate)
java.awt.Rectangle.equals(java.lang.Object)
java.nio.ReadOnlyBufferException.init()
java.util.StringTokenizer.hasMoreTokens()
sun.java2d.loops.SurfaceType.pixelFor(int,java.awt.image.ColorModel)
org.sunflow.core.Geometry.tesselate()
java.util.regex.Pattern.bitsOrSingle(java.util.regex.Pattern$BitClass,int)
org.codehaus.janino.Parser.throwParseException(java.lang.String)
org.sunflow.core.LightServer.init(org.sunflow.core.Scene)
org.sunflow.SunflowAPI.shaderOverride(java.lang.String,boolean)
sun.util.calendar.ZoneInfoFile.getCustomTimeZone(java.lang.String,int)
org.sunflow.core.ParameterList$Parameter.init(java.lang.String,org.sunflow.core.ParameterList$1)
sun.awt.dnd.SunDropTargetContextPeer.access$102(sun.awt.dnd.SunDropTargetContextPeer,long)
java.awt.EventQueue$1AWTInvocationLock.init()
sun.awt.SunToolkit.checkAndSetPolicy(java.awt.Container,boolean)
javax.swing.JScrollPane.createVerticalScrollBar()
java.awt.dnd.InvalidDnDOperationException.init()
javax.swing.text.AbstractDocument.getDocumentFilter()
org.sunflow.core.ParameterList$Parameter.access$1100(org.sunflow.core.ParameterList$Parameter)
java.util.ResourceBundle$LoaderReference.init(java.lang.ClassLoader,java.lang.ref.ReferenceQueue,java.util.ResourceBundle$CacheKey)
java.util.regex.Pattern.single()
java.awt.Window.access$1200(java.awt.Window)
java.lang.Math.abs(int)
org.sunflow.RenderObjectMap$RenderObjectHandle.access$500(org.sunflow.RenderObjectMap$RenderObjectHandle)
java.awt.KeyboardFocusManager$2.init()
org.sunflow.core.tesselatable.Gumbo.parseFloatArray(org.sunflow.system.Parser)
javax.swing.text.StyleContext$FontKey.setValue(java.lang.String,int,int)
java.util.regex.Pattern.charPropertyNodeFor(java.lang.String)
javax.swing.DefaultSingleSelectionModel.init()
org.codehaus.janino.SimpleCompiler$AuxiliaryClassLoader.init(java.lang.ClassLoader)
org.sunflow.core.display.FrameDisplay.init(java.lang.String)
java.lang.SecurityManager.checkPropertyAccess(java.lang.String)
org.codehaus.janino.Parser.parseExpressionStatement()
java.lang.Exception.init()
javax.swing.JComponent.getClientProperty(java.lang.Object)
java.beans.PropertyChangeSupport$PropertyChangeListenerMap.init(java.beans.PropertyChangeSupport$1)
org.codehaus.janino.Parser.parseIfStatement()
javax.swing.SwingUtilities.getSuppressDropTarget()
java.util.regex.ASCII.isAlnum(int)
javax.swing.JComponent.isDoubleBuffered()
java.awt.EventQueue.invokeAndWait(java.lang.Object,java.lang.Runnable)
javax.swing.JPopupMenu.add(javax.swing.JMenuItem)
org.codehaus.janino.Scanner$OperatorToken.init(org.codehaus.janino.Scanner,org.codehaus.janino.Scanner$1,java.lang.String)
java.util.Vector.init(int)
java.awt.Component.mouseDown(java.awt.Event,int,int)
java.lang.String.substring(int,int)
java.awt.Container.setFont(java.awt.Font)
java.text.DateFormatSymbols.getInstance(java.util.Locale)
java.io.PrintWriter.init(java.io.OutputStream,boolean)
java.awt.image.ColorModel.isAlphaPremultiplied()
java.lang.reflect.Constructor.getDeclaringClass()
java.awt.datatransfer.MimeTypeParameterList.isTokenChar(char)
java.awt.Component.processHierarchyEvent(java.awt.event.HierarchyEvent)
java.util.regex.Pattern$CharPropertyNames.charPropertyFor(java.lang.String)
java.lang.ThreadLocal.initialValue()
java.awt.Component.mouseEnter(java.awt.Event,int,int)
org.codehaus.janino.Scanner.init(java.lang.String,java.io.Reader)
org.codehaus.janino.util.Traverser.traverseCompilationUnit(org.codehaus.janino.Java$CompilationUnit)
org.codehaus.janino.tools.JGrep$Action.getMethodInvocationAction(java.lang.String)
javax.swing.UnsupportedLookAndFeelException.init(java.lang.String)
java.util.PriorityQueue.remove(java.lang.Object)
javax.swing.LookAndFeel.getSupportsWindowDecorations()
javax.swing.Timer.setRepeats(boolean)
java.util.StringTokenizer.init(java.lang.String,java.lang.String)
java.awt.datatransfer.MimeType.getBaseType()
org.codehaus.janino.Parser.parseThrowStatement()
java.awt.Component.applyCurrentShape()
org.sunflow.SunflowAPI.shader(java.lang.String,org.sunflow.core.Shader)
java.lang.StringBuffer.append(char[],int,int)
java.lang.ThreadLocal.access$400(java.lang.ThreadLocal)
java.lang.reflect.Modifier.isFinal(int)
java.util.ResourceBundle.getBundle(java.lang.String)
javax.swing.JRadioButton.init(java.lang.String,javax.swing.Icon,boolean)
org.codehaus.janino.Compiler.main(java.lang.String[])
java.awt.datatransfer.DataFlavor.getPrimaryType()
java.lang.Character.init(char)
java.lang.Class.getSimpleBinaryName()
sun.java2d.x11.X11SurfaceData.createData(sun.awt.X11GraphicsConfig,int,int,java.awt.image.ColorModel,java.awt.Image,long,int)
java.awt.Window.setModalBlocked(java.awt.Dialog,boolean,boolean)
java.awt.Container.decreaseComponentCount(java.awt.Component)
org.codehaus.janino.Parser.parseConditionalAndExpression()
javax.swing.TransferHandler$SwingDropTarget.init(java.awt.Component)
sun.awt.util.IdentityArrayList.add(java.lang.Object)
sun.util.calendar.CalendarDate.getZoneOffset()
java.util.regex.Pattern$Behind.init(java.util.regex.Pattern$Node,int,int)
java.awt.Component$3.init(java.awt.Component,java.lang.Class)
java.util.Arrays$ArrayList.init(java.lang.Object[])
java.lang.AbstractStringBuilder.append(float)
java.awt.Font.init(java.lang.String,int,int)
java.util.regex.Pattern$CIBackRef.init(int,boolean)
sun.nio.cs.StreamEncoder.flushBuffer()
javax.swing.UIManager.getMultiLookAndFeel()
sun.java2d.loops.FillParallelogram.locate(sun.java2d.loops.SurfaceType,sun.java2d.loops.CompositeType,sun.java2d.loops.SurfaceType)
java.util.Date.getCalendarSystem(sun.util.calendar.BaseCalendar$Date)
javax.swing.JComponent.getBorder()
sun.util.calendar.ZoneInfoFile.getFromCache(java.lang.String)
java.util.ResourceBundle$CacheKey.access$702(java.util.ResourceBundle$CacheKey,long)
java.awt.Container.adjustDescendants(int)
org.codehaus.janino.util.ClassFile.access$0(java.io.DataOutputStream,java.util.List)
java.util.concurrent.locks.ReentrantReadWriteLock.access$000(java.util.concurrent.locks.ReentrantReadWriteLock)
java.awt.event.InvocationEvent.init(java.lang.Object,int,java.lang.Runnable,java.lang.Object,boolean)
java.net.NetworkInterface$1checkedAddresses.init(java.net.NetworkInterface)
org.codehaus.janino.UnicodeUnescapeReader.main(java.lang.String[])
java.security.Policy.initPolicy(java.security.Policy)
org.sunflow.core.LightServer.setShaderOverride(org.sunflow.core.Shader,boolean)
java.lang.AbstractStringBuilder.charAt(int)
javax.swing.text.SegmentCache$CachedSegment.init()
sun.reflect.misc.ReflectUtil.needsPackageAccessCheck(java.lang.ClassLoader,java.lang.ClassLoader)
java.util.HashSet.add(java.lang.Object)
org.sunflow.RenderObjectMap.lookupShader(java.lang.String)
sun.awt.SunToolkit.wakeupEventQueue(java.awt.EventQueue,boolean)
java.lang.Thread.getContextClassLoader()
javax.swing.JFrame.remove(java.awt.Component)
org.sunflow.core.Camera.init(org.sunflow.core.CameraLens)
org.codehaus.janino.Java$Atom.toRvalue()
java.awt.event.KeyEvent.setModifiers(int)
java.awt.MenuItem.getLabel()
java.awt.Component.addPropertyChangeListener(java.beans.PropertyChangeListener)
java.io.Reader.read(char[])
java.lang.ref.ReferenceQueue.poll()
java.text.NumberFormat.getPercentInstance(java.util.Locale)
java.lang.Boolean.getBoolean(java.lang.String)
org.sunflow.system.ImagePanel.init()
sun.awt.MostRecentKeyValue.init(java.lang.Object,java.lang.Object)
org.codehaus.janino.tools.JGrep$JGrepIClassLoader.init(org.codehaus.janino.tools.JGrep,org.codehaus.janino.IClassLoader)
org.sunflow.core.LightServer$1.init(org.sunflow.core.LightServer,int,int,int,float[],float,org.sunflow.core.PhotonStore)
javax.swing.JLabel.setHorizontalAlignment(int)
javax.swing.text.StyleContext.createLargeAttributeSet(javax.swing.text.AttributeSet)
java.awt.Component.removeNotify()
java.awt.Component.minimumSize()
org.codehaus.janino.tools.Disassembler.printConstantPoolEntry(java.lang.String,short)
java.awt.KeyboardFocusManager.initPeer()
java.util.HashMap.putAllForCreate(java.util.Map)
java.nio.charset.Charset.probeExtendedProvider()
sun.awt.dnd.SunDropTargetContextPeer$EventDispatcher.dispatchEvent(sun.awt.dnd.SunDropTargetEvent)
org.sunflow.core.ParameterList.addMatrices(java.lang.String,org.sunflow.core.ParameterList$InterpolationType,float[])
java.util.regex.Pattern.producePermutations(java.lang.String)
org.codehaus.janino.JavaSourceIClassLoader.init(org.codehaus.janino.util.resource.ResourceFinder,java.lang.String,java.util.Set,org.codehaus.janino.IClassLoader)
sun.java2d.SurfaceData.init(sun.java2d.StateTrackable$State,sun.java2d.loops.SurfaceType,java.awt.image.ColorModel)
org.sunflow.core.AccelerationStructureFactory.create(java.lang.String,int,boolean)
org.codehaus.janino.Scanner.stringToLongLiteralToken(java.lang.String,int)
java.util.concurrent.ConcurrentHashMap.ensureSegment(int)
sun.awt.image.VolatileSurfaceManager.initialize()
java.util.JapaneseImperialCalendar.init(java.util.TimeZone,java.util.Locale)
java.lang.Error.init(java.lang.String)
java.awt.geom.AffineTransform.getScaleX()
javax.swing.KeyStroke.getKeyStroke(int,int)
org.sunflow.core.ParameterList.addBoolean(java.lang.String,boolean)
java.awt.GraphicsEnvironment.init()
org.codehaus.janino.ClassBodyEvaluator.setDefaultImports(java.lang.String[])
sun.reflect.FieldAccessorImpl.init()
java.lang.Thread.setDaemon(boolean)
sun.java2d.loops.GraphicsPrimitive.tracingEnabled()
org.codehaus.janino.ScriptEvaluator.init()
javax.swing.DebugGraphics.info()
org.codehaus.janino.util.iterator.MultiDimensionalIterator.init(java.util.Iterator,int)
java.awt.Component.transferFocusBackward(boolean)
sun.reflect.ReflectionFactory$GetReflectionFactoryAction.init()
java.text.NumberFormat.getMaximumIntegerDigits()
java.io.File.checkAndCreate(java.lang.String,java.lang.SecurityManager,boolean)
sun.nio.cs.StreamEncoder.init(java.io.OutputStream,java.lang.Object,java.nio.charset.Charset)
java.awt.LightweightDispatcher.stopListeningForOtherDrags()
java.awt.dnd.DropTarget.setActive(boolean)
java.awt.KeyboardFocusManager.fireVetoableChange(java.lang.String,java.lang.Object,java.lang.Object)
org.codehaus.janino.Java$EnclosingScopeOfTypeDeclaration.init(org.codehaus.janino.Java$TypeDeclaration)
org.sunflow.RenderObjectMap$RenderObjectHandle.init(org.sunflow.core.LightSource)
java.awt.geom.AffineTransform.getTranslateX()
java.awt.image.Raster.getWidth()
java.util.Formatter$FormatSpecifier.checkInteger()
java.nio.charset.CharsetEncoder.implOnMalformedInput(java.nio.charset.CodingErrorAction)
org.codehaus.janino.Parser.parseVariableDeclarator()
java.awt.event.InvocationEvent.getWhen()
org.codehaus.janino.Scanner$Token.isIdentifier()
java.util.logging.LogManager.doSetParent(java.util.logging.Logger,java.util.logging.Logger)
sun.util.calendar.LocalGregorianCalendar$Date.init(java.util.TimeZone)
java.lang.ClassLoader.getParent()
sun.awt.image.SurfaceManager.setManager(java.awt.Image,sun.awt.image.SurfaceManager)
java.util.logging.Level.access$000(java.util.logging.Level)
java.util.Calendar.getTime()
java.util.regex.Pattern$Neg.init(java.util.regex.Pattern$Node)
java.net.URL.getHost()
javax.swing.JViewport.isBlitting()
java.util.concurrent.atomic.AtomicBoolean.set(boolean)
java.lang.reflect.Method.getExceptionTypes()
javax.swing.event.SwingPropertyChangeSupport.init(java.lang.Object,boolean)
javax.swing.text.StyleContext.getDefaultStyleContext()
sun.util.calendar.ZoneInfo.getCachedAliasTable()
java.net.URL.openStream()
java.awt.DefaultKeyboardFocusManager.init()
sun.security.util.Debug.init()
org.codehaus.janino.Scanner.access$1(org.codehaus.janino.Scanner)
java.awt.Component.repaint(int,int,int,int)
java.security.AccessControlContext.calculateFields(java.security.AccessControlContext,java.security.AccessControlContext,java.security.Permission[])
java.util.Calendar.getInstance(java.util.TimeZone,java.util.Locale)
org.codehaus.janino.Java$SynchronizedStatement.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Rvalue,org.codehaus.janino.Java$BlockStatement)
java.io.StringReader.init(java.lang.String)
sun.reflect.ClassFileAssembler.cpi()
org.codehaus.janino.Parser.readKeyword(java.lang.String)
java.awt.AWTKeyStroke.getAWTKeyStroke(int,int)
sun.font.AttributeValues.i_validate(sun.font.EAttribute)
javax.swing.JComponent.setBorder(javax.swing.border.Border)
sun.security.action.GetPropertyAction.init(java.lang.String,java.lang.String)
org.sunflow.RenderObjectMap$RenderObjectHandle.access$100(org.sunflow.RenderObjectMap$RenderObjectHandle)
java.util.regex.Pattern.subFlag()
sun.util.calendar.AbstractCalendar.getNthDayOfWeek(int,int,sun.util.calendar.CalendarDate)
sun.reflect.Reflection.verifyMemberAccess(java.lang.Class,java.lang.Class,java.lang.Object,int)
java.lang.StringBuffer.append(java.lang.String)
sun.awt.dnd.SunDropTargetContextPeer$EventDispatcher.dispatchDropEvent(sun.awt.dnd.SunDropTargetEvent)
java.util.logging.Logger.getCallersClassLoader()
java.util.AbstractCollection.addAll(java.util.Collection)
org.codehaus.janino.util.ClassFile.storeMethods(java.io.DataOutputStream,java.util.List)
sun.util.LocaleServiceProviderPool.getLocalizedObject(sun.util.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,sun.util.resources.OpenListResourceBundle,java.lang.String,java.lang.Object[])
java.util.regex.Pattern.peekPastWhitespace(int)
org.sunflow.system.Parser.checkNextToken(java.lang.String)
java.text.DecimalFormat.adjustForCurrencyDefaultFractionDigits()
java.util.ResourceBundle$BundleReference.getCacheKey()
sun.util.CoreResourceBundleControl.getRBControlInstance(java.lang.String)
org.sunflow.math.Matrix4.rotate(float,float,float,float)
sun.awt.util.IdentityArrayList.contains(java.lang.Object)
java.lang.String.endsWith(java.lang.String)
java.beans.PropertyChangeSupport.firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)
sun.reflect.UnsafeQualifiedStaticCharacterFieldAccessorImpl.init(java.lang.reflect.Field,boolean)
javax.swing.JRootPane.setContentPane(java.awt.Container)
sun.font.AttributeValues.setDefault(sun.font.EAttribute)
java.util.UnknownFormatConversionException.init(java.lang.String)
java.text.DecimalFormatSymbols.getExponentSeparator()
java.io.DataInputStream.readUTF()
org.codehaus.janino.Location.init(java.lang.String,short,short)
javax.swing.JComponent.paintForceDoubleBuffered(java.awt.Graphics)
javax.swing.LookAndFeel.init()
java.util.AbstractList$ListItr.init(java.util.AbstractList,int)
javax.swing.JComponent.setRequestFocusEnabled(boolean)
java.util.concurrent.locks.AbstractQueuedSynchronizer.tryRelease(int)
java.awt.Component.init()
java.lang.Thread.isCCLOverridden(java.lang.Class)
javax.swing.text.Utilities.isComposedTextElement(javax.swing.text.Element)
java.awt.image.ComponentSampleModel.getPixelStride()
sun.util.LocaleServiceProviderPool.getLocalizedObject(sun.util.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,java.lang.Object[])
sun.reflect.ClassFileAssembler.opc_l2f()
java.awt.Component.relocateComponent()
java.text.Format.createAttributedCharacterIterator(java.lang.String,java.text.AttributedCharacterIterator$Attribute,java.lang.Object)
org.sunflow.system.UI.set(org.sunflow.system.UserInterface)
java.awt.Component.addComponentListener(java.awt.event.ComponentListener)
java.util.TimeZone.getTimeZone(java.lang.String,boolean)
java.util.StringTokenizer.init(java.lang.String)
sun.util.calendar.AbstractCalendar.getDayOfWeekDateOnOrBefore(long,int)
javax.swing.JScrollBar.init(int,int,int,int,int)
java.lang.Class.copyMethods(java.lang.reflect.Method[])
javax.swing.TransferHandler$TransferSupport.init(java.awt.Component,java.awt.dnd.DropTargetEvent,javax.swing.TransferHandler$1)
java.beans.PropertyChangeEvent.getOldValue()
javax.swing.JScrollPane.getCorner(java.lang.String)
java.awt.event.HierarchyEvent.init(java.awt.Component,int,java.awt.Component,java.awt.Container,long)
org.sunflow.core.renderer.SimpleRenderer$BucketThread.run()
javax.swing.text.AbstractDocument.getFilterBypass()
javax.swing.JViewport.createLayoutManager()
javax.swing.JTextArea.init(javax.swing.text.Document,java.lang.String,int,int)
org.sunflow.system.ImagePanel.paintComponent(java.awt.Graphics)
java.nio.Buffer.checkBounds(int,int,int)
java.util.Date.getTimeImpl()
java.util.TimeZone.parseCustomTimeZone(java.lang.String)
org.codehaus.janino.Location.getFileName()
javax.swing.text.StyleContext.getEmptySet()
org.codehaus.janino.tools.HprofScrubber.dumpSites(org.codehaus.janino.tools.HprofScrubber$Site[],java.util.Map)
java.beans.ChangeListenerMap.extract(java.util.EventListener)
java.awt.datatransfer.MimeType.getParameter(java.lang.String)
java.lang.Character.toChars(int)
java.util.AbstractMap.init()
sun.awt.image.BufImgSurfaceData.createDataBC(java.awt.image.BufferedImage,sun.java2d.loops.SurfaceType,int)
java.util.logging.LogRecord.setThrown(java.lang.Throwable)
java.lang.ClassLoader.init(java.lang.Void,java.lang.ClassLoader)
javax.swing.text.AbstractDocument$AbstractElement.addAttribute(java.lang.Object,java.lang.Object)
sun.util.calendar.CalendarDate.getSeconds()
sun.util.calendar.AbstractCalendar.getTime(sun.util.calendar.CalendarDate)
sun.awt.image.VolatileSurfaceManager.getBackupSurface()
java.util.logging.Logger.getName()
java.awt.Component.processFocusEvent(java.awt.event.FocusEvent)
java.lang.Character.isLetterOrDigit(char)
java.awt.AWTKeyStroke.getAWTKeyStrokeClass()
sun.util.LocaleServiceProviderPool.getPool(java.lang.Class)
org.codehaus.janino.ClassBodyEvaluator.setImplementedTypes(java.lang.Class[])
sun.misc.FloatingDecimal.ulp(double,boolean)
java.awt.KeyboardFocusManager.getHeavyweight(java.awt.Component)
sun.reflect.AccessorGenerator.indexForPrimitiveType(java.lang.Class)
java.text.MessageFormat.init(java.lang.String,java.util.Locale)
sun.awt.image.ShortComponentRaster.getDataOffset(int)
java.awt.image.VolatileImage.init()
java.awt.im.InputContext.removeNotify(java.awt.Component)
org.sunflow.core.gi.InstantGI.init(org.sunflow.core.Options)
sun.java2d.pipe.Region.needSpace(int)
java.lang.ConditionalSpecialCasing$Entry.getUpperCase()
java.security.Policy$3.init(java.security.Policy)
java.util.Collections$UnmodifiableSet.init(java.util.Set)
sun.util.calendar.CalendarDate.setMinutes(int)
java.awt.event.MouseEvent.getClickCount()
java.lang.Number.init()
javax.swing.LayoutFocusTraversalPolicy.init()
java.lang.Throwable.getCause()
java.text.MessageFormat.format(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition)
java.lang.IllegalArgumentException.init(java.lang.String)
java.nio.Buffer.hasRemaining()
java.awt.Component.clearCurrentFocusCycleRootOnHide()
javax.swing.JLabel.checkHorizontalKey(int,java.lang.String)
org.codehaus.janino.ClassBodyEvaluator.init(org.codehaus.janino.Scanner,java.lang.String,java.lang.Class,java.lang.Class[],java.lang.ClassLoader)
javax.swing.text.AbstractDocument.readUnlock()
javax.swing.UIManager$LAFState.init()
sun.util.LocaleServiceProviderPool$1.init(sun.util.LocaleServiceProviderPool,java.lang.Class)
javax.swing.ToolTipManager.registerComponent(javax.swing.JComponent)
java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(int)
javax.swing.JPanel.updateUI()
org.sunflow.RenderObjectMap$RenderObjectHandle.update(org.sunflow.core.ParameterList,org.sunflow.SunflowAPI)
org.codehaus.janino.Parser.parseReturnStatement()
sun.java2d.loops.GraphicsPrimitiveProxy.instantiate()
java.util.SimpleTimeZone.getDSTSavings()
java.awt.image.Raster.getSampleModel()
java.awt.image.BufferedImage$1.init(java.lang.Class,java.lang.Class,java.lang.Class)
sun.util.LocaleServiceProviderPool$NullProvider.access$200()
sun.util.calendar.AbstractCalendar.getDayOfWeekDateAfter(long,int)
java.awt.Container.addPropertyChangeListener(java.beans.PropertyChangeListener)
javax.swing.JComponent.rectangleIsObscured(int,int,int,int)
java.util.Hashtable.init()
java.text.NumberFormat.setMinimumIntegerDigits(int)
java.lang.InstantiationException.init(java.lang.String)
java.text.Format.createAttributedCharacterIterator(java.lang.String)
org.sunflow.util.FastHashMap.iterator()
SunflowGUI$12.init(SunflowGUI)
org.codehaus.janino.Scanner$Token.getOperator()
java.awt.GraphicsEnvironment.getHeadlessProperty()
java.text.DecimalFormat.getMinimumFractionDigits()
java.util.HashSet.init(int,float,boolean)
java.lang.ThreadLocal.createInheritedMap(java.lang.ThreadLocal$ThreadLocalMap)
org.sunflow.math.Point3.mid(org.sunflow.math.Point3,org.sunflow.math.Point3,org.sunflow.math.Point3)
java.util.AbstractList.listIterator()
java.awt.Toolkit.notifyAWTEventListeners(java.awt.AWTEvent)
java.lang.String.indexOf(char[],int,int,char[],int,int,int)
java.text.AttributedString$AttributedStringIterator.updateRunInfo()
java.util.LinkedList.add(java.lang.Object)
java.awt.AWTError.init(java.lang.String)
org.codehaus.janino.UnparseVisitor.main(java.lang.String[])
sun.reflect.UnsafeQualifiedStaticFieldAccessorImpl.init(java.lang.reflect.Field,boolean)
java.awt.datatransfer.MimeTypeParameterList.unquote(java.lang.String)
java.util.Properties.loadConvert(char[],int,int,char[])
java.util.Formatter$Flags.add(java.util.Formatter$Flags)
java.util.Calendar.getTimeInMillis()
sun.awt.image.VolatileSurfaceManager.getPrimarySurfaceData()
org.codehaus.janino.ExpressionEvaluator.init(java.lang.String,java.lang.Class,java.lang.String[],java.lang.Class[],java.lang.Class[],java.lang.ClassLoader)
java.awt.KeyboardFocusManager.retargetFocusLost(java.awt.event.FocusEvent)
org.sunflow.SunflowAPI.parameter(java.lang.String,org.sunflow.math.Vector3)
java.util.TimeZone.getOffset(long)
sun.reflect.misc.ReflectUtil.isAncestor(java.lang.ClassLoader,java.lang.ClassLoader)
sun.util.calendar.CalendarDate.setMillis(int)
org.codehaus.janino.Parser.parseArguments()
java.lang.ThreadLocal$ThreadLocalMap.init(java.lang.ThreadLocal,java.lang.Object)
org.codehaus.janino.Parser.peekKeyword(java.lang.String[])
java.io.Reader.init()
java.util.regex.Pattern.produceEquivalentAlternation(java.lang.String)
sun.awt.im.InputContext.logCreationFailed(java.lang.Throwable)
org.codehaus.janino.Parser.readOperator(java.lang.String)
java.security.GeneralSecurityException.init(java.lang.String)
org.sunflow.RenderObjectMap$RenderObjectHandle.getGeometry()
java.text.DateFormat.get(int,int,int,java.util.Locale)
javax.swing.JViewport.flushViewDirtyRegion(java.awt.Graphics,java.awt.Rectangle)
java.awt.Point.init()
java.util.logging.Logger.accessCheckedHandlers()
org.codehaus.janino.Scanner.getFileName()
java.io.EOFException.init()
sun.nio.cs.StreamEncoder.init(java.io.OutputStream,java.lang.Object,java.nio.charset.CharsetEncoder)
java.util.Collections$UnmodifiableCollection.init(java.util.Collection)
java.awt.Container.eventEnabled(java.awt.AWTEvent)
org.sunflow.Benchmark.access$200(org.sunflow.Benchmark)
org.codehaus.janino.tools.Disassembler.readAttributes(java.io.DataInputStream)
org.sunflow.system.ImagePanel.imagePrepare(int,int,int,int,int)
java.util.Collections$SynchronizedRandomAccessList.init(java.util.List)
sun.java2d.SunGraphics2D.setDevClip(int,int,int,int)
java.util.PriorityQueue.siftDownComparable(int,java.lang.Object)
java.text.DecimalFormatSymbols.initialize(java.util.Locale)
org.codehaus.janino.Compiler.class$(java.lang.String)
java.util.Currency$CurrencyNameGetter.access$300()
SunflowGUI$9.init(SunflowGUI)
javax.swing.JFrame.isDefaultLookAndFeelDecorated()
SunflowGUI$8.init(SunflowGUI)
java.awt.event.KeyEvent.setKeyChar(char)
org.codehaus.janino.util.CausedException.init(java.lang.String)
org.sunflow.RenderObjectMap$RenderObjectHandle.init(org.sunflow.core.Instance)
java.io.PrintStream.newLine()
java.awt.Component.setLocation(int,int)
java.awt.datatransfer.MimeType.removeParameter(java.lang.String)
java.util.concurrent.locks.AbstractOwnableSynchronizer.init()
java.awt.LightweightDispatcher.init(java.awt.Container)
org.codehaus.janino.Cookable.cook(java.lang.String)
java.lang.AbstractStringBuilder.append(boolean)
org.sunflow.core.ParameterList.addPoints(java.lang.String,org.sunflow.core.ParameterList$InterpolationType,float[])
java.text.NumberFormat.setMaximumIntegerDigits(int)
org.sunflow.RenderObjectMap.remove(java.lang.String)
java.util.BitSet.wordIndex(int)
javax.swing.JScrollBar.init(int)
java.util.logging.LogRecord.setLoggerName(java.lang.String)
javax.swing.text.BadLocationException.init(java.lang.String,int)
java.lang.StringBuilder.append(java.lang.Object)
java.awt.Container.preProcessKeyEvent(java.awt.event.KeyEvent)
java.lang.Character.isHighSurrogate(char)
java.security.Permission.newPermissionCollection()
java.lang.Class.arrayContentsEq(java.lang.Object[],java.lang.Object[])
java.awt.Container.getComponents_NoClientCode()
java.util.TimeZone.getTimeZone(java.lang.String)
java.util.AbstractSequentialList.init()
org.sunflow.core.display.FastDisplay.imageEnd()
java.awt.Component.getSiblingIndexBelow()
java.util.PropertyPermission.init(int)
sun.security.provider.PolicyFile.init(java.net.URL)
javax.swing.TimerQueue.removeTimer(javax.swing.Timer)
java.util.IllegalFormatWidthException.init(int)
javax.swing.text.GapVector.resize(int)
org.sunflow.core.Instance.init()
org.sunflow.system.UI.printError(org.sunflow.system.UI$Module,java.lang.String,java.lang.Object[])
java.awt.Menu.countItemsImpl()
javax.swing.JComponent.getDefaultLocale()
java.awt.AWTEvent$2.init()
org.codehaus.janino.Parser.init(org.codehaus.janino.Scanner)
javax.swing.UIDefaults.getFromHashtable(java.lang.Object)
java.text.ChoiceFormat.applyPattern(java.lang.String)
java.util.ResourceBundle.isValidBundle(java.util.ResourceBundle)
java.util.HashMap.getForNullKey()
java.lang.Integer.parseInt(java.lang.String)
java.awt.datatransfer.DataFlavor.init(java.lang.String,java.lang.String)
java.nio.charset.Charset.forName(java.lang.String)
org.sunflow.util.FastHashMap$EntryIterator.hasNext()
java.lang.reflect.Modifier.isStatic(int)
java.util.regex.Pattern$Single.init(int)
java.lang.StringBuilder.appendCodePoint(int)
java.awt.KeyboardFocusManager.clearMostRecentFocusOwner(java.awt.Component)
org.codehaus.janino.Java$CompilationUnit.init(java.lang.String)
org.sunflow.core.light.TriangleMeshLight.access$400(org.sunflow.core.light.TriangleMeshLight,int)
java.lang.Class.newReflectionData(java.lang.ref.SoftReference,int)
java.awt.datatransfer.MimeTypeParameterList.toString()
java.lang.Character.isWhitespace(int)
java.util.regex.Matcher.appendTail(java.lang.StringBuffer)
javax.swing.text.StyleContext.reclaim(javax.swing.text.AttributeSet)
java.lang.ConditionalSpecialCasing.lookUpTable(java.lang.String,int,java.util.Locale,boolean)
org.codehaus.janino.ScriptEvaluator.fillBlock(int,org.codehaus.janino.Scanner,org.codehaus.janino.Java$Block)
sun.java2d.pipe.RegionSpanIterator.init(sun.java2d.pipe.Region)
java.text.DecimalFormatSymbols.getDigit()
javax.swing.text.AbstractDocument$LeafElement.init(javax.swing.text.AbstractDocument,javax.swing.text.Element,javax.swing.text.AttributeSet,int,int)
java.lang.Runtime.exit(int)
java.security.AccessControlContext.optimize()
org.codehaus.janino.tools.Disassembler$6.init(int,org.codehaus.janino.tools.Disassembler)
java.util.TimeZone.setID(java.lang.String)
java.lang.Thread.checkAccess()
java.awt.SentEvent.init(java.awt.AWTEvent)
java.lang.Long.toString(long)
java.util.concurrent.locks.ReentrantReadWriteLock$FairSync.init()
java.util.Date.getCalendarSystem(long)
java.awt.Component.notifyNewBounds(boolean,boolean)
javax.swing.LookAndFeel.uninitialize()
javax.swing.RepaintManager.scheduleProcessingRunnable()
javax.swing.SwingUtilities.isEventDispatchThread()
org.sunflow.SunflowAPI.parameter(java.lang.String,int)
javax.swing.AbstractButton.setHorizontalAlignment(int)
java.util.SimpleTimeZone.decodeEndRule()
org.codehaus.janino.Parser.parseReferenceType()
java.text.DateFormatSymbols.initializeData(java.util.Locale)
java.awt.GraphicsConfiguration.createCompatibleVolatileImage(int,int)
sun.reflect.ClassFileAssembler.opc_instanceof(short)
java.awt.image.ColorModel.getBlue(java.lang.Object)
java.util.PropertyPermission.getMask(java.lang.String)
sun.awt.SunToolkit.targetToAppContext(java.lang.Object)
java.awt.Component.hide()
java.awt.Component.mixOnShowing()
java.awt.Window.doDispose()
javax.swing.JComponent.getY()
java.lang.reflect.Constructor.getModifiers()
java.awt.image.BufferedImage.getRaster()
java.awt.EventQueueItem.init(java.awt.AWTEvent)
javax.swing.text.AbstractDocument.updateBidi(javax.swing.text.AbstractDocument$DefaultDocumentEvent)
java.util.WeakHashMap.put(java.lang.Object,java.lang.Object)
java.lang.VirtualMachineError.init()
java.io.PrintWriter.print(java.lang.String)
java.util.Formatter$Flags.contains(java.util.Formatter$Flags)
javax.swing.text.SegmentCache.releaseSharedSegment(javax.swing.text.Segment)
sun.net.util.IPAddressUtil.convertFromIPv4MappedAddress(byte[])
javax.swing.AbstractButton.addActionListener(java.awt.event.ActionListener)
java.io.ByteArrayInputStream.available()
java.awt.datatransfer.SystemFlavorMap.store(java.lang.Object,java.lang.Object,java.util.Map)
java.util.logging.Logger.findResourceBundleFromStack(java.lang.String,java.util.Locale,java.lang.ClassLoader)
org.codehaus.janino.Java$MemberClassDeclaration.init(org.codehaus.janino.Location,java.lang.String,short,java.lang.String,org.codehaus.janino.Java$Type,org.codehaus.janino.Java$Type[])
sun.reflect.ClassFileAssembler.opc_invokeinterface(short,int,byte,int)
org.codehaus.janino.CachingJavaSourceClassLoader.init(java.lang.ClassLoader,org.codehaus.janino.util.resource.ResourceFinder,java.lang.String,org.codehaus.janino.util.resource.ResourceFinder,org.codehaus.janino.util.resource.ResourceCreator,org.codehaus.janino.util.enumerator.EnumeratorSet)
org.codehaus.janino.IClass$1.init(org.codehaus.janino.IClass,org.codehaus.janino.IClass)
sun.java2d.pipe.Region.intersectsQuickCheck(sun.java2d.pipe.Region)
java.nio.charset.CharsetDecoder.maxCharsPerByte()
java.net.URL.toExternalForm()
java.util.logging.Logger.findSystemResourceBundle(java.util.Locale)
sun.awt.image.VSyncedBSManager$NoLimitVSyncBSMgr.init(sun.awt.image.VSyncedBSManager$1)
javax.swing.text.AbstractDocument.handleRemove(int,int)
java.util.Vector.init()
javax.swing.DebugGraphics.init()
java.lang.IllegalArgumentException.init()
java.awt.event.MouseEvent.getX()
org.sunflow.system.BenchmarkFramework.execute(org.sunflow.system.BenchmarkTest)
java.text.SimpleDateFormat.isGregorianCalendar()
javax.swing.text.SimpleAttributeSet.init(javax.swing.text.AttributeSet)
java.util.Calendar.get(int)
java.awt.KeyboardFocusManager.getLastHWRequest()
java.text.Format.init()
java.lang.ArrayIndexOutOfBoundsException.init(java.lang.String)
java.awt.Rectangle.contains(int,int,int,int)
org.codehaus.janino.tools.Disassembler$12.init(short,org.codehaus.janino.tools.Disassembler)
java.lang.Class.getDeclaringClass()
java.util.Hashtable.put(java.lang.Object,java.lang.Object)
sun.swing.SwingUtilities2.isComplexLayout(char[],int,int)
java.util.Random.setSeed(long)
java.util.concurrent.locks.AbstractQueuedSynchronizer.getState()
java.awt.EventQueue.eventToCacheIndex(java.awt.AWTEvent)
java.security.AccessControlContext.getDebug()
org.codehaus.janino.Scanner.read()
java.util.Formatter$FormatSpecifier.conversion(java.lang.String)
java.util.ResourceBundle.getObject(java.lang.String)
javax.swing.text.StyleContext.getImmutableUniqueSet()
java.util.ResourceBundle$CacheKey.getCause()
org.codehaus.janino.Parser.parseVariableDeclaratorRest(java.lang.String)
java.util.regex.Pattern$End.init()
java.awt.Component.getBounds()
java.io.File.listFiles()
org.sunflow.SunflowAPI.geometry(java.lang.String,org.sunflow.core.Tesselatable)
java.awt.geom.AffineTransform.init(java.awt.geom.AffineTransform)
sun.java2d.opengl.GLXVolatileSurfaceManager.init(sun.awt.image.SunVolatileImage,java.lang.Object)
java.awt.KeyboardFocusManager.checkReplaceKFMPermission()
java.util.HashMap.createEntry(int,java.lang.Object,java.lang.Object,int)
java.awt.AWTEventMulticaster.remove(java.awt.event.MouseMotionListener,java.awt.event.MouseMotionListener)
java.text.AttributedString.getIterator(java.text.AttributedCharacterIterator$Attribute[],int,int)
org.codehaus.janino.Compiler.init(java.io.File[],java.io.File[],java.io.File[],java.io.File[],java.io.File,java.lang.String,boolean,org.codehaus.janino.util.enumerator.EnumeratorSet,org.codehaus.janino.util.StringPattern[],boolean)
java.io.FileOutputStream.init(java.io.File)
java.awt.Window.setBounds(int,int,int,int)
java.awt.Component.autoProcessMouseWheel(java.awt.event.MouseWheelEvent)
java.util.regex.Pattern.error(java.lang.String)
sun.awt.image.ByteComponentRaster.getPixelStride()
org.sunflow.SunflowAPI.lookupInstance(java.lang.String)
java.awt.datatransfer.MimeType.isValidToken(java.lang.String)
javax.swing.JComponent.setPaintingChild(java.awt.Component)
java.util.regex.Pattern$CharProperty$1.init(java.util.regex.Pattern$CharProperty)
java.io.PrintStream.write(java.lang.String)
javax.swing.JComponent.getFlag(int)
javax.swing.JComponent.isLightweightComponent(java.awt.Component)
sun.java2d.pipe.Region.appendSpans(sun.java2d.pipe.SpanIterator)
org.sunflow.core.display.ImgPipeDisplay.imageEnd()
java.util.zip.ZipEntry.getTime()
java.util.FormatterClosedException.init()
java.awt.KeyboardFocusManager.handleException(java.lang.Throwable)
SunflowGUI$4.init(SunflowGUI)
java.awt.LightweightDispatcher$2.init(java.awt.LightweightDispatcher)
java.lang.ref.ReferenceQueue.init()
org.sunflow.core.ParameterList.getInt(java.lang.String,int)
java.awt.dnd.DropTarget.init(java.awt.Component,int,java.awt.dnd.DropTargetListener,boolean,java.awt.datatransfer.FlavorMap)
org.sunflow.core.shader.NormalShader.init()
java.util.Calendar.set(int,int,int,int,int,int)
java.util.regex.Pattern$SliceS.init(int[])
org.sunflow.core.display.ImgPipeDisplay.imageFill(int,int,int,int,org.sunflow.image.Color)
java.lang.Class.privateGetDeclaredConstructors(boolean)
org.sunflow.RenderObjectMap.lookupGeometry(java.lang.String)
javax.swing.TransferHandler$DropHandler.init(javax.swing.TransferHandler$1)
javax.swing.text.Utilities.isComposedTextElement(javax.swing.text.Document,int)
org.sunflow.core.ParameterList.addStringArray(java.lang.String,java.lang.String[])
java.awt.Component.show()
java.awt.event.FocusEvent.isTemporary()
sun.reflect.Reflection.isSubclassOf(java.lang.Class,java.lang.Class)
sun.awt.image.SunVolatileImage.getBackupImage()
org.codehaus.janino.Java$EmptyStatement.init(org.codehaus.janino.Location)
javax.swing.DebugGraphics.init(java.awt.Graphics,javax.swing.JComponent)
java.awt.FocusTraversalPolicy.init()
java.awt.event.InvocationEvent.init(java.lang.Object,java.lang.Runnable,java.lang.Object,boolean)
java.lang.ConditionalSpecialCasing.isMoreAbove(java.lang.String,int)
sun.util.calendar.ZoneInfo.getTimeZone(java.lang.String)
org.codehaus.janino.Compiler.createJavacLikePathIClassLoader(java.io.File[],java.io.File[],java.io.File[])
java.awt.GraphicsEnvironment.checkHeadless()
org.codehaus.janino.Scanner$IdentifierToken.init(org.codehaus.janino.Scanner,org.codehaus.janino.Scanner$1,java.lang.String)
java.beans.PropertyChangeSupport.firePropertyChange(java.lang.String,boolean,boolean)
org.codehaus.janino.UnparseVisitor.unparseCompilationUnit(org.codehaus.janino.Java$CompilationUnit)
org.sunflow.core.display.ImgPipeDisplay.imageUpdate(int,int,int,int,org.sunflow.image.Color[])
java.awt.EventQueue.coalescePaintEvent(java.awt.event.PaintEvent)
org.codehaus.janino.util.iterator.DirectoryIterator.traverseDirectories(java.io.File[],java.io.FilenameFilter,java.io.FilenameFilter)
java.awt.AWTEventMulticaster.add(java.awt.event.WindowListener,java.awt.event.WindowListener)
org.sunflow.image.Color.mul(float)
sun.util.calendar.CalendarSystem.initNames()
sun.reflect.Label$PatchInfo.init(sun.reflect.ClassFileAssembler,short,short,int)
javax.swing.RepaintManager.beginPaint()
org.codehaus.janino.util.enumerator.Enumerator.getInstances(java.lang.Class)
javax.swing.UIManager$LAFState.setLookAndFeelDefaults(javax.swing.UIDefaults)
javax.swing.text.StyleConstants.getBidiLevel(javax.swing.text.AttributeSet)
java.nio.charset.CoderResult.isUnmappable()
java.lang.String.toUpperCase(java.util.Locale)
java.awt.Menu.getItemCount()
javax.swing.JMenu$WinListener.init(javax.swing.JMenu,javax.swing.JPopupMenu)
java.util.PriorityQueue.indexOf(java.lang.Object)
java.util.logging.Logger.init(java.lang.String,java.lang.String,java.lang.Class,boolean)
org.codehaus.janino.Cookable.init()
java.io.DataInputStream.readFully(byte[],int,int)
org.sunflow.RenderObjectMap$RenderObjectHandle.access$1700(org.sunflow.RenderObjectMap$RenderObjectHandle)
org.codehaus.janino.Java$InterfaceDeclaration.addConstantDeclaration(org.codehaus.janino.Java$FieldDeclaration)
java.awt.event.ComponentEvent.init(java.awt.Component,int)
java.util.concurrent.atomic.AtomicInteger.get()
java.awt.Window.removeNotify()
org.codehaus.janino.Compiler.storeClassFile(org.codehaus.janino.util.ClassFile,java.io.File)
java.nio.charset.Charset.atBugLevel(java.lang.String)
java.util.ArrayList$Itr.init(java.util.ArrayList,java.util.ArrayList$1)
java.lang.SecurityManager.checkCreateClassLoader()
java.awt.datatransfer.MimeType.init(java.lang.String)
sun.java2d.SurfaceData.makeRenderLoops(sun.java2d.loops.SurfaceType,sun.java2d.loops.CompositeType,sun.java2d.loops.SurfaceType)
org.codehaus.janino.Parser.parseLabeledStatement()
sun.misc.SoftCache.put(java.lang.Object,java.lang.Object)
java.io.PrintWriter.init(java.io.Writer,boolean)
java.lang.reflect.Constructor.getParameterTypes()
java.lang.String.lastIndexOf(int)
javax.swing.text.StyleContext$FontKey.init(java.lang.String,int,int)
java.util.Arrays.mergeSort(java.lang.Object[],java.lang.Object[],int,int,int,java.util.Comparator)
org.codehaus.janino.Parser.parseClassDeclarationRest(java.lang.String,short,org.codehaus.janino.Parser$ClassDeclarationContext)
java.io.PrintWriter.write(java.lang.String,int,int)
sun.reflect.UnsafeQualifiedStaticByteFieldAccessorImpl.init(java.lang.reflect.Field,boolean)
java.awt.Component.isRecursivelyVisible()
sun.misc.FDBigInt.normalizeMe()
java.lang.Class.checkPackageAccess(java.lang.ClassLoader,boolean)
org.sunflow.core.Scene.getThreadPriority()
javax.swing.JTextArea.setFont(java.awt.Font)
SunflowGUI$22.init(SunflowGUI)
org.codehaus.janino.Compiler.compile(org.codehaus.janino.util.resource.Resource[])
org.sunflow.system.Timer.init()
java.util.Calendar.complete()
java.io.ByteArrayOutputStream.toByteArray()
sun.reflect.UnsafeStaticFieldAccessorImpl.init(java.lang.reflect.Field)
java.util.logging.Level.init(java.lang.String,int,java.lang.String)
java.net.SocketPermission.parsePort(java.lang.String)
org.codehaus.janino.Java$AbstractTypeDeclaration.init(org.codehaus.janino.Location,short)
java.awt.Menu.removeNotify()
java.util.Calendar.updateTime()
java.util.Locale.hashCode()
java.nio.HeapByteBuffer.init(int,int)
java.util.Formatter.parse(java.lang.String)
java.util.GregorianCalendar.init(java.util.TimeZone,java.util.Locale)
sun.reflect.UnsafeQualifiedLongFieldAccessorImpl.init(java.lang.reflect.Field,boolean)
java.lang.ThreadLocal$ThreadLocalMap.set(java.lang.ThreadLocal,java.lang.Object)
org.codehaus.janino.Scanner$Token.isOperator()
sun.swing.DefaultLookup.setDefaultLookup(sun.swing.DefaultLookup)
java.awt.Component.checkCoalescing()
org.codehaus.janino.Scanner$OperatorToken.init(org.codehaus.janino.Scanner,java.lang.String)
javax.swing.AbstractButton.getModel()
java.awt.KeyboardFocusManager.getNativeFocusedWindow()
sun.misc.FDBigInt.mult(int)
java.awt.Component.initializeFocusTraversalKeys()
java.lang.String.regionMatches(boolean,int,java.lang.String,int,int)
org.codehaus.janino.Java.setEnclosingBlockStatement(org.codehaus.janino.Java$ArrayInitializerOrRvalue,org.codehaus.janino.Java$BlockStatement)
java.awt.Component.processInputMethodEvent(java.awt.event.InputMethodEvent)
java.awt.Container.hasLightweightDescendants()
sun.util.LocaleServiceProviderPool.init(java.lang.Class)
java.util.Random.nextLong()
org.sunflow.core.accel.KDTree.init()
sun.security.x509.X509CertImpl.getEncodedInternal(java.security.cert.Certificate)
java.awt.dnd.DropTarget.setComponent(java.awt.Component)
java.util.regex.Pattern.findSupplementary(int,int)
java.util.Date.getJulianCalendar()
sun.nio.cs.StreamDecoder.implClose()
org.sunflow.util.FastHashMap.clear()
java.net.URL.init(java.net.URL,java.lang.String)
javax.swing.DebugGraphics.isDrawingBuffer()
java.awt.event.InvocationEvent.getThrowable()
java.awt.Window.setBounds(java.awt.Rectangle)
sun.java2d.x11.XSurfaceData.init(sun.java2d.loops.SurfaceType,java.awt.image.ColorModel)
sun.java2d.StateTrackableDelegate.init(sun.java2d.StateTrackable$State)
sun.awt.image.IntegerComponentRaster.getScanlineStride()
java.util.logging.LogManager.access$100()
java.text.StringCharacterIterator.init(java.lang.String,int)
sun.misc.FDBigInt.init(long,char[],int,int)
java.util.ResourceBundle.getStringArray(java.lang.String)
java.util.Arrays.binarySearch0(java.lang.Object[],int,int,java.lang.Object,java.util.Comparator)
javax.swing.AbstractButton.setDisplayedMnemonicIndex(int)
java.awt.event.ActionEvent.getWhen()
java.awt.Frame.init(java.lang.String)
sun.java2d.SurfaceData.getNativeOps()
sun.awt.X11GraphicsConfig.getColorModel()
java.lang.ref.WeakReference.init(java.lang.Object)
java.awt.MenuComponent.getTreeLock()
java.util.regex.Pattern.mark(int)
sun.reflect.misc.ReflectUtil.checkPackageAccess(java.lang.String)
javax.swing.JRootPane.setGlassPane(java.awt.Component)
java.util.regex.Pattern$BnM.optimize(java.util.regex.Pattern$Node)
java.io.File$LazyInitialization.temporaryDirectory()
java.io.DataInputStream.readUTF(java.io.DataInput)
org.sunflow.RenderObjectMap$RenderObjectHandle.typeName()
org.sunflow.core.ParameterList$Parameter.init(java.lang.String[],org.sunflow.core.ParameterList$1)
java.util.Vector.indexOf(java.lang.Object,int)
java.util.Locale.init(java.lang.String)
org.sunflow.core.ParameterList$Parameter.init(org.sunflow.core.ParameterList$ParameterType,org.sunflow.core.ParameterList$InterpolationType,float[],org.sunflow.core.ParameterList$1)
sun.reflect.ClassFileAssembler.opc_aaload()
org.sunflow.core.camera.PinholeLens.init()
java.awt.Component.handleEvent(java.awt.Event)
org.codehaus.janino.Java$NewAnonymousClassInstance.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Rvalue,org.codehaus.janino.Java$AnonymousClassDeclaration,org.codehaus.janino.Java$Rvalue[])
java.awt.Component.processMouseMotionEvent(java.awt.event.MouseEvent)
javax.swing.JViewport.setUI(javax.swing.plaf.ViewportUI)
sun.swing.DefaultLookup.init()
org.codehaus.janino.Parser.peekKeyword()
java.lang.ClassLoader.getBootstrapResource(java.lang.String)
javax.swing.RepaintManager.currentManager(javax.swing.JComponent)
java.util.concurrent.CopyOnWriteArrayList.init()
java.text.BreakIterator.clone()
sun.reflect.AccessorGenerator.unboxingMethodForPrimitiveType(java.lang.Class)
java.text.NumberFormat.setMinimumFractionDigits(int)
java.awt.datatransfer.MimeTypeParameterList.remove(java.lang.String)
java.awt.Container.adjustDecendantsOnParent(int)
java.lang.ConditionalSpecialCasing$Entry.getLanguage()
javax.swing.ArrayTable.size()
java.awt.Component.getTraversalRoot()
java.util.regex.Pattern.isSurrogate(int)
java.io.IOException.init()
java.awt.FlowLayout.setAlignment(int)
java.util.HashMap.put(java.lang.Object,java.lang.Object)
java.util.ResourceBundle$CacheKey.init(java.lang.String,java.util.Locale,java.lang.ClassLoader)
sun.reflect.ClassFileAssembler.emitConstantPoolMethodref(short,short)
java.util.HashMap.removeEntryForKey(java.lang.Object)
java.awt.EventQueue.cacheEQItem(java.awt.EventQueueItem)
java.nio.charset.CoderResult.toString()
java.util.concurrent.ConcurrentHashMap.segmentAt(java.util.concurrent.ConcurrentHashMap$Segment[],int)
java.lang.String.hashCode()
java.lang.SystemClassLoaderAction.init(java.lang.ClassLoader)
org.codehaus.janino.tools.Disassembler$10.init(short,short,org.codehaus.janino.tools.Disassembler)
org.sunflow.core.ParameterList$Parameter.init(java.lang.String)
java.util.Calendar.adjustStamp()
java.lang.Thread.init(java.lang.Runnable)
java.lang.reflect.InvocationTargetException.getTargetException()
org.sunflow.core.ParameterList$Parameter.init(org.sunflow.image.Color)
java.awt.Window.disposeImpl()
sun.reflect.ClassFileAssembler.opc_astore_3()
java.util.logging.LogManager$3.init(java.util.logging.LogManager,java.util.logging.Logger,java.util.logging.Logger)
org.codehaus.janino.ScriptEvaluator.setMethodNames(java.lang.String[])
javax.swing.DebugGraphicsInfo.getDebugOptions(javax.swing.JComponent)
java.util.regex.Pattern$CharProperty.init()
java.awt.image.ComponentSampleModel.getBandOffsets()
java.net.URL.getPort()
java.util.Arrays.equals(byte[],byte[])
sun.security.provider.PolicyFile$4.init(sun.security.provider.PolicyFile,sun.security.provider.PolicyFile$PolicyInfo)
java.awt.Component.getLocationOnScreen_NoTreeLock()
javax.swing.text.AbstractDocument.writeLock()
org.codehaus.janino.Scanner$Token.isIdentifier(java.lang.String)
java.lang.AbstractStringBuilder.append(java.lang.StringBuffer)
java.text.MessageFormat.append(java.lang.StringBuffer,java.text.CharacterIterator)
java.util.PriorityQueue.siftUpComparable(int,java.lang.Object)
org.sunflow.core.display.FrameDisplay.init()
javax.swing.JComponent.setUI(javax.swing.plaf.ComponentUI)
sun.reflect.MethodAccessorGenerator.generateMethod(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Class,java.lang.Class[],int)
java.text.BreakIterator$BreakIteratorCache.getLocale()
sun.misc.FloatingDecimal.init(boolean,int,char[],int,boolean)
java.util.Formatter$Flags.remove(java.util.Formatter$Flags)
sun.awt.im.InputContext.enableClientWindowNotification(java.awt.im.spi.InputMethod,boolean)
sun.awt.image.SurfaceManager.init()
java.awt.Window.setLocationByPlatform(boolean)
org.codehaus.janino.util.Traverser.init()
java.nio.charset.CoderResult.isMalformed()
sun.reflect.NativeMethodAccessorImpl.setParent(sun.reflect.DelegatingMethodAccessorImpl)
sun.awt.image.VolatileSurfaceManager.initContents()
java.text.DecimalFormatSymbols.getPercent()
java.awt.Event.init(java.lang.Object,long,int,int,int,int,int,java.lang.Object)
org.sunflow.math.Vector3.normalize()
org.codehaus.janino.Scanner$KeywordToken.init(org.codehaus.janino.Scanner,java.lang.String)
sun.font.AttributeValues.setPosture(float)
java.awt.EventQueue.getMostRecentEventTime()
java.awt.Component.getGraphicsConfiguration()
java.awt.Component.print(java.awt.Graphics)
java.util.concurrent.ConcurrentHashMap$Segment.rehash(java.util.concurrent.ConcurrentHashMap$HashEntry)
javax.swing.border.AbstractBorder.init()
javax.swing.JCheckBox.init()
java.util.LinkedList$Entry.init(java.lang.Object,java.util.LinkedList$Entry,java.util.LinkedList$Entry)
java.util.regex.Pattern$SliceIS.init(int[])
java.lang.String.init(int[],int,int)
java.nio.charset.Charset.lookup2(java.lang.String)
java.util.ArrayList.rangeCheck(int)
java.util.regex.Pattern$BranchConn.init()
sun.nio.cs.StreamDecoder.init(java.io.InputStream,java.lang.Object,java.nio.charset.Charset)
java.awt.event.KeyEvent.getKeyCode()
org.sunflow.core.display.ImgPipeDisplay.init()
java.io.PrintWriter.write(java.lang.String)
sun.awt.PaintEventDispatcher.init()
sun.java2d.pipe.hw.ContextCapabilities.getCaps()
org.codehaus.janino.Java$ConstructorInvocation.setEnclosingScope(org.codehaus.janino.Java$Scope)
sun.text.normalizer.Trie.getBMPOffset(char)
javax.swing.text.SimpleAttributeSet.init()
java.lang.StringBuilder.init(int)
sun.reflect.UnsafeFloatFieldAccessorImpl.init(java.lang.reflect.Field)
java.lang.CharacterData.toUpperCaseEx(int)
java.util.regex.Pattern$BitClass.add(int,int)
java.lang.Character$UnicodeBlock.forName(java.lang.String)
org.sunflow.core.ParameterList$FloatParameter.init()
java.awt.Component.checkWindowClosingException()
java.lang.String.toCharArray()
java.text.SimpleDateFormat.parseAmbiguousDatesAsAfter(java.util.Date)
javax.swing.JComponent.safelyGetGraphics(java.awt.Component)
java.util.Vector.isEmpty()
java.security.UnresolvedPermissionCollection.getUnresolvedPermissions(java.security.Permission)
java.util.Vector.removeElementAt(int)
javax.swing.text.GapContent$MarkVector.init()
javax.swing.JTextArea.init()
java.text.FieldPosition.setBeginIndex(int)
java.text.NumberFormat.setGroupingUsed(boolean)
java.io.Reader.init(java.lang.Object)
java.nio.charset.CoderResult$Cache.access$200(java.nio.charset.CoderResult$Cache,int)
org.codehaus.janino.Java$ArrayAccessExpression.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Rvalue,org.codehaus.janino.Java$Rvalue)
java.lang.reflect.Method.getDeclaringClass()
java.lang.StringBuilder.append(double)
java.awt.Component.containsFocus()
java.lang.Throwable.init(java.lang.Throwable)
java.nio.charset.CharsetDecoder.implOnUnmappableCharacter(java.nio.charset.CodingErrorAction)
org.codehaus.janino.Java$BreakStatement.init(org.codehaus.janino.Location,java.lang.String)
java.awt.AWTEventMulticaster.remove(java.awt.event.WindowListener,java.awt.event.WindowListener)
java.util.concurrent.ConcurrentHashMap.setEntryAt(java.util.concurrent.ConcurrentHashMap$HashEntry[],int,java.util.concurrent.ConcurrentHashMap$HashEntry)
org.codehaus.janino.Java$ParenthesizedExpression.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Rvalue)
sun.misc.SharedSecrets.getJavaAWTAccess()
java.util.ArrayList.outOfBoundsMsg(int)
java.awt.Component.size()
javax.swing.ToolTipManager.sharedInstance()
org.sunflow.system.UI.taskStop()
java.awt.Component.getNextFocusCandidate()
sun.font.BidiUtils.getLevels(java.text.Bidi,byte[],int)
org.codehaus.janino.Java$CompilationUnit$SingleStaticImportDeclaration.init(org.codehaus.janino.Location,java.lang.String[])
java.awt.Component$FlipBufferStrategy.destroyBuffers()
org.codehaus.janino.tools.Disassembler.readConstantPoolInfo(java.io.DataInputStream)
java.util.ResourceBundle$CacheKey.getFormat()
javax.swing.JLabel.setText(java.lang.String)
java.awt.Component.isCoalescingEnabled()
java.text.BreakIterator.getShort(byte[],int)
sun.font.FontManager.isComplexText(char[],int,int)
java.text.DictionaryBasedBreakIterator.init(java.lang.String,java.lang.String)
org.codehaus.janino.ExpressionEvaluator.setExpressionType(java.lang.Class)
javax.swing.undo.CompoundEdit.lastEdit()
java.awt.Rectangle.setBounds(int,int,int,int)
org.codehaus.janino.Java$AlternateConstructorInvocation.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Rvalue[])
java.net.URL.openConnection()
java.awt.Component.setFocusTraversalKeys_NoIDCheck(int,java.util.Set)
java.awt.Window.getGraphicsConfiguration()
org.codehaus.janino.Parser.parseConditionalExpression()
javax.swing.JPopupMenu.setSelectionModel(javax.swing.SingleSelectionModel)
java.text.AttributedString.addAttributeImpl(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
org.codehaus.janino.Java$Atom.toRvalueOrPE()
java.util.regex.Pattern$BackRef.init(int)
java.util.regex.Pattern$Prolog.init(java.util.regex.Pattern$Loop)
java.util.Calendar.set(int,int)
javax.swing.JLabel.setDisplayedMnemonicIndex(int)
javax.swing.JComponent.printComponent(java.awt.Graphics)
org.codehaus.janino.tools.JGrep$5.init(java.util.List,org.codehaus.janino.UnitCompiler)
javax.swing.text.StyleContext$NamedStyle.init(javax.swing.text.StyleContext,java.lang.String,javax.swing.text.Style)
java.awt.image.RasterFormatException.init(java.lang.String)
javax.swing.JComponent.getClientProperties()
org.sunflow.RenderObjectMap$RenderObjectHandle.init(org.sunflow.core.Options,org.sunflow.RenderObjectMap$1)
javax.swing.LookAndFeel.getDefaults()
java.nio.HeapByteBuffer.init(byte[],int,int)
java.util.Vector.size()
java.nio.charset.CoderResult.length()
org.codehaus.janino.Java$CatchClause.setEnclosingTryStatement(org.codehaus.janino.Java$TryStatement)
org.sunflow.system.ImagePanel.imageUpdate(int,int,int,int,org.sunflow.image.Color[])
javax.swing.JLayeredPane.init()
java.text.NumberFormat.getInstance(java.util.Locale,int)
org.sunflow.util.FastHashMap$Entry.init(java.lang.Object,java.lang.Object,org.sunflow.util.FastHashMap$1)
java.nio.charset.CharsetDecoder.onMalformedInput(java.nio.charset.CodingErrorAction)
java.awt.Component.enable(boolean)
java.util.logging.Logger.finer(java.lang.String)
org.codehaus.janino.ExpressionEvaluator.class$(java.lang.String)
org.codehaus.janino.ClassBodyEvaluator.getClazz()
org.codehaus.janino.SimpleCompiler.setParentClassLoader(java.lang.ClassLoader,java.lang.Class[])
org.codehaus.janino.Parser.setWarningHandler(org.codehaus.janino.WarningHandler)
java.lang.Class.getReflectionFactory()
sun.reflect.UnsafeStaticByteFieldAccessorImpl.init(java.lang.reflect.Field)
java.util.Locale.init(java.lang.String,java.lang.String,java.lang.String)
javax.swing.JComponent.isPaintingOrigin()
java.io.Writer.write(java.lang.String)
org.sunflow.core.ParameterList.addTexCoords(java.lang.String,org.sunflow.core.ParameterList$InterpolationType,float[])
org.codehaus.janino.Parser.parseSynchronizedStatement()
org.sunflow.core.ParameterList$Parameter.init(org.sunflow.core.ParameterList$ParameterType,org.sunflow.core.ParameterList$InterpolationType,float[])
java.util.HashSet.isEmpty()
java.awt.Frame.getExtendedState()
java.util.Properties.load0(java.util.Properties$LineReader)
sun.util.calendar.CalendarDate.getTimeOfDay()
java.lang.Class.getField0(java.lang.String)
java.lang.Class$EnclosingMethodInfo.init(java.lang.Object[],java.lang.Class$1)
javax.swing.RepaintManager$ProcessingRunnable.init(javax.swing.RepaintManager)
java.awt.Component.addKeyListener(java.awt.event.KeyListener)
java.net.Inet6Address$Inet6AddressHolder.init(java.net.Inet6Address,java.net.Inet6Address$1)
java.awt.Component.setPreferredSize(java.awt.Dimension)
java.lang.StringCoding.safeTrim(char[],int,java.nio.charset.Charset)
org.codehaus.janino.Java$PackageMemberClassDeclaration.init(org.codehaus.janino.Location,java.lang.String,short,java.lang.String,org.codehaus.janino.Java$Type,org.codehaus.janino.Java$Type[])
org.codehaus.janino.Parser.parseArrayInitializer()
org.sunflow.RenderObjectMap$RenderObjectHandle.access$300(org.sunflow.RenderObjectMap$RenderObjectHandle)
org.sunflow.core.Geometry.build()
java.lang.reflect.InvocationTargetException.init(java.lang.Throwable)
java.lang.Class.searchFields(java.lang.reflect.Field[],java.lang.String)
org.codehaus.janino.Scanner$Token.isEOF()
org.sunflow.image.RGBSpace.main(java.lang.String[])
java.lang.Character.codePointAtImpl(char[],int,int)
org.sunflow.core.photonmap.CausticPhotonMap.store(org.sunflow.core.ShadingState,org.sunflow.math.Vector3,org.sunflow.image.Color,org.sunflow.image.Color)
java.util.Collections$SynchronizedList.init(java.util.List)
javax.swing.TransferHandler$TransferSupport.setDNDVariables(java.awt.Component,java.awt.dnd.DropTargetEvent)
java.lang.String.checkBounds(byte[],int,int)
java.text.ChoiceFormat.doubleArraySize(java.lang.String[])
java.awt.Component.repaint()
java.awt.AWTEventMulticaster.add(java.awt.event.KeyListener,java.awt.event.KeyListener)
java.nio.ByteBuffer.wrap(byte[],int,int)
org.codehaus.janino.Java$FunctionDeclarator$FormalParameter.init(org.codehaus.janino.Location,boolean,org.codehaus.janino.Java$Type,java.lang.String)
sun.reflect.Label.init()
java.util.AbstractSet.init()
javax.swing.ArrayTable.get(java.lang.Object)
java.awt.event.ItemEvent.getItem()
java.util.Properties.init()
java.io.BufferedWriter.flushBuffer()
javax.swing.JRootPane.getWindowDecorationStyle()
sun.reflect.UnsafeStaticFloatFieldAccessorImpl.init(java.lang.reflect.Field)
java.util.concurrent.locks.ReentrantReadWriteLock.init(boolean)
org.sunflow.SunflowAPI.reset()
java.lang.Long.parseLong(java.lang.String)
org.codehaus.janino.Java$Assignment.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Lvalue,java.lang.String,org.codehaus.janino.Java$Rvalue)
org.codehaus.janino.tools.Disassembler$ConstantPoolInfo.init()
sun.reflect.UnsafeBooleanFieldAccessorImpl.init(java.lang.reflect.Field)
javax.swing.text.AbstractDocument$BidiRootElement.init(javax.swing.text.AbstractDocument)
sun.util.LocaleServiceProviderPool.getJRELocales()
javax.swing.RepaintManager.doubleBufferingChanged(javax.swing.JRootPane)
sun.reflect.ClassFileAssembler.append(sun.reflect.ClassFileAssembler)
java.lang.reflect.Proxy.isProxyClass(java.lang.Class)
java.text.SimpleDateFormat.getCalendarName()
java.io.PrintStream.println(java.lang.String)
javax.swing.text.SegmentCache$CachedSegment.init(javax.swing.text.SegmentCache$1)
org.sunflow.core.light.TriangleMeshLight.init()
sun.java2d.HeadlessGraphicsEnvironment.init(java.awt.GraphicsEnvironment)
java.awt.KeyboardFocusManager.getCurrentSequencedEvent()
java.awt.dnd.DropTarget.doSetDefaultActions(int)
java.nio.CharBuffer.wrap(char[],int,int)
javax.swing.UIManager.setLookAndFeel(java.lang.String)
sun.java2d.pipe.ShapeSpanIterator.appendPath(java.awt.geom.PathIterator)
javax.swing.JFrame.init()
org.sunflow.SunflowAPI.create(java.lang.String,int)
java.lang.StringBuilder.append(boolean)
sun.awt.HeadlessToolkit.getUnderlyingToolkit()
javax.swing.ToolTipManager$MoveBeforeEnterListener.init(javax.swing.ToolTipManager)
org.sunflow.util.FastHashMap$Entry.isRemoved()
sun.util.calendar.CalendarDate.isStandardTime()
java.lang.Character.isLetterOrDigit(int)
javax.swing.RepaintManager$PaintManager.dispose()
javax.swing.text.AbstractDocument$DefaultFilterBypass.init(javax.swing.text.AbstractDocument)
javax.swing.DefaultBoundedRangeModel.init(int,int,int,int)
java.lang.VirtualMachineError.init(java.lang.String)
sun.text.Normalizer.getCombiningClass(int)
org.sunflow.SunflowAPI.light(java.lang.String,org.sunflow.core.LightSource)
sun.reflect.ClassFileAssembler.emitConstantPoolInterfaceMethodref(short,short)
java.util.Arrays.copyOf(byte[],int)
org.codehaus.janino.Parser.parseAssignmentExpression()
javax.swing.plaf.metal.MetalLookAndFeel.isWindows()
java.awt.event.ActionEvent.getActionCommand()
sun.reflect.UnsafeStaticDoubleFieldAccessorImpl.init(java.lang.reflect.Field)
org.codehaus.janino.IClass.getArrayIClass(org.codehaus.janino.IClass)
javax.swing.JComponent.init()
org.codehaus.janino.util.ClassFile.getClassFileResourceName(java.lang.String)
javax.swing.Timer.init(int,java.awt.event.ActionListener)
sun.awt.MostRecentKeyValue.setPair(java.lang.Object,java.lang.Object)
java.util.concurrent.ConcurrentHashMap.segmentForHash(int)
sun.util.calendar.ZoneInfo.getOffsets(long,int[],int)
javax.swing.AbstractButton.createItemListener()
javax.swing.undo.CompoundEdit.init()
java.text.DecimalFormat.getMaximumFractionDigits()
SunflowGUI$19.init(SunflowGUI)
org.codehaus.janino.tools.Disassembler.printConstantPoolEntry(short)
org.codehaus.janino.ScriptEvaluator.cook(org.codehaus.janino.Scanner)
java.text.RuleBasedBreakIterator.setAdditionalData(byte[])
java.util.regex.Pattern$1.init(java.util.regex.Pattern,java.lang.Character$UnicodeBlock)
javax.swing.UIManager.initializeDefaultLAF(java.util.Properties)
sun.util.LocaleServiceProviderPool.getLocalizedObjectImpl(sun.util.LocaleServiceProviderPool$LocalizedObjectGetter,java.util.Locale,boolean,java.lang.String,sun.util.resources.OpenListResourceBundle,java.lang.String,java.lang.Object[])
sun.misc.URLClassPath.getLoader(java.net.URL)
java.util.logging.Level$KnownLevel.init(java.util.logging.Level)
sun.misc.SoftCache$ValueCell.drop()
java.util.Vector.set(int,java.lang.Object)
sun.awt.im.InputMethodLocator.getDescriptor()
java.text.FieldPosition.setEndIndex(int)
org.codehaus.janino.ClassBodyEvaluator.init(java.lang.String)
org.codehaus.janino.Cookable.cook(java.io.Reader)
java.lang.SecurityManager.checkTopLevelWindow(java.lang.Object)
java.util.Formatter$FormatSpecifier.checkBadFlags(java.util.Formatter$Flags[])
java.awt.VKCollection.init()
java.beans.PropertyChangeEvent.init(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)
java.util.Formatter$FormatSpecifier.precision(java.lang.String)
java.lang.StringBuilder.append(char)
sun.awt.SunDisplayChanger.add(sun.awt.DisplayChangedListener)
javax.swing.text.AbstractDocument$DefaultFilterBypass.init(javax.swing.text.AbstractDocument,javax.swing.text.AbstractDocument$1)
sun.java2d.pipe.Region.getSpanIterator()
javax.swing.RepaintManager.isPaintingThread()
java.io.FileOutputStream.init(java.lang.String)
javax.swing.TransferHandler.getDropTargetListener()
javax.swing.undo.CompoundEdit.addEdit(javax.swing.undo.UndoableEdit)
org.sunflow.core.gi.AmbientOcclusionGIEngine.init(org.sunflow.core.Options)
java.awt.Component.getParent()
java.lang.String.init(char[])
javax.swing.AbstractButton.createChangeListener()
javax.swing.JPopupMenu.init()
sun.reflect.MethodAccessorGenerator.init()
org.codehaus.janino.util.ClassFile$ConstantClassInfo.access$0(org.codehaus.janino.util.ClassFile$ConstantClassInfo)
java.util.concurrent.locks.AbstractQueuedSynchronizer.unparkSuccessor(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node)
javax.swing.text.AbstractDocument.fireRemoveUpdate(javax.swing.event.DocumentEvent)
org.codehaus.janino.tools.Disassembler$3.init(short,short,org.codehaus.janino.tools.Disassembler)
sun.java2d.pipe.ShapeSpanIterator.setOutputArea(sun.java2d.pipe.Region)
java.awt.geom.AffineTransform.updateState()
java.lang.AssertionError.init()
java.util.Hashtable.get(java.lang.Object)
java.util.TimeZone.init()
sun.reflect.ClassFileAssembler.emitMagicAndVersion()
sun.java2d.x11.X11VolatileSurfaceManager.initAcceleratedSurface()
org.codehaus.janino.Scanner.access$2(org.codehaus.janino.Scanner)
java.lang.InternalError.init()
java.awt.Event.getOldEventKey(java.awt.event.KeyEvent)
sun.text.normalizer.IntTrie.getCodePointValue(int)
java.util.regex.Pattern.skip()
java.awt.datatransfer.MimeTypeParameterList.get(java.lang.String)
sun.awt.image.BytePackedRaster.getScanlineStride()
sun.util.calendar.BaseCalendar.isLeapYear(int)
java.awt.GraphicsEnvironment.isHeadless()
java.awt.SentEvent.dispose()
org.codehaus.janino.UnitCompiler.setCompileErrorHandler(org.codehaus.janino.UnitCompiler$ErrorHandler)
org.sunflow.core.ParameterList.addFloats(java.lang.String,org.sunflow.core.ParameterList$InterpolationType,float[])
java.lang.Math.max(double,double)
java.util.logging.LogRecord.setParameters(java.lang.Object[])
java.lang.reflect.Constructor.setConstructorAccessor(sun.reflect.ConstructorAccessor)
java.util.regex.Matcher.replaceAll(java.lang.String)
java.text.RuleBasedBreakIterator.getAdditionalData()
javax.swing.text.PlainDocument.init()
java.lang.Class.getName()
javax.swing.text.GapVector.replace(int,int,java.lang.Object,int)
javax.swing.ToolTipManager$MoveBeforeEnterListener.init(javax.swing.ToolTipManager,javax.swing.ToolTipManager$1)
javax.swing.Timer.addActionListener(java.awt.event.ActionListener)
javax.swing.text.AbstractDocument$BranchElement.init(javax.swing.text.AbstractDocument,javax.swing.text.Element,javax.swing.text.AttributeSet)
java.awt.Component.removeMouseMotionListener(java.awt.event.MouseMotionListener)
org.codehaus.janino.Parser.parseAdditiveExpression()
org.codehaus.janino.util.resource.MultiResourceFinder.init(java.util.Collection)
java.util.regex.Pattern$UnixDollar.init(boolean)
java.lang.Integer.toString(int)
javax.swing.JScrollPane$AccessibleJScrollPane.resetViewPort()
javax.swing.UIDefaults.getUIError(java.lang.String)
java.lang.String.valueOf(int)
java.awt.Component.firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)
java.lang.Boolean.toBoolean(java.lang.String)
javax.swing.text.GapContent.init()
java.util.TimeZone.clone()
java.awt.AWTEvent.get_InputEvent_CanAccessSystemClipboard()
java.util.regex.Pattern.intersection(java.util.regex.Pattern$CharProperty,java.util.regex.Pattern$CharProperty)
org.codehaus.janino.samples.ClassBodyDemo.readFileToString(java.lang.String)
java.text.AttributedString.addAttributeRunData(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
java.util.regex.PatternSyntaxException.init(java.lang.String,java.lang.String,int)
java.util.Locale.getDefault()
javax.swing.text.StyleContext.getMutableAttributeSet(javax.swing.text.AttributeSet)
java.net.Inet6Address$Inet6AddressHolder.setAddr(byte[])
java.lang.Long.stringSize(long)
java.awt.KeyboardFocusManager.init()
java.security.Policy.getPermissions(java.security.CodeSource)
sun.font.AttributeValues.extractRotation(java.awt.geom.Point2D$Double,java.awt.geom.AffineTransform,boolean)
java.lang.StringBuilder.toString()
java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,java.lang.Throwable)
org.codehaus.janino.util.ClassFile.storeShortArray(java.io.DataOutputStream,short[])
java.util.ResourceBundle$CacheKey.setCause(java.lang.Throwable)
java.lang.Class.isAsciiDigit(char)
javax.swing.JScrollPane.setUI(javax.swing.plaf.ScrollPaneUI)
java.util.TreeMap.init()
sun.misc.SoftCache$ValueCell.access$100(sun.misc.SoftCache$ValueCell)
java.io.DataOutputStream.init(java.io.OutputStream)
javax.swing.JMenu.add(javax.swing.JMenuItem)
java.text.MessageFormat.init(java.lang.String)
javax.swing.AbstractButton.doClick(int)
org.codehaus.janino.tools.Disassembler$LocalVariableTableAttribute.init(org.codehaus.janino.tools.Disassembler,short[])
java.lang.StringBuilder.append(java.lang.CharSequence)
org.codehaus.janino.Java$Located.throwParseException(java.lang.String)
org.codehaus.janino.Parser.parseType()
java.nio.charset.CharsetEncoder.implOnUnmappableCharacter(java.nio.charset.CodingErrorAction)
java.util.LinkedList.removeFirst()
org.sunflow.RenderObjectMap.put(java.lang.String,org.sunflow.core.Tesselatable)
org.sunflow.core.InstanceList.init(org.sunflow.core.Instance[])
java.util.AbstractList$Itr.init(java.util.AbstractList)
java.text.DigitList.init()
java.lang.StringBuilder.append(java.lang.StringBuffer)
sun.reflect.ClassFileAssembler.opc_invokestatic(short,int,int)
javax.swing.RepaintManager$PaintManager.init()
java.lang.ThreadLocal$ThreadLocalMap$Entry.init(java.lang.ThreadLocal,java.lang.Object)
java.awt.Dimension.init()
javax.swing.JScrollPane.setViewport(javax.swing.JViewport)
sun.awt.NullComponentPeer.init()
java.lang.reflect.Modifier.isPrivate(int)
sun.nio.cs.StreamDecoder.forInputStreamReader(java.io.InputStream,java.lang.Object,java.lang.String)
java.awt.Component.paint(java.awt.Graphics)
java.awt.datatransfer.DataFlavor.getParameter(java.lang.String)
java.lang.Double.isNaN(double)
java.net.Inet4Address.init(java.lang.String,byte[])
java.nio.charset.Charset.defaultCharset()
java.awt.Container.increaseComponentCount(java.awt.Component)
java.awt.Window.pack()
java.util.PriorityQueue.removeAt(int)
org.sunflow.core.display.FileDisplay.init(boolean)
java.awt.Component.repaintParentIfNeeded(int,int,int,int)
java.net.SocketPermission.init(java.lang.String,int)
org.codehaus.janino.Parser.verifyIdentifierIsConventionalFieldName(java.lang.String,org.codehaus.janino.Location)
java.text.MessageFormat.subformat(java.lang.Object[],java.lang.StringBuffer,java.text.FieldPosition,java.util.List)
org.sunflow.math.Vector3.normalize(org.sunflow.math.Vector3)
java.nio.charset.Charset.lookupViaProviders(java.lang.String)
sun.misc.FDBigInt.sub(sun.misc.FDBigInt)
java.security.Policy.addStaticPerms(java.security.PermissionCollection,java.security.PermissionCollection)
sun.util.calendar.AbstractCalendar.getTimeOfDay(sun.util.calendar.CalendarDate)
org.sunflow.core.ParameterList.getBoolean(java.lang.String,boolean)
javax.swing.text.AbstractDocument.removeUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent)
org.codehaus.janino.util.enumerator.EnumeratorSet.init(java.lang.Class,java.lang.String,java.lang.String)
sun.reflect.ConstructorAccessorImpl.init()
org.codehaus.janino.ClassBodyEvaluator.makeCompilationUnit(org.codehaus.janino.Scanner)
org.codehaus.janino.util.Benchmark.begin()
org.codehaus.janino.Scanner$Token.isOperator(java.lang.String[])
java.awt.image.ColorModel.coerceData(java.awt.image.WritableRaster,boolean)
org.codehaus.janino.Java$CatchClause.init(org.codehaus.janino.Location,org.codehaus.janino.Java$FunctionDeclarator$FormalParameter,org.codehaus.janino.Java$Block)
org.sunflow.core.gi.GIEngineFactory.create(org.sunflow.core.Options)
java.text.BreakIterator$1.init(java.lang.String,java.util.Locale)
sun.reflect.UnsafeQualifiedDoubleFieldAccessorImpl.init(java.lang.reflect.Field,boolean)
java.lang.StringBuffer.setLength(int)
java.text.RuleBasedBreakIterator.readTables(java.lang.String)
org.sunflow.core.ParameterList.init()
org.codehaus.janino.SimpleCompiler.main(java.lang.String[])
sun.reflect.ClassFileAssembler.opc_if_icmpeq(sun.reflect.Label)
sun.reflect.ReflectionFactory.copyConstructor(java.lang.reflect.Constructor)
sun.reflect.ClassFileAssembler.opc_sipush(short)
java.security.Permissions.init()
sun.misc.FloatingDecimal.dtoa(int,long,int)
java.awt.Component.mixOnValidating()
org.codehaus.janino.Java$ContinueStatement.init(org.codehaus.janino.Location,java.lang.String)
java.util.LinkedList.size()
javax.swing.UIManager.setLookAndFeel(javax.swing.LookAndFeel)
javax.swing.text.AbstractDocument.insertUpdate(javax.swing.text.AbstractDocument$DefaultDocumentEvent,javax.swing.text.AttributeSet)
java.awt.Container.dispatchEventToSelf(java.awt.AWTEvent)
java.util.regex.Pattern$Ques.init(java.util.regex.Pattern$Node,int)
javax.swing.JComponent.setDoubleBuffered(boolean)
org.codehaus.janino.Java$Cast.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Type,org.codehaus.janino.Java$Rvalue)
java.security.BasicPermission.init(java.lang.String)
java.awt.image.BufferedImage.getColorModel()
javax.swing.ArrayTable.remove(java.lang.Object)
java.util.logging.Level$KnownLevel.add(java.util.logging.Level)
java.awt.Component.addFocusListener(java.awt.event.FocusListener)
sun.misc.VM.isBooted()
org.codehaus.janino.samples.ShippingCost.main(java.lang.String[])
java.text.AttributedString.addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object)
java.util.regex.Pattern.closure(java.util.regex.Pattern$Node)
javax.swing.JComponent.setVisible(boolean)
sun.reflect.UnsafeQualifiedStaticIntegerFieldAccessorImpl.init(java.lang.reflect.Field,boolean)
org.sunflow.math.Matrix4.init()
org.codehaus.janino.tools.HprofScrubber.main(java.lang.String[])
java.nio.Buffer.limit()
java.awt.AWTEventMulticaster.add(java.awt.event.MouseMotionListener,java.awt.event.MouseMotionListener)
sun.reflect.ClassFileAssembler.opc_checkcast(short)
java.lang.Math.abs(long)
java.lang.StringBuffer.init(int)
javax.swing.JViewport.setView(java.awt.Component)
org.sunflow.util.FastHashMap.access$500(org.sunflow.util.FastHashMap)
java.awt.AWTKeyStroke.getCtor(java.lang.Class)
java.util.logging.LogManager.getLogManager()
sun.reflect.ClassFileAssembler.opc_arraylength()
javax.swing.text.AbstractDocument.writeUnlock()
java.beans.PropertyChangeSupport.firePropertyChange(java.lang.String,int,int)
java.lang.reflect.Modifier.isProtected(int)
sun.awt.AWTAccessor.getComponentAccessor()
org.codehaus.janino.Java$MemberInterfaceDeclaration.init(org.codehaus.janino.Location,java.lang.String,short,java.lang.String,org.codehaus.janino.Java$Type[])
java.util.Currency.getSymbol(java.util.Locale)
java.lang.String.indexOf(java.lang.String)
sun.misc.URLClassPath.push(java.net.URL[])
org.sunflow.RenderObjectMap$RenderObjectHandle.init(org.sunflow.core.Camera)
javax.swing.text.GapVector.getNewArraySize(int)
java.awt.Container.isFocusCycleRoot()
org.sunflow.RenderObjectMap$RenderObjectHandle.init(org.sunflow.core.Tesselatable)
java.awt.image.ColorModel.createCompatibleWritableRaster(int,int)
org.codehaus.janino.util.Benchmark.init(boolean)
sun.awt.im.InputContext.getInputMethodInstance()
sun.util.calendar.ZoneInfoFile.createZoneInfo(java.lang.String)
java.lang.Thread.join(long)
javax.swing.event.SwingPropertyChangeSupport.init(java.lang.Object)
java.lang.AssertionError.init(int)
sun.reflect.UnsafeStaticLongFieldAccessorImpl.init(java.lang.reflect.Field)
java.text.Bidi.getRunLevel(int)
org.sunflow.RenderObjectMap.put(java.lang.String,org.sunflow.core.Instance)
java.lang.ConditionalSpecialCasing.isSoftDotted(int)
org.sunflow.SunflowAPI.parameter(java.lang.String,org.sunflow.image.Color)
sun.java2d.SurfaceDataProxy.isCachingAllowed()
java.awt.event.MouseAdapter.init()
java.lang.Boolean.equals(java.lang.Object)
sun.util.calendar.CalendarDate.getHours()
org.codehaus.janino.Java$AbstractTypeBodyDeclaration.init(org.codehaus.janino.Location,boolean)
org.codehaus.janino.Cookable.cook(java.lang.String,java.io.InputStream)
java.awt.MenuItem.addNotify()
sun.util.calendar.CalendarUtils.floorDivide(int,int)
org.sunflow.RenderObjectMap$RenderObjectHandle.init(org.sunflow.core.Tesselatable,org.sunflow.RenderObjectMap$1)
java.awt.Component.requestFocusHelper(boolean,boolean,sun.awt.CausedFocusEvent$Cause)
java.util.Formatter.setZero()
java.io.FilterInputStream.init(java.io.InputStream)
java.util.logging.LogManager$LoggerContext.findLogger(java.lang.String)
java.util.regex.Pattern.group0()
java.util.PriorityQueue.init()
sun.util.calendar.CalendarUtils.mod(int,int)
java.awt.AWTKeyStroke$1.init(java.lang.Class)
java.awt.Window.isShowing()
java.awt.Window.removeWindowListener(java.awt.event.WindowListener)
javax.swing.SwingUtilities.getRoot(java.awt.Component)
java.util.ResourceBundle.beginLoading(java.util.ResourceBundle$CacheKey)
org.sunflow.core.InstanceList.getNumPrimitives()
javax.swing.JRootPane.setUI(javax.swing.plaf.RootPaneUI)
java.awt.Component.enableInputMethods(boolean)
java.io.File.createTempFile(java.lang.String,java.lang.String,java.io.File)
java.util.EventObject.getSource()
java.awt.Component.removeKeyListener(java.awt.event.KeyListener)
java.awt.Container.validateTree()
java.lang.ThreadLocal.init()
java.lang.CharacterData.toUpperCaseCharArray(int)
java.util.regex.Pattern$SingleI.init(int,int)
java.lang.Class.getDeclaredMethod(java.lang.String,java.lang.Class[])
sun.awt.image.BufImgVolatileSurfaceManager.init(sun.awt.image.SunVolatileImage,java.lang.Object)
java.awt.event.MouseWheelEvent.getWheelRotation()
sun.misc.Resource.init()
javax.swing.UIManager.loadSwingProperties()
org.codehaus.janino.tools.JGrep.readIdentifierPattern(org.codehaus.janino.Parser)
java.awt.Window.setVisible(boolean)
java.awt.Component.mixOnHiding(boolean)
sun.java2d.loops.DrawGlyphListLCD.locate(sun.java2d.loops.SurfaceType,sun.java2d.loops.CompositeType,sun.java2d.loops.SurfaceType)
java.awt.image.ColorModel.getTransparency()
java.awt.Toolkit.getScreenInsets(java.awt.GraphicsConfiguration)
sun.util.calendar.AbstractCalendar.getCalendarDate(long,sun.util.calendar.CalendarDate)
java.io.ByteArrayOutputStream.write(int)
javax.swing.JRootPane.updateUI()
sun.java2d.loops.GraphicsPrimitive.getPrimTypeID()
sun.net.www.ParseUtil.escape(char[],char,int)
org.codehaus.janino.Parser.parseExpressionList()
sun.util.calendar.AbstractCalendar.setTimeOfDay(sun.util.calendar.CalendarDate,int)
java.awt.geom.AffineTransform.getShearX()
javax.swing.JComponent.setInheritsPopupMenu(boolean)
java.util.logging.Logger.isLoggable(java.util.logging.Level)
javax.swing.JViewport.init()
sun.font.AttributeValues.equals(sun.font.AttributeValues)
org.codehaus.janino.ScriptEvaluator.setReturnType(java.lang.Class)
org.codehaus.janino.ScriptEvaluator.init(java.lang.String,java.lang.Class,java.lang.String[],java.lang.Class[])
org.sunflow.core.ParameterList$Parameter.access$2100(org.sunflow.core.ParameterList$Parameter)
java.util.concurrent.atomic.AtomicBoolean.init(boolean)
java.util.HashMap$Values.init(java.util.HashMap,java.util.HashMap$1)
org.codehaus.janino.util.StringPattern.init(int,java.lang.String)
java.awt.datatransfer.MimeType.isTokenChar(char)
org.codehaus.janino.ClassBodyEvaluator.compileToClass(org.codehaus.janino.Java$CompilationUnit,org.codehaus.janino.util.enumerator.EnumeratorSet,java.lang.String)
java.lang.StringBuilder.charAt(int)
org.codehaus.janino.util.iterator.ProducerIterator.init(org.codehaus.janino.util.Producer)
sun.font.FontManager.isComplexCharCode(int)
javax.swing.text.GapVector.init(int)
org.codehaus.janino.ScriptEvaluator.setStaticMethod(boolean[])
java.text.NumberFormat.getCurrencyInstance(java.util.Locale)
SunflowGUI$17.init(SunflowGUI)
java.lang.reflect.Constructor.acquireConstructorAccessor()
java.lang.String.lastIndexOf(java.lang.String)
javax.swing.JComponent.paintToOffscreen(java.awt.Graphics,int,int,int,int,int,int)
sun.reflect.UnsafeQualifiedObjectFieldAccessorImpl.init(java.lang.reflect.Field,boolean)
java.util.StringTokenizer.nextToken()
java.util.StringTokenizer.hasMoreElements()
org.codehaus.janino.Java$AbstractTypeDeclaration.throwParseException(java.lang.String)
java.awt.AWTKeyStroke.mapNewModifiers(int)
org.codehaus.janino.Parser.parseFieldDeclarationRest(java.lang.String)
org.codehaus.janino.util.iterator.TransformingIterator.init(java.util.Iterator)
org.codehaus.janino.Compiler$SimpleWarningHandler.init()
javax.swing.RepaintManager.getOffscreenBuffer(java.awt.Component,int,int)
java.util.logging.Level.access$200(java.util.logging.Level)
sun.util.LocaleServiceProviderPool.isJRESupported(java.util.Locale)
javax.swing.text.Utilities.isComposedTextAttributeDefined(javax.swing.text.AttributeSet)
java.lang.RuntimePermission.init(java.lang.String)
java.awt.event.FocusEvent.init(java.awt.Component,int,boolean,java.awt.Component)
javax.swing.Timer.stop()
java.lang.Object.toString()
java.awt.dnd.DropTarget.init(java.awt.Component,int,java.awt.dnd.DropTargetListener)
java.nio.charset.Charset.lookupExtendedCharset(java.lang.String)
org.sunflow.core.ParameterList$Parameter.init(org.sunflow.image.Color,org.sunflow.core.ParameterList$1)
sun.java2d.x11.X11VolatileSurfaceManager.init(sun.awt.image.SunVolatileImage,java.lang.Object)
java.nio.CharBuffer.wrap(char[])
java.io.PrintWriter.init(java.io.OutputStream)
org.codehaus.janino.SimpleCompiler$AuxiliaryClassLoader.access$0(org.codehaus.janino.SimpleCompiler$AuxiliaryClassLoader,java.lang.Class)
javax.swing.AbstractButton.checkHorizontalKey(int,java.lang.String)
org.sunflow.core.shader.IDShader.init()
java.util.regex.Pattern$Caret.init()
java.util.concurrent.DelayQueue.remove(java.lang.Object)
java.lang.ThreadLocal$ThreadLocalMap.getEntryAfterMiss(java.lang.ThreadLocal,int,java.lang.ThreadLocal$ThreadLocalMap$Entry)
java.lang.String.init(char[],int,int)
sun.reflect.UnsafeStaticObjectFieldAccessorImpl.init(java.lang.reflect.Field)
sun.awt.KeyboardFocusManagerPeerImpl.init(java.awt.KeyboardFocusManager)
java.awt.event.FocusEvent.init(java.awt.Component,int,boolean)
org.codehaus.janino.tools.Disassembler$ConstantUtf8Info.getValue()
java.io.ByteArrayInputStream.init(byte[])
javax.swing.text.AbstractDocument$AbstractElement.addAttributes(javax.swing.text.AttributeSet)
java.lang.StringBuffer.append(java.lang.CharSequence)
org.sunflow.core.display.OpenExrDisplay.init(java.lang.String,java.lang.String,java.lang.String)
org.codehaus.janino.samples.ExpressionDemo.main(java.lang.String[])
org.codehaus.janino.util.ClassFile$AttributeInfo.store(java.io.DataOutputStream)
java.io.File.init(java.lang.String,int)
sun.reflect.ClassFileAssembler.getLength()
java.lang.StringCoding.lookupCharset(java.lang.String)
java.awt.event.AdjustmentEvent.getAdjustmentType()
javax.swing.text.AbstractDocument.createBranchElement(javax.swing.text.Element,javax.swing.text.AttributeSet)
javax.swing.RepaintManager.isDoubleBufferingEnabled()
sun.util.calendar.ZoneInfo.init(java.lang.String,int,int,int,long[],int[],int[],boolean)
java.lang.String.substring(int)
sun.awt.SunToolkit.getContainingWindow(java.awt.Component)
java.lang.ConditionalSpecialCasing.toLowerCaseEx(java.lang.String,int,java.util.Locale)
sun.awt.util.IdentityArrayList.fastRemove(int)
java.net.SocketPermission.init(java.lang.String,java.lang.String)
java.util.regex.Matcher.group(int)
java.util.ResourceBundle$CacheKey.access$700(java.util.ResourceBundle$CacheKey)
sun.reflect.UnsafeFieldAccessorImpl.init(java.lang.reflect.Field)
java.io.DataInputStream.readShort()
java.util.regex.Pattern.peekPastLine()
java.util.regex.Pattern.matcher(java.lang.CharSequence)
java.lang.System.getProperty(java.lang.String)
java.util.SimpleTimeZone.inDaylightTime(java.util.Date)
java.io.DataOutputStream.writeShort(int)
java.lang.Exception.init(java.lang.Throwable)
java.awt.KeyboardFocusManager.retargetFocusEvent(java.awt.AWTEvent)
sun.java2d.loops.CompositeType.equals(java.lang.Object)
java.security.Policy.init()
java.io.OutputStreamWriter.init(java.io.OutputStream)
java.awt.EventQueue.isDispatchThread()
java.security.cert.Certificate.equals(java.lang.Object)
java.util.ArrayList.init()
java.awt.geom.Rectangle2D.init()
sun.java2d.pipe.Region.dimAdd(int,int)
sun.util.calendar.AbstractCalendar.getCalendarDate(long,java.util.TimeZone)
sun.awt.image.PixelConverter.rgbToPixel(int,java.awt.image.ColorModel)
java.io.BufferedInputStream.close()
org.codehaus.janino.Java$NamedClassDeclaration.getName()
sun.util.calendar.Gregorian$Date.init(java.util.TimeZone)
javax.swing.UIManager$1.init(java.util.Properties)
java.nio.ByteBuffer.arrayOffset()
java.awt.Container.recursiveApplyCurrentShape(int)
org.sunflow.system.Timer.seconds()
java.awt.Rectangle.init(java.awt.Rectangle)
java.util.concurrent.atomic.AtomicLong.init(long)
java.text.ChoiceFormat.nextDouble(double)
javax.swing.UIManager.getColor(java.lang.Object)
java.awt.Point.init(int,int)
java.util.SimpleTimeZone.getEnd(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int)
sun.reflect.UnsafeStaticIntegerFieldAccessorImpl.init(java.lang.reflect.Field)
javax.swing.AbstractButton.isSelected()
java.util.regex.Pattern.composeOneStep(java.lang.String)
sun.nio.cs.StreamEncoder.writeBytes()
java.util.logging.LogManager$LoggerContext.init(java.util.logging.LogManager$1)
org.sunflow.SunflowAPI.update(java.lang.String)
java.util.Vector.setSize(int)
javax.swing.JComponent.getComponentGraphics(java.awt.Graphics)
java.lang.Character.isUpperCase(int)
java.awt.dnd.DropTargetContext.setTargetActions(int)
java.text.SimpleDateFormat.encode(int,int,java.lang.StringBuilder)
javax.swing.TransferHandler$TransferSupport.init(java.awt.Component,java.awt.dnd.DropTargetEvent)
org.codehaus.janino.tools.Disassembler$IndentPrintWriter.unindent()
org.codehaus.janino.tools.Disassembler.disasmAttributeInfo(java.io.DataInputStream)
sun.reflect.UnsafeQualifiedByteFieldAccessorImpl.init(java.lang.reflect.Field,boolean)
javax.swing.JViewport.needsRepaintAfterBlit()
org.sunflow.core.ParameterList$Parameter.init(int[])
org.codehaus.janino.tools.Disassembler$IndentPrintWriter.indent()
javax.swing.JComponent.uninstallUIAndProperties()
javax.swing.text.JTextComponent.setDragEnabled(boolean)
javax.swing.DebugGraphics.toShortString()
java.lang.reflect.Field.getBoolean(java.lang.Object)
java.awt.Component.postsOldMouseEvents()
java.text.BreakDictionary.readDictionaryFile(java.lang.String)
org.codehaus.janino.Java$ExpressionStatement.init(org.codehaus.janino.Java$Rvalue)
java.io.UnsupportedEncodingException.init(java.lang.String)
java.lang.IndexOutOfBoundsException.init()
sun.awt.image.VSyncedBSManager$SingleVSyncedBSMgr.init()
javax.swing.JCheckBox.init(java.lang.String,javax.swing.Icon,boolean)
org.sunflow.core.light.TriangleMeshLight.access$300(org.sunflow.core.light.TriangleMeshLight,int)
sun.misc.ThreadGroupUtils.getRootThreadGroup()
sun.text.normalizer.NormalizerBase.normalize(java.lang.String,java.text.Normalizer$Form)
java.beans.PropertyChangeSupport.init(java.lang.Object)
java.util.logging.LogManager$5.init(java.util.logging.Logger,java.util.logging.Level)
java.util.regex.Pattern$Loop.init(int,int)
java.awt.ComponentOrientation.isLeftToRight()
java.util.IdentityHashMap.init()
sun.reflect.ClassFileAssembler.setMaxLocals(int)
java.util.logging.LogManager$6.init(java.util.logging.Logger,java.util.logging.Logger)
org.sunflow.core.ParameterList$Parameter.getBoolValue()
javax.swing.SwingPaintEventDispatcher.init()
org.codehaus.janino.SimpleCompiler.init()
java.nio.HeapCharBuffer.init(char[],int,int)
java.io.FileWriter.init(java.io.File)
org.codehaus.janino.Java$ConstructorInvocation.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Rvalue[])
java.lang.Class.getCanonicalName()
java.lang.Throwable.getOurStackTrace()
java.awt.Component.getWidth()
org.codehaus.janino.util.resource.FileResourceCreator.init()
org.codehaus.janino.ScriptEvaluator.setThrownExceptions(java.lang.Class[][])
java.lang.ref.Reference.get()
java.awt.datatransfer.DataFlavor.tryToLoadClass(java.lang.String,java.lang.ClassLoader)
javax.swing.ToolTipManager$stillInsideTimerAction.init(javax.swing.ToolTipManager)
sun.util.calendar.CalendarDate.setSeconds(int)
java.lang.String.getChars(int,int,char[],int)
java.lang.Throwable.initCause(java.lang.Throwable)
org.codehaus.janino.tools.JGrep.init(java.io.File[],java.io.File[],java.io.File[],java.lang.String,boolean)
org.codehaus.janino.Descriptor.fromClassName(java.lang.String)
org.sunflow.core.ParameterList.getVector(java.lang.String,org.sunflow.math.Vector3)
java.nio.charset.CharsetDecoder.throwIllegalStateException(int,int)
sun.java2d.pipe.Region.isInsideQuickCheck(sun.java2d.pipe.Region)
sun.util.calendar.ZoneInfoFile.readZoneInfoFile(java.lang.String)
java.lang.Double.doubleValue()
javax.swing.JScrollBar$ModelListener.init(javax.swing.JScrollBar,javax.swing.JScrollBar$1)
org.sunflow.RenderObjectMap$RenderObjectHandle.getLight()
javax.swing.text.AbstractDocument$AbstractElement.checkForIllegalCast()
sun.reflect.UnsafeStaticCharacterFieldAccessorImpl.init(java.lang.reflect.Field)
java.awt.Window.getOwner_NoClientCode()
java.awt.GraphicsConfiguration.createCompatibleImage(int,int,int)
java.lang.Math.abs(float)
org.codehaus.janino.ScriptEvaluator.setMethodName(java.lang.String)
java.util.AbstractList.listIterator(int)
org.sunflow.util.FastHashMap$Entry.getValue()
java.awt.GraphicsDevice.getFullScreenWindow()
java.util.logging.Logger.removeChildLogger(java.util.logging.LogManager$LoggerWeakRef)
java.util.logging.LogManager$LoggerContext.ensureRootLogger(java.util.logging.Logger)
org.codehaus.janino.Java$ReturnStatement.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Rvalue)
java.lang.Double.doubleToLongBits(double)
javax.swing.text.AbstractDocument.getText(int,int,javax.swing.text.Segment)
sun.awt.X11GraphicsConfig.getSurfaceType()
sun.java2d.x11.X11Renderer.init()
org.codehaus.janino.util.Benchmark.report(java.lang.String)
java.awt.Container.getFocusTraversalPolicy()
java.awt.image.BufferedImage.coerceData(boolean)
java.text.Bidi.getRunCount()
sun.misc.VM.addFinalRefCount(int)
java.awt.EventQueue.coalesceEvent(java.awt.AWTEvent,int)
java.util.SimpleTimeZone.getOffset(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int,long)
java.util.IllegalFormatPrecisionException.init(int)
java.beans.ChangeListenerMap.init()
java.nio.charset.CharsetEncoder.onUnmappableCharacter(java.nio.charset.CodingErrorAction)
java.lang.Class.getEnclosingMethodInfo()
java.lang.StringCoding.decode(java.lang.String,byte[],int,int)
java.lang.Character.isDigit(int)
java.io.FileInputStream.isRunningFinalize()
sun.util.LocaleServiceProviderPool.hasProviders()
java.awt.Component.isEnabledImpl()
java.awt.Window.addWindowListener(java.awt.event.WindowListener)
javax.swing.JToggleButton.init(java.lang.String,javax.swing.Icon,boolean)
sun.java2d.loops.SurfaceType.getSuperType()
org.sunflow.image.Color.white()
java.util.regex.Pattern$4.init(java.util.regex.Pattern,int,int)
java.awt.EventQueue.postEventPrivate(java.awt.AWTEvent)
java.awt.Component.applyCurrentShapeBelowMe()
java.awt.EventQueue.coalescePeerEvent(sun.awt.PeerEvent)
java.awt.Component.mouseDrag(java.awt.Event,int,int)
org.sunflow.system.UI.taskCanceled()
java.awt.image.DirectColorModel.getAlphaMask()
org.sunflow.core.gi.IrradianceCacheGIEngine.init(org.sunflow.core.Options)
java.util.HashMap.isEmpty()
org.sunflow.core.ParameterList$Parameter.init(int,org.sunflow.core.ParameterList$1)
java.util.ResourceBundle.setExpirationTime(java.util.ResourceBundle$CacheKey,java.util.ResourceBundle$Control)
javax.swing.RepaintManager$PaintManager.beginPaint()
java.util.concurrent.locks.ReentrantLock$NonfairSync.init()
org.codehaus.janino.Java$IfStatement.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Rvalue,org.codehaus.janino.Java$BlockStatement,org.codehaus.janino.Java$BlockStatement)
java.util.concurrent.locks.ReentrantLock$Sync.nonfairTryAcquire(int)
javax.swing.text.StyleContext$NamedStyle.removeAttribute(java.lang.Object)
java.awt.Component.setBackground(java.awt.Color)
java.lang.ClassLoader.needsClassLoaderPermissionCheck(java.lang.ClassLoader,java.lang.ClassLoader)
java.awt.Component.lostFocus(java.awt.Event,java.lang.Object)
sun.java2d.loops.GraphicsPrimitiveMgr.locate(int,sun.java2d.loops.SurfaceType,sun.java2d.loops.CompositeType,sun.java2d.loops.SurfaceType)
java.lang.Class.getDeclaredMethods()
sun.util.calendar.CalendarSystem.init()
org.codehaus.janino.tools.Disassembler$IndentPrintWriter.println()
org.sunflow.core.ParameterList$Parameter.access$900(org.sunflow.core.ParameterList$Parameter)
org.codehaus.janino.tools.Disassembler$IndentPrintWriter.init(java.io.OutputStream)
javax.swing.JViewport.blitDoubleBuffered(javax.swing.JComponent,java.awt.Graphics,int,int,int,int,int,int,int,int,int,int)
org.codehaus.janino.tools.Disassembler$14.init(short[],org.codehaus.janino.tools.Disassembler)
java.nio.charset.CharsetDecoder.implOnMalformedInput(java.nio.charset.CodingErrorAction)
org.codehaus.janino.ClassBodyEvaluator.setExtendedType(java.lang.Class)
org.codehaus.janino.ScriptEvaluator.setParameters(java.lang.String[],java.lang.Class[])
org.codehaus.janino.Java$CompilationUnit$TypeImportOnDemandDeclaration.init(org.codehaus.janino.Location,java.lang.String[])
javax.swing.plaf.metal.DefaultMetalTheme$FontDelegate.init()
java.util.regex.Pattern$SliceUS.init(int[])
javax.swing.RepaintManager.resetVolatileDoubleBuffer(java.awt.GraphicsConfiguration)
sun.java2d.pipe.Region.equals(java.lang.Object)
java.awt.Component.isMixingNeeded()
java.lang.ref.SoftReference.init(java.lang.Object,java.lang.ref.ReferenceQueue)
java.awt.ImageCapabilities.isAccelerated()
java.awt.dnd.DropTarget.addDropTargetListener(java.awt.dnd.DropTargetListener)
java.lang.ArrayIndexOutOfBoundsException.init(int)
java.text.BreakIterator$BreakIteratorGetter.access$000()
javax.swing.UIManager.get(java.lang.Object)
java.lang.Integer.stringSize(int)
java.awt.Component.move(int,int)
org.sunflow.util.FastHashMap.containsKey(java.lang.Object)
java.io.File.init(java.lang.String)
javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent,javax.swing.JComponent,java.awt.Graphics,int,int,int,int)
java.util.logging.Level.findLevel(java.lang.String)
java.nio.Buffer.position(int)
javax.swing.ToolTipManager.unregisterComponent(javax.swing.JComponent)
java.lang.Throwable.getLocalizedMessage()
java.lang.reflect.Field.setBoolean(java.lang.Object,boolean)
sun.reflect.AccessorGenerator.emitBoxingContantPoolEntries()
javax.swing.JComponent.setEnabled(boolean)
java.awt.Container.getComponent(int)
java.net.Inet6Address.isLinkLocalAddress(byte[])
org.sunflow.system.ImagePanel.drag(int,int)
java.util.concurrent.ConcurrentHashMap.entryAt(java.util.concurrent.ConcurrentHashMap$HashEntry[],int)
java.util.WeakHashMap.transfer(java.util.WeakHashMap$Entry[],java.util.WeakHashMap$Entry[])
org.sunflow.core.ParameterList$Parameter.getVector()
java.text.BreakIterator.getInt(byte[],int)
sun.java2d.pipe.Region.getInstanceXYWH(int,int,int,int)
org.codehaus.janino.Java$Type.setEnclosingScope(org.codehaus.janino.Java$Scope)
javax.swing.ScrollPaneLayout$UIResource.init()
org.sunflow.util.FastHashMap$Entry.access$202(org.sunflow.util.FastHashMap$Entry,java.lang.Object)
javax.swing.Timer.timerQueue()
java.awt.Component.getLocationOnWindow()
java.util.regex.Pattern.normalizeCharClass(java.lang.StringBuilder,int)
sun.misc.SoftCache$ValueCell.create(java.lang.Object,java.lang.Object,java.lang.ref.ReferenceQueue)
org.codehaus.janino.Parser.parseExclusiveOrExpression()
javax.swing.JComponent.firePropertyChange(java.lang.String,boolean,boolean)
java.awt.Container.layout()
sun.awt.image.SunVolatileImage.getWidth()
org.sunflow.core.ParameterList.addIntegerArray(java.lang.String,int[])
java.lang.Class.searchMethods(java.lang.reflect.Method[],java.lang.String,java.lang.Class[])
sun.awt.AppContext.put(java.lang.Object,java.lang.Object)
java.nio.charset.CoderResult.isError()
SunflowGUI$3.init(SunflowGUI)
org.sunflow.core.renderer.BucketRenderer.init()
java.lang.StringCoding.access$100(char[],int,java.nio.charset.Charset)
javax.swing.text.AbstractDocument.putProperty(java.lang.Object,java.lang.Object)
sun.java2d.loops.DrawRect.locate(sun.java2d.loops.SurfaceType,sun.java2d.loops.CompositeType,sun.java2d.loops.SurfaceType)
org.codehaus.janino.Java$FieldDeclaration.init(org.codehaus.janino.Location,java.lang.String,short,org.codehaus.janino.Java$Type,org.codehaus.janino.Java$VariableDeclarator[])
java.awt.AWTPermission.init(java.lang.String)
org.sunflow.core.shader.WireframeShader.init()
java.util.concurrent.locks.AbstractQueuedSynchronizer.init()
java.lang.StringIndexOutOfBoundsException.init()
java.text.ChoiceFormat.init(java.lang.String)
java.security.Policy.getPermissions(java.security.ProtectionDomain)
java.util.regex.Pattern.clazz(boolean)
java.lang.ThreadLocal$ThreadLocalMap.expungeStaleEntries()
java.awt.Container.add(java.awt.Component,java.lang.Object)
java.lang.reflect.Field.getDeclaringClass()
java.io.BufferedReader.init(java.io.Reader)
java.util.regex.Pattern.createGroup(boolean)
org.sunflow.math.Point3.init()
org.codehaus.janino.tools.Disassembler$18.init(java.lang.String,java.io.ByteArrayOutputStream,org.codehaus.janino.tools.Disassembler)
org.codehaus.janino.Java$AbstractTypeBodyDeclaration.setDeclaringType(org.codehaus.janino.Java$TypeDeclaration)
java.util.logging.LogManager.demandSystemLogger(java.lang.String,java.lang.String)
java.lang.SecurityManager.checkMemberAccess(java.lang.Class,int)
sun.awt.PeerEvent.getFlags()
java.awt.geom.Rectangle2D.equals(java.lang.Object)
javax.swing.text.PlainDocument.init(javax.swing.text.AbstractDocument$Content)
org.sunflow.system.ImagePanel.imageFill(int,int,int,int,org.sunflow.image.Color)
java.awt.dnd.DropTargetContext.getDropTargetContextPeer()
java.awt.Component.isVisible_NoClientCode()
sun.util.calendar.ZoneInfoFile.getZoneInfoMappings()
org.codehaus.janino.tools.Disassembler$5.init(short,org.codehaus.janino.tools.Disassembler)
java.nio.Buffer.init(int,int,int,int)
java.lang.Double.valueOf(double)
java.util.Vector.elementAt(int)
java.util.regex.Pattern.normalize()
java.util.regex.Pattern.compile(java.lang.String)
java.util.concurrent.locks.ReentrantLock$Sync.init()
java.lang.Throwable.printStackTrace(java.io.PrintStream)
java.util.EmptyStackException.init()
java.awt.datatransfer.SystemFlavorMap.getDefaultFlavorMap()
javax.swing.text.AbstractDocument.getDocumentProperties()
java.lang.InternalError.init(java.lang.String)
javax.swing.text.JTextComponent$MutableCaretEvent.init(javax.swing.text.JTextComponent)
javax.swing.JComponent.setOpaque(boolean)
java.util.ResourceBundle.getBundle(java.lang.String,java.util.Locale,java.util.ResourceBundle$Control)
java.awt.AWTEvent.consume()
java.util.Calendar.internalGet(int)
javax.swing.Autoscroller.stop(javax.swing.JComponent)
java.util.regex.Matcher.getSubSequence(int,int)
java.io.Reader.read()
java.util.logging.Level.intValue()
java.lang.ClassLoader.getResource(java.lang.String)
java.util.concurrent.ConcurrentHashMap.entryForHash(java.util.concurrent.ConcurrentHashMap$Segment,int)
java.awt.image.BufferedImage.getHeight()
java.nio.charset.UnmappableCharacterException.init(int)
javax.swing.SwingUtilities.loadSystemClass(java.lang.String)
java.nio.charset.Charset.isSupported(java.lang.String)
java.lang.Thread.start()
java.io.FileDescriptor.incrementAndGetUseCount()
org.codehaus.janino.UnitCompiler.compile(org.codehaus.janino.Java$TypeDeclaration)
java.io.FilterInputStream.read()
java.util.Arrays.binarySearch0(java.lang.Object[],int,int,java.lang.Object)
java.util.logging.LogManager.readPrimordialConfiguration()
sun.java2d.pipe.Region.getSafeTranslatedRegion(int,int)
java.io.InputStreamReader.init(java.io.InputStream)
java.util.WeakHashMap.expungeStaleEntries()
java.util.HashMap.init(int)
java.util.Stack.pop()
java.awt.AWTEventMulticaster.add(java.awt.event.MouseWheelListener,java.awt.event.MouseWheelListener)
java.util.regex.Pattern$7.init(java.util.regex.Pattern$CharProperty,java.util.regex.Pattern$CharProperty)
org.codehaus.janino.tools.Disassembler.readExceptionTable(java.io.DataInputStream)
org.codehaus.janino.ClassLoaderIClassLoader.init(java.lang.ClassLoader)
java.lang.reflect.Field.getFieldAccessor(java.lang.Object)
sun.font.AttributeValues.i_set(sun.font.EAttribute,sun.font.AttributeValues)
java.awt.geom.AffineTransform.setToRotation(double,double)
org.sunflow.math.OrthoNormalBasis.makeFromW(org.sunflow.math.Vector3)
java.awt.geom.AffineTransform.setTransform(double,double,double,double,double,double)
java.awt.Component.isFocusable()
java.util.TimeZone.getDefaultInAppContext()
java.lang.ref.SoftReference.get()
java.util.regex.Pattern$GroupHead.init(int)
java.io.FilePermission.getMask(java.lang.String)
org.codehaus.janino.Parser.parsePackageMemberTypeDeclaration()
java.lang.ClassLoader.resolveClass(java.lang.Class)
javax.swing.text.SimpleAttributeSet.addAttributes(javax.swing.text.AttributeSet)
java.awt.event.InputEvent.getModifiersEx()
org.sunflow.RenderObjectMap$RenderObjectHandle.init(org.sunflow.core.Shader)
org.codehaus.janino.ResourceFinderIClassLoader.init(org.codehaus.janino.util.resource.ResourceFinder,org.codehaus.janino.IClassLoader)
org.codehaus.janino.Scanner$Token.getLocation()
java.nio.Buffer.limit(int)
java.net.Inet6Address.initif(java.lang.String,byte[],java.net.NetworkInterface)
java.awt.Toolkit.getProperty(java.lang.String,java.lang.String)
java.util.Formatter.ensureOpen()
sun.misc.SoftCache$ValueCell.access$210()
java.lang.Class.toString()
java.io.FileInputStream.close()
java.util.concurrent.ConcurrentHashMap$Values.init(java.util.concurrent.ConcurrentHashMap)
java.util.WeakHashMap.init()
org.sunflow.core.renderer.ProgressiveRenderer$SmallBucketThread.run()
java.util.regex.Matcher.end(int)
java.util.Formatter$Conversion.isCharacter(char)
sun.reflect.ReflectionFactory$1.init()
sun.reflect.UnsafeQualifiedStaticLongFieldAccessorImpl.init(java.lang.reflect.Field,boolean)
java.awt.Component.processMouseEvent(java.awt.event.MouseEvent)
java.util.IllegalFormatFlagsException.init(java.lang.String)
javax.swing.JComboBox.setModel(javax.swing.ComboBoxModel)
java.util.ResourceBundle.endLoading(java.util.ResourceBundle$CacheKey)
org.codehaus.janino.Java$SuperConstructorInvocation.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Rvalue,org.codehaus.janino.Java$Rvalue[])
org.codehaus.janino.tools.Disassembler.setSourceDirectory(java.io.File)
java.util.HashMap.indexFor(int,int)
java.util.logging.Logger.config(java.lang.String)
javax.swing.JViewport.updateUI()
java.text.SimpleDateFormat.init(java.lang.String)
javax.swing.JComponent.alwaysOnTop()
java.io.ByteArrayOutputStream.writeTo(java.io.OutputStream)
javax.swing.AbstractButton.setIcon(javax.swing.Icon)
javax.swing.TransferHandler.access$200()
org.sunflow.core.ParameterList.clear(boolean)
org.sunflow.system.Parser.fetchNextToken()
java.lang.Character.isDigit(char)
java.io.BufferedReader.fill()
java.util.logging.Logger.demandLogger(java.lang.String,java.lang.String,java.lang.Class)
java.util.logging.LogManager.getUserContext()
sun.util.calendar.CalendarDate.isNormalized()
org.sunflow.core.ParameterList$Parameter.init(boolean,org.sunflow.core.ParameterList$1)
org.codehaus.janino.tools.Disassembler.readMethodInfo(java.io.DataInputStream)
java.lang.StringBuffer.append(int)
java.util.Currency.getDefaultFractionDigits()
sun.util.calendar.ZoneInfoFile.getZoneAliases()
org.codehaus.janino.tools.JGrep.parseCompilationUnit(java.io.File,java.lang.String)
org.sunflow.RenderObjectMap$RenderObjectHandle.init(org.sunflow.core.Camera,org.sunflow.RenderObjectMap$1)
java.awt.AWTKeyStroke.getKeyChar()
javax.swing.RepaintManager._getOffscreenBuffer(java.awt.Component,int,int)
org.sunflow.core.LightServer.showStats()
org.codehaus.janino.Scanner.location()
java.awt.Component.setFont(java.awt.Font)
java.text.BreakIterator.init()
java.lang.StringBuffer.substring(int,int)
java.lang.Double.valueOf(java.lang.String)
java.util.logging.LogManager$4.init(java.util.logging.LogManager,java.lang.String,java.util.logging.Logger)
java.awt.Component.mixOnReshaping()
java.awt.BorderLayout.init(int,int)
java.lang.Character.codePointAt(java.lang.CharSequence,int)
java.awt.Component.areInputMethodsEnabled()
java.text.SimpleDateFormat.init(int,int,java.util.Locale)
java.io.DataInputStream.readByte()
java.util.MissingResourceException.init(java.lang.String,java.lang.String,java.lang.String)
sun.util.calendar.ZoneInfo.isDirty()
java.lang.reflect.Modifier.toString(int)
org.codehaus.janino.Java$ClassDeclaration.init(org.codehaus.janino.Location,short)
org.codehaus.janino.Java$Rvalue.setEnclosingBlockStatement(org.codehaus.janino.Java$BlockStatement)
java.util.logging.Logger.setupResourceInfo(java.lang.String,java.lang.Class)
java.awt.Event.getKeyEventChar()
java.awt.Component.mouseMove(java.awt.Event,int,int)
javax.swing.AbstractButton.updateUI()
java.net.InetAddress.getHostAddress()
java.lang.AssertionError.init(java.lang.String)
sun.awt.image.SunVolatileImage.getBackground()
sun.net.util.IPAddressUtil.textToNumericFormatV4(java.lang.String)
java.lang.Class.getEnumConstantsShared()
org.sunflow.math.Vector3.init(float,float,float)
java.text.MessageFormat.makeFormat(int,int,java.lang.StringBuffer[])
java.awt.Component.applyCompoundShape(sun.java2d.pipe.Region)
org.sunflow.RenderObjectMap.lookupInstance(java.lang.String)
java.lang.reflect.Method.getParameterTypes()
org.codehaus.janino.tools.HprofScrubber$1.init()
org.codehaus.janino.SimpleCompiler$AuxiliaryClassLoader.init(org.codehaus.janino.SimpleCompiler$2,java.lang.ClassLoader)
java.util.regex.Pattern.compile()
java.lang.Float.floatToIntBits(float)
java.lang.StringBuffer.length()
java.awt.EventQueue.setCurrentEventAndMostRecentTime(java.awt.AWTEvent)
sun.awt.im.InputMethodContext.setInputMethodSupportsBelowTheSpot(boolean)
javax.swing.text.AbstractDocument.init(javax.swing.text.AbstractDocument$Content,javax.swing.text.AbstractDocument$AttributeContext)
sun.awt.image.BufImgSurfaceData.initSolidLoops()
java.lang.ThreadGroup.checkAccess()
java.lang.reflect.Field.getInt(java.lang.Object)
sun.reflect.ByteVectorFactory.create()
org.codehaus.janino.Java$SwitchStatement$SwitchBlockStatementGroup.init(org.codehaus.janino.Location,java.util.List,boolean,java.util.List)
sun.util.calendar.CalendarUtils.floorDivide(long,long)
org.codehaus.janino.Parser.parseTryStatement()
java.awt.Container.addImpl(java.awt.Component,java.lang.Object,int)
sun.text.SupplementaryCharacterData.init(int[])
java.util.regex.Pattern.rangeFor(int,int)
org.codehaus.janino.util.iterator.IteratorCollection.init(java.util.Iterator)
java.awt.Dimension.getWidth()
javax.swing.JPanel.init(boolean)
java.lang.Class$3.init()
java.awt.geom.AffineTransform.deltaTransform(java.awt.geom.Point2D,java.awt.geom.Point2D)
java.util.Properties.init(java.util.Properties)
org.sunflow.SunflowAPI.init()
java.awt.Frame.getState()
java.util.Vector.addElement(java.lang.Object)
java.awt.Container.recursiveSubtractAndApplyShape(sun.java2d.pipe.Region,int)
org.sunflow.RenderObjectMap$RenderObjectHandle.init(org.sunflow.core.Options)
javax.swing.JRootPane.createLayeredPane()
java.awt.Rectangle.init(int,int,int,int)
java.lang.StringBuffer.toString()
java.security.PrivilegedActionException.getCause()
org.sunflow.core.display.FastDisplay.init()
java.util.HashMap.remove(java.lang.Object)
sun.misc.URLClassPath.getResource(java.lang.String,boolean)
sun.reflect.ClassFileAssembler.emitConstantPoolUTF8(java.lang.String)
java.awt.image.ColorModel.getAlpha(java.lang.Object)
java.security.Policy$2.init(java.lang.String)
javax.swing.ArrayTable.put(java.lang.Object,java.lang.Object)
org.codehaus.janino.ClassBodyEvaluator.cook(org.codehaus.janino.Scanner)
java.lang.Class.argumentTypesToString(java.lang.Class[])
javax.swing.JRootPane.getContentPane()
java.util.WeakHashMap.indexFor(int,int)
org.sunflow.util.FastHashMap$EntryIterator.init(org.sunflow.util.FastHashMap,org.sunflow.util.FastHashMap$1)
java.util.Arrays.binarySearch(java.lang.Object[],java.lang.Object,java.util.Comparator)
org.sunflow.core.accel.KDTree.init(int)
org.codehaus.janino.Parser.parseFormalParameter()
javax.swing.UIDefaults.getUI(javax.swing.JComponent)
sun.awt.SunToolkit.postEvent(sun.awt.AppContext,java.awt.AWTEvent)
java.util.PriorityQueue.siftUp(int,java.lang.Object)
java.util.concurrent.atomic.AtomicInteger.init()
org.codehaus.janino.Scanner.warning(java.lang.String,java.lang.String,org.codehaus.janino.Location)
java.lang.StringCoding.scale(int,float)
javax.swing.text.AbstractDocument$BranchElement.getEndOffset()
org.codehaus.janino.Java$MethodInvocation.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Atom,java.lang.String,org.codehaus.janino.Java$Rvalue[])
java.lang.AssertionError.init(java.lang.Object)
java.lang.ThreadGroup.add(java.lang.Thread)
java.lang.Character.charValue()
sun.reflect.DelegatingMethodAccessorImpl.setDelegate(sun.reflect.MethodAccessorImpl)
java.util.Formatter.format(java.lang.String,java.lang.Object[])
java.awt.Component.getPeer()
sun.util.resources.LocaleData$1.init(java.lang.String,java.util.Locale)
org.codehaus.janino.Scanner.init(java.lang.String,java.io.Reader,short,short)
sun.java2d.loops.GraphicsPrimitiveMgr$PrimitiveSpec.init()
org.codehaus.janino.tools.Disassembler.println(java.lang.String)
java.awt.image.DirectColorModel.getGreenMask()
java.awt.Component.isFocusOwner()
java.io.FilterReader.init(java.io.Reader)
sun.util.calendar.CalendarDate.setDayOfMonth(int)
java.awt.dnd.DropTarget.createDropTargetContext()
java.awt.Container.isFocusTraversalPolicyProvider()
java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,java.lang.Object)
java.nio.CharBuffer.put(java.lang.String,int,int)
java.awt.geom.Dimension2D.init()
org.sunflow.core.primitive.Plane.init()
java.lang.Class$ReflectionData.init(int)
java.awt.Container.preferredSize()
javax.swing.ScrollPaneLayout.syncWithScrollPane(javax.swing.JScrollPane)
java.awt.datatransfer.MimeType.setParameter(java.lang.String,java.lang.String)
org.sunflow.core.shader.PrimIDShader.init()
sun.java2d.pipe.Region.isInsideXYXY(int,int,int,int)
org.sunflow.core.parser.TriParser.init()
java.io.BufferedReader.init(java.io.Reader,int)
org.sunflow.core.primitive.TriangleMesh.setSmallTriangles(boolean)
java.awt.Component.dispatchEventImpl(java.awt.AWTEvent)
sun.util.LocaleServiceProviderPool.getProviderLocales()
javax.swing.JPasswordField.customSetUIProperty(java.lang.String,java.lang.Object)
org.codehaus.janino.Scanner$LocatedException.init(java.lang.String,org.codehaus.janino.Location)
sun.text.CompactByteArray.init(short[],byte[])
java.lang.Thread.getThreadGroup()
java.lang.Math.floor(double)
org.sunflow.core.light.TriangleMeshLight.access$100(org.sunflow.core.light.TriangleMeshLight)
org.sunflow.RenderObjectMap.put(java.lang.String,org.sunflow.core.Camera)
java.awt.Component.validate()
java.util.Date.init()
java.lang.reflect.Method.getModifiers()
javax.swing.JToggleButton$ToggleButtonModel.init()
sun.security.x509.X509CertImpl.getEncodedInternal()
sun.reflect.ClassFileAssembler.incStack()
javax.swing.AbstractButton.setSelected(boolean)
java.util.concurrent.ConcurrentHashMap$Segment.init(float,int,java.util.concurrent.ConcurrentHashMap$HashEntry[])
java.lang.Boolean.parseBoolean(java.lang.String)
java.util.ResourceBundle.init()
java.awt.KeyboardFocusManager.dispatchAndCatchException(java.lang.Throwable,java.awt.Component,java.awt.event.FocusEvent)
java.awt.KeyboardFocusManager.firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)
sun.awt.CausedFocusEvent.init(java.awt.Component,int,boolean,java.awt.Component,sun.awt.CausedFocusEvent$Cause)
org.codehaus.janino.tools.Disassembler.getConstantPoolEntry(short)
java.awt.KeyboardFocusManager.getPermanentFocusOwner()
java.text.DecimalFormatSymbols.getInternationalCurrencySymbol()
java.util.zip.ZipEntry.dosToJavaTime(long)
org.codehaus.janino.util.resource.PathResourceFinder.parsePath(java.lang.String)
javax.swing.plaf.ComponentUI.paint(java.awt.Graphics,javax.swing.JComponent)
org.codehaus.janino.ScriptEvaluator$1$MethodWrapper.init(java.lang.String,java.lang.Class[])
sun.java2d.x11.X11SurfaceData.init(sun.awt.X11ComponentPeer,sun.awt.X11GraphicsConfig,sun.java2d.loops.SurfaceType,java.awt.image.ColorModel)
org.codehaus.janino.util.Benchmark.beginReporting()
sun.awt.im.InputContext.addClientWindowListeners()
java.awt.geom.AffineTransform.getShearY()
org.codehaus.janino.ScriptEvaluator.setThrownExceptions(java.lang.Class[])
java.lang.SecurityManager.checkAccess(java.lang.ThreadGroup)
java.util.ResourceBundle$CacheKey.access$500(java.util.ResourceBundle$CacheKey,java.lang.Throwable)
java.awt.Event.translate(int,int)
org.sunflow.core.Scene.setLightList(org.sunflow.core.LightSource[])
java.nio.charset.CharsetDecoder.decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)
java.util.Hashtable.size()
javax.swing.JComponent.getHeight()
java.lang.Thread.setPriority(int)
org.codehaus.janino.Java$Literal.init(org.codehaus.janino.Location,java.lang.Object)
java.awt.EventQueue.getPriority(java.awt.AWTEvent)
org.codehaus.janino.tools.HprofScrubber$Site.init(int,int,int,java.lang.String)
java.awt.Container.getBottommostComponentIndex()
java.nio.charset.CharsetDecoder.implReset()
java.util.Date.getCalendarSystem(int)
java.awt.Window.dispose()
java.lang.Double.isInfinite(double)
java.util.HashSet.iterator()
java.awt.Component.coalesceEvents(java.awt.AWTEvent,java.awt.AWTEvent)
sun.reflect.ClassFileAssembler.emitInt(int)
java.text.AttributedString.init(java.lang.String)
java.awt.datatransfer.DataFlavor.init(java.lang.String)
java.util.concurrent.CopyOnWriteArrayList.getArray()
java.util.SimpleTimeZone.getRawOffset()
java.text.DecimalFormat.expandAffixes()
java.awt.Dialog.interruptBlocking()
javax.swing.undo.AbstractUndoableEdit.init()
java.awt.Frame.setTitle(java.lang.String)
java.lang.Float.isInfinite(float)
org.sunflow.system.UI.taskCancel()
org.sunflow.math.OrthoNormalBasis.init()
sun.font.AttributeValues.equals(java.lang.Object,java.lang.Object)
org.codehaus.janino.tools.Disassembler$2.init(short,short,org.codehaus.janino.tools.Disassembler)
java.lang.System.exit(int)
java.util.logging.Level$KnownLevel.findByLocalizedLevelName(java.lang.String)
javax.swing.JComponent.firePropertyChange(java.lang.String,int,int)
sun.misc.URLClassPath$Loader.getResource(java.lang.String,boolean)
org.codehaus.janino.Java$FieldAccessExpression.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Atom,java.lang.String)
java.text.DateFormat.getDateTimeInstance(int,int,java.util.Locale)
org.sunflow.core.light.TriangleMeshLight.access$000(org.sunflow.core.light.TriangleMeshLight)
org.codehaus.janino.Scanner.init(java.lang.String,java.io.InputStream)
java.lang.IllegalStateException.init()
java.lang.ThreadLocal$ThreadLocalMap.init(java.lang.ThreadLocal$ThreadLocalMap)
sun.reflect.MethodAccessorGenerator$1.init(sun.reflect.MethodAccessorGenerator,java.lang.String,byte[],java.lang.Class)
javax.swing.JLabel.updateUI()
org.codehaus.janino.Scanner$Token.init(org.codehaus.janino.Scanner)
sun.java2d.loops.GraphicsPrimitiveMgr.locateGeneral(int)
java.awt.Cursor.getPredefinedCursor(int)
org.codehaus.janino.SimpleCompiler.setParentClassLoader(java.lang.ClassLoader)
java.util.LinkedList.getLast()
java.lang.reflect.Constructor.newInstance(java.lang.Object[])
java.lang.String.lastIndexOf(java.lang.String,int)
org.codehaus.janino.tools.JGrep$3.init(org.codehaus.janino.util.StringPattern[])
java.awt.KeyboardFocusManager.getFirstHWRequest()
java.lang.Shutdown.runHooks()
java.awt.Container.remove(java.awt.Component)
java.lang.Boolean.valueOf(boolean)
javax.swing.UIManager$LAFState.init(javax.swing.UIManager$1)
java.lang.Class.getSimpleName()
java.awt.KeyboardFocusManager.removeFirstRequest()
javax.swing.JScrollPane.updateUI()
java.util.ResourceBundle$CacheKey.access$400(java.util.ResourceBundle$CacheKey)
org.codehaus.janino.SimpleCompiler.init(java.lang.String,java.io.InputStream)
sun.util.calendar.CalendarDate.setNormalized(boolean)
java.nio.ByteBuffer.init(int,int,int,int,byte[],int)
java.util.regex.Pattern$8.init(java.util.regex.Pattern$CharProperty,java.util.regex.Pattern$CharProperty)
java.util.regex.Pattern.parsePastWhitespace(int)
java.lang.Float.isNaN(float)
org.sunflow.SunflowAPI.runSystemCheck()
java.util.PriorityQueue.siftDown(int,java.lang.Object)
org.codehaus.janino.util.ClassFile.getConstantPoolInfo(short)
java.awt.Component.dispatchMouseWheelToAncestor(java.awt.event.MouseWheelEvent)
java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,java.lang.Object[])
javax.swing.JPasswordField.setEchoChar(char)
java.lang.String.toUpperCase()
java.util.Hashtable$Enumerator.init(java.util.Hashtable,int,boolean)
org.codehaus.janino.samples.DemoBase.class$(java.lang.String)
java.util.ResourceBundle$CacheKey.getLocale()
org.codehaus.janino.Compiler$CompilerIClassLoader.init(org.codehaus.janino.Compiler,org.codehaus.janino.util.resource.ResourceFinder,org.codehaus.janino.IClassLoader)
java.beans.PropertyChangeEvent.getPropertyName()
sun.util.BuddhistCalendar.init(java.util.TimeZone,java.util.Locale)
sun.misc.FloatingDecimal.big5pow(int)
org.sunflow.math.MathUtils.clamp(int,int,int)
sun.reflect.ClassFileAssembler.append(sun.reflect.ByteVector)
sun.reflect.InstantiationExceptionConstructorAccessorImpl.init(java.lang.String)
java.awt.AWTException.init(java.lang.String)
java.util.logging.LogManager$LoggerContext.init()
java.util.Formatter$FormatSpecifier.checkFloat()
javax.swing.JComponent.isPainting()
java.util.SimpleTimeZone.init(int,java.lang.String,int,int,int,int,int,int,int,int,int,int,int)
sun.util.calendar.ZoneInfoFile.addToCache(java.lang.String,sun.util.calendar.ZoneInfo)
javax.swing.JPopupMenu.init(java.lang.String)
java.awt.Component.enable()
java.lang.ConditionalSpecialCasing.isAfterSoftDotted(java.lang.String,int)
javax.swing.text.GapVector.shiftGap(int)
java.lang.IndexOutOfBoundsException.init(java.lang.String)
java.awt.event.ComponentEvent.getComponent()
java.lang.ref.SoftReference.init(java.lang.Object)
org.codehaus.janino.tools.Disassembler$SourceFileAttribute.init(org.codehaus.janino.tools.Disassembler,short)
org.sunflow.util.FastHashMap$EntryIterator.readable()
org.sunflow.RenderObjectMap.updateScene(org.sunflow.core.Scene)
java.awt.event.WindowEvent.init(java.awt.Window,int)
org.codehaus.janino.Parser.parseBreakStatement()
sun.java2d.SurfaceData.pixelFor(int)
javax.swing.JFrame.setRootPaneCheckingEnabled(boolean)
org.codehaus.janino.CompileException.getMessage()
java.io.FilterInputStream.read(byte[],int,int)
java.util.HashSet.remove(java.lang.Object)
SunflowGUI.init()
sun.awt.AWTAutoShutdown.getInstance()
java.lang.Math.cos(double)
java.text.NumberFormat.getMinimumIntegerDigits()
org.sunflow.core.accel.NullAccelerator.init()
java.lang.Integer.toString(int,int)
java.io.File.generateFile(java.lang.String,java.lang.String,java.io.File)
org.sunflow.core.Instance.getBakingPrimitives()
javax.swing.RepaintManager.paint(javax.swing.JComponent,javax.swing.JComponent,java.awt.Graphics,int,int,int,int)
sun.reflect.ClassFileAssembler.opc_i2d()
java.awt.Component.getNormalShape()
org.sunflow.core.ParameterList$InterpolationType.valueOf(java.lang.String)
java.io.OutputStreamWriter.flushBuffer()
javax.swing.AbstractButton.setIconTextGap(int)
java.awt.Menu.getItem(int)
org.sunflow.system.ImagePanel.imageBegin(int,int,int)
org.codehaus.janino.UnitCompiler$1.init(org.codehaus.janino.UnitCompiler)
java.nio.Buffer.remaining()
javax.swing.JRadioButton.init()
org.sunflow.system.Timer.start()
java.awt.Component.keyDown(java.awt.Event,int)
java.awt.Component.firePropertyChange(java.lang.String,boolean,boolean)
javax.swing.UIManager.maybeInitialize()
org.sunflow.RenderObjectMap$RenderObjectHandle.init(org.sunflow.core.PrimitiveList)
java.util.Locale.init(java.lang.String,java.lang.String)
java.util.regex.Matcher.start(int)
java.util.logging.Logger.findResourceBundle(java.lang.String,boolean)
java.lang.Class.enumConstantDirectory()
javax.swing.JViewport.windowBlitPaint(java.awt.Graphics)
java.util.logging.Level$KnownLevel.findByValue(int)
org.sunflow.math.Matrix4.rotateY(float)
javax.swing.JFrame.getContentPane()
org.sunflow.core.Scene.init()
sun.misc.URLClassPath$Loader.getClassPath()
java.util.Stack.empty()
sun.misc.FloatingDecimal.getHexDigit(java.lang.String,int)
java.awt.dnd.DropTarget.init(java.awt.Component,int,java.awt.dnd.DropTargetListener,boolean)
org.codehaus.janino.Java$NamedClassDeclaration.init(org.codehaus.janino.Location,java.lang.String,short,java.lang.String,org.codehaus.janino.Java$Type,org.codehaus.janino.Java$Type[])
java.io.Writer.write(java.lang.String,int,int)
javax.swing.JComponent._paintImmediately(int,int,int,int)
java.util.StringTokenizer.isDelimiter(int)
java.awt.Event.isConsumed()
org.codehaus.janino.Parser.parseVariableInitializer()
java.util.HashMap$Entry.init(int,java.lang.Object,java.lang.Object,java.util.HashMap$Entry)
org.sunflow.core.ParameterList.getString(java.lang.String,java.lang.String)
java.text.ChoiceFormat.doubleArraySize(double[])
java.awt.image.VolatileImage.getTransparency()
sun.awt.AppContext.remove(java.lang.Object)
java.io.BufferedWriter.init(java.io.Writer,int)
java.util.HashSet.init(java.util.Collection)
sun.awt.datatransfer.DataTransferer$1.init(java.lang.String)
sun.reflect.ClassFileAssembler.opc_return()
org.codehaus.janino.Scanner$Token.getIdentifier()
sun.nio.cs.StreamEncoder.isOpen()
java.lang.ConditionalSpecialCasing.toUpperCaseCharArray(java.lang.String,int,java.util.Locale)
java.lang.String.indexOf(java.lang.String,int)
org.sunflow.SunflowAPI.lookupCamera(java.lang.String)
java.util.logging.Logger.getParent()
org.sunflow.core.photonmap.CausticPhotonMap.init(org.sunflow.core.Options)
org.sunflow.core.ParameterList$Parameter.access$000(org.sunflow.core.ParameterList$Parameter)
sun.misc.URLClassPath.getLoader(int)
java.text.DecimalFormatSymbols.getPatternSeparator()
java.lang.Enum.valueOf(java.lang.Class,java.lang.String)
java.lang.StringCoding$StringDecoder.init(java.nio.charset.Charset,java.lang.String,java.lang.StringCoding$1)
sun.java2d.pipe.Region.calcBBox()
java.text.DecimalFormatSymbols.init(java.util.Locale)
java.awt.Rectangle.contains(java.awt.Rectangle)
java.awt.geom.AffineTransform.preConcatenate(java.awt.geom.AffineTransform)
java.io.DataInputStream.readFloat()
javax.swing.AbstractButton.init(java.lang.String,javax.swing.Icon)
java.util.regex.Matcher.end()
java.awt.HeadlessException.init()
org.codehaus.janino.tools.Disassembler.readShortArray(java.io.DataInputStream,int)
javax.swing.UIManager.initialize()
org.codehaus.janino.util.ClassFile.getConstantClassName(short)
org.sunflow.core.LightServer.setLights(org.sunflow.core.LightSource[])
java.awt.KeyboardFocusManager.markClearGlobalFocusOwner()
java.text.RuleBasedBreakIterator$1.init(java.text.RuleBasedBreakIterator,java.lang.String)
javax.swing.JPanel.setUI(javax.swing.plaf.PanelUI)
org.codehaus.janino.Java$AbstractTypeDeclaration.addDeclaredMethod(org.codehaus.janino.Java$MethodDeclarator)
java.util.Arrays.swap(java.lang.Object[],int,int)
sun.awt.im.InputContext.removeClientWindowListeners()
java.io.OutputStream.init()
org.codehaus.janino.ExpressionEvaluator.createFastExpressionEvaluator(org.codehaus.janino.Scanner,java.lang.String,java.lang.Class,java.lang.Class,java.lang.String[],java.lang.ClassLoader)
sun.util.calendar.ZoneInfo.getAliasTable()
java.util.Collections$SynchronizedCollection.init(java.util.Collection)
java.util.Hashtable.init(int)
org.codehaus.janino.Scanner.access$3(org.codehaus.janino.Scanner)
org.codehaus.janino.Java$ArrayInitializer.init(org.codehaus.janino.Location,org.codehaus.janino.Java$ArrayInitializerOrRvalue[])
org.codehaus.janino.tools.Disassembler.readAttributeInfo(java.io.DataInputStream)
javax.swing.JComponent.paintChildren(java.awt.Graphics)
org.sunflow.SunflowAPI.lookupLight(java.lang.String)
java.lang.AbstractStringBuilder.append(java.lang.String)
java.awt.Container.remove(int)
org.codehaus.janino.Scanner.access$4(org.codehaus.janino.Scanner)
java.lang.Error.init()
java.net.URL.toString()
java.awt.KeyboardFocusManager.processCurrentLightweightRequests()
sun.misc.FDBigInt.init(long)
java.util.ResourceBundle.getString(java.lang.String)
java.lang.reflect.Field.setFieldAccessor(sun.reflect.FieldAccessor,boolean)
org.sunflow.core.renderer.ProgressiveRenderer.init()
java.util.HashMap.get(java.lang.Object)
java.util.logging.LogRecord.setResourceBundle(java.util.ResourceBundle)
java.lang.ClassLoader.findBootstrapClass0(java.lang.String)
java.security.PrivilegedActionException.getException()
java.awt.event.PaintEvent.getUpdateRect()
sun.text.normalizer.Trie.getRawOffset(int,char)
java.net.Inet6Address.deriveNumericScope(byte[],java.net.NetworkInterface)
java.awt.Frame.setUndecorated(boolean)
org.sunflow.core.light.TriangleMeshLight.access$500(org.sunflow.core.light.TriangleMeshLight,int)
javax.swing.plaf.metal.MetalLookAndFeel.init()
org.codehaus.janino.tools.Disassembler.disasmClassFile(java.io.DataInputStream)
java.lang.NullPointerException.init(java.lang.String)
javax.swing.JComponent.getUIClassID()
java.util.regex.Matcher.quoteReplacement(java.lang.String)
sun.reflect.MagicAccessorImpl.init()
java.lang.String.init(int,int,char[])
sun.security.provider.PolicyFile.initPolicyFile(java.lang.String,java.lang.String,sun.security.provider.PolicyFile$PolicyInfo)
java.lang.Double.parseDouble(java.lang.String)
org.codehaus.janino.tools.JGrep$4.init(org.codehaus.janino.util.StringPattern[])
javax.swing.UIManager.initializeSystemDefaults(java.util.Properties)
sun.java2d.Disposer.addRecord(java.lang.Object,sun.java2d.DisposerRecord)
org.sunflow.SunflowAPI.render(java.lang.String,org.sunflow.core.Display)
java.io.InputStream.init()
java.awt.AWTEventMulticaster.remove(java.awt.event.KeyListener,java.awt.event.KeyListener)
javax.swing.text.StyleContext$SmallAttributeSet.init(javax.swing.text.StyleContext,javax.swing.text.AttributeSet)
java.util.LinkedHashMap.init(int,float)
java.awt.Component.keyUp(java.awt.Event,int)
java.security.AccessControlContext.checkPermission(java.security.Permission)
sun.java2d.SunGraphicsEnvironment.addDisplayChangedListener(sun.awt.DisplayChangedListener)
java.beans.ChangeListenerMap.add(java.lang.String,java.util.EventListener)
org.sunflow.core.ParameterList.getColor(java.lang.String,org.sunflow.image.Color)
org.codehaus.janino.tools.JGrep$MethodInvocationTarget.init()
java.lang.Thread.nextThreadID()
java.text.DateFormat$DateFormatGetter.access$000()
sun.reflect.Reflection.ensureMemberAccess(java.lang.Class,java.lang.Class,java.lang.Object,int)
org.sunflow.core.Instance.removeModifier(org.sunflow.core.Modifier)
sun.misc.FloatingDecimal.roundup()
java.util.concurrent.CopyOnWriteArrayList.toArray(java.lang.Object[])
java.util.regex.Pattern.atom()
java.util.Formatter$FormatSpecifier.checkNumeric()
java.util.regex.Pattern$LazyLoop.init(int,int)
sun.awt.image.VSyncedBSManager$NoLimitVSyncBSMgr.init()
java.util.Locale.toUpperCase(java.lang.String)
java.awt.Component.mouseExit(java.awt.Event,int,int)
java.awt.SentEvent.init()
javax.swing.plaf.basic.BasicLookAndFeel.init()
sun.java2d.pipe.Region.init(int,int,int,int)
java.awt.Component.disable()
java.lang.Class$4.init(java.lang.Class,java.lang.reflect.Method)
java.lang.Class.isCheckMemberAccessOverridden(java.lang.SecurityManager)
java.util.Stack.peek()
org.codehaus.janino.Parser.parseBlockStatement()
org.sunflow.core.Instance.hasGeometry(org.sunflow.core.Geometry)
java.util.logging.LogManager.demandLogger(java.lang.String,java.lang.String,java.lang.Class)
java.util.logging.LogManager$LoggerContext.addLocalLogger(java.util.logging.Logger)
java.io.BufferedReader.readLine(boolean)
java.lang.Float.init(float)
java.lang.AbstractStringBuilder.substring(int,int)
javax.swing.plaf.metal.MetalLookAndFeel.setCurrentTheme(javax.swing.plaf.metal.MetalTheme)
org.codehaus.janino.Java$CompilationUnit.setPackageDeclaration(org.codehaus.janino.Java$PackageDeclaration)
java.awt.AWTEventMulticaster.init(java.util.EventListener,java.util.EventListener)
java.lang.AbstractStringBuilder.append(char[],int,int)
java.beans.VetoableChangeSupport.fireVetoableChange(java.beans.PropertyChangeEvent)
org.sunflow.core.Scene.render(org.sunflow.core.Options,org.sunflow.core.ImageSampler,org.sunflow.core.Display)
org.codehaus.janino.tools.Disassembler$1.init(short,org.codehaus.janino.tools.Disassembler)
java.lang.Throwable.printStackTrace()
java.util.HashMap.resize(int)
java.util.HashSet.init(int)
sun.java2d.pipe.Region.getDifference(sun.java2d.pipe.Region)
sun.java2d.pipe.Region.getIterator()
javax.swing.DefaultButtonModel.init()
java.awt.KeyboardFocusManager.getCurrentFocusCycleRoot()
java.awt.Component.createImage(int,int)
java.net.Inet6Address.getAddress()
java.lang.Thread.auditSubclass(java.lang.Class)
org.sunflow.math.Matrix4.scale(float)
java.util.regex.Matcher.getTextLength()
sun.font.AttributeValues.update(sun.font.EAttribute)
java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment()
java.awt.KeyboardFocusManager.setDefaultFocusTraversalPolicy(java.awt.FocusTraversalPolicy)
sun.misc.FloatingDecimal.countBits(long)
sun.reflect.MethodAccessorGenerator.generateName(boolean,boolean)
java.io.File.getAbsolutePath()
java.awt.Component.processMouseWheelEvent(java.awt.event.MouseWheelEvent)
javax.swing.border.EmptyBorder.init(int,int,int,int)
java.awt.Toolkit$2.init()
org.sunflow.core.light.TriangleMeshLight.init(java.lang.String,org.sunflow.SunflowAPI)
org.sunflow.core.TextureCache.flush()
org.codehaus.janino.Scanner.internalRead()
org.codehaus.janino.Scanner$Token.isKeyword(java.lang.String[])
java.lang.String.indexOf(int)
java.lang.Character.toChars(int,char[],int)
sun.misc.FloatingDecimal.constructPow52(int,int)
java.text.SimpleDateFormat.initializeCalendar(java.util.Locale)
javax.swing.JButton.init()
java.lang.Boolean.booleanValue()
java.awt.Dimension.init(java.awt.Dimension)
org.codehaus.janino.Parser.readIdentifier()
java.lang.String.equalsIgnoreCase(java.lang.String)
java.awt.KeyboardFocusManager.checkKFMSecurity()
java.security.Policy$1.init()
sun.reflect.ClassFileAssembler.opc_aconst_null()
java.util.Hashtable.remove(java.lang.Object)
java.util.concurrent.atomic.AtomicInteger.getAndAdd(int)
sun.reflect.ByteVectorImpl.init(int)
java.awt.Component.clearMostRecentFocusOwnerOnHide()
org.codehaus.janino.IClass.getDescriptor()
java.awt.geom.NoninvertibleTransformException.init(java.lang.String)
java.text.DecimalFormat.setMinimumFractionDigits(int)
javax.swing.text.GapVector.shiftEnd(int)
sun.java2d.SunGraphics2D.validateColor()
sun.util.calendar.ZoneInfo.getOffsetsByWall(long,int[])
java.io.InputStream.read(byte[],int,int)
javax.swing.JComponent.setPreferredSize(java.awt.Dimension)
org.codehaus.janino.Parser.eatToken()
java.awt.Window.addToWindowList()
org.codehaus.janino.util.iterator.FilterIterator.init(java.util.Iterator)
java.awt.Component.getTreeLock()
java.lang.String.regionMatches(int,java.lang.String,int,int)
org.codehaus.janino.JavaSourceClassLoader.init(java.lang.ClassLoader,java.io.File[],java.lang.String,org.codehaus.janino.util.enumerator.EnumeratorSet)
sun.reflect.Reflection.isSameClassPackage(java.lang.ClassLoader,java.lang.String,java.lang.ClassLoader,java.lang.String)
java.lang.String.lastIndexOf(int,int)
java.awt.Component.getBackground()
javax.swing.DebugGraphics.shouldComponentDebug(javax.swing.JComponent)
java.lang.String.replace(java.lang.CharSequence,java.lang.CharSequence)
org.sunflow.RenderObjectMap$RenderObjectHandle.access$000(org.sunflow.RenderObjectMap$RenderObjectHandle)
sun.security.util.Debug.println(java.lang.String)
javax.swing.AbstractButton.createActionListener()
java.awt.Window.getToolkit()
java.util.logging.Logger.doSetParent(java.util.logging.Logger)
sun.awt.image.SunVolatileImage.createSurfaceManager(java.lang.Object,java.awt.ImageCapabilities)
java.lang.Character.charCount(int)
org.sunflow.util.FastHashMap.remove(java.lang.Object)
java.awt.BorderLayout.init()
java.util.Formatter.init(java.lang.Appendable,java.util.Locale)
java.lang.Class.getField(java.lang.String)
java.util.regex.Pattern$Pos.init(java.util.regex.Pattern$Node)
javax.swing.RepaintManager.markCompletelyClean(javax.swing.JComponent)
java.lang.Character.toUpperCase(char)
java.io.FileInputStream.init(java.io.File)
sun.util.calendar.ZoneInfo.getTransitionIndex(long,int)
sun.java2d.pipe.Region.getIntersection(sun.java2d.pipe.Region)
javax.swing.LookAndFeel.toString()
java.lang.AbstractStringBuilder.append(char)
java.lang.Class.forName(java.lang.String)
org.codehaus.janino.Java$LocalClassDeclarationStatement.init(org.codehaus.janino.Java$LocalClassDeclaration)
java.lang.String.indexOf(int,int)
sun.java2d.loops.GraphicsPrimitiveMgr$PrimitiveSpec.init(sun.java2d.loops.GraphicsPrimitiveMgr$1)
javax.swing.JMenu.add(java.awt.Component)
org.sunflow.core.Scene.getThreads()
org.codehaus.janino.Java$Block.addStatements(java.util.List)
java.awt.Container.init()
java.lang.ClassLoader.getBootstrapClassPath()
javax.swing.RepaintManager$DoubleBufferInfo.init(javax.swing.RepaintManager)
java.lang.StackTraceElement.equals(java.lang.Object)
org.sunflow.core.display.OpenExrDisplay.imageUpdate(int,int,int,int,org.sunflow.image.Color[])
sun.util.calendar.LocalGregorianCalendar$1.init(java.lang.String)
java.util.Locale.equals(java.lang.Object)
javax.swing.UIManager$3.init()
sun.reflect.AccessorGenerator.emitCommonConstantPoolEntries()
org.codehaus.janino.Parser.parseBlock()
java.lang.ref.PhantomReference.init(java.lang.Object,java.lang.ref.ReferenceQueue)
sun.reflect.UnsafeCharacterFieldAccessorImpl.init(java.lang.reflect.Field)
javax.swing.text.GapVector.init()
org.codehaus.janino.tools.Disassembler.readAttributeBody(java.lang.String,java.io.DataInputStream)
java.io.DataInputStream.readLong()
javax.swing.UIDefaults.firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)
java.util.Collections.synchronizedList(java.util.List)
java.util.regex.Matcher.find()
sun.awt.SunGraphicsCallback.constrainGraphics(java.awt.Graphics,java.awt.Rectangle)
java.lang.ThreadLocal$ThreadLocalMap.cleanSomeSlots(int,int)
java.text.AttributedString.createRunAttributeDataVectors()
java.awt.Component.isVisible()
org.codehaus.janino.Java$AbstractTypeDeclaration.addMemberTypeDeclaration(org.codehaus.janino.Java$MemberTypeDeclaration)
java.lang.ThreadLocal.nextHashCode()
java.awt.image.BufferedImage.getWidth()
javax.swing.JViewport.canUseWindowBlitter()
org.sunflow.math.Vector3.cross(org.sunflow.math.Vector3,org.sunflow.math.Vector3,org.sunflow.math.Vector3)
javax.swing.text.AbstractDocument$DefaultDocumentEvent.getLength()
java.awt.GraphicsCallback$PeerPrintCallback.getInstance()
sun.awt.image.VolatileSurfaceManager.init(sun.awt.image.SunVolatileImage,java.lang.Object)
sun.misc.SoftCache.fill(java.lang.Object)
java.text.DecimalFormat.setMaximumFractionDigits(int)
java.awt.Component.addMouseWheelListener(java.awt.event.MouseWheelListener)
java.io.DataInputStream.init(java.io.InputStream)
java.lang.ref.ReferenceQueue.reallyPoll()
java.security.CodeSource.getLocation()
java.awt.Container.getPreferredSize()
java.awt.datatransfer.MimeTypeParameterList.quote(java.lang.String)
sun.java2d.loops.DrawLine.locate(sun.java2d.loops.SurfaceType,sun.java2d.loops.CompositeType,sun.java2d.loops.SurfaceType)
org.codehaus.janino.SimpleCompiler.class$(java.lang.String)
java.awt.Component.setName(java.lang.String)
java.io.File.init(java.io.File,java.lang.String)
java.lang.Float.valueOf(float)
org.codehaus.janino.Parser.warning(java.lang.String,java.lang.String,org.codehaus.janino.Location)
java.awt.Component.countHierarchyMembers()
javax.swing.JMenu.ensurePopupMenuCreated()
java.net.InetAddress$InetAddressHolder.init(java.lang.String,int)
java.lang.Throwable.init()
java.awt.image.BufferedImage.getType()
java.text.ChoiceFormat.nextDouble(double,boolean)
sun.util.calendar.CalendarDate.setTimeOfDay(long)
java.lang.AbstractStringBuilder.delete(int,int)
sun.misc.FDBigInt.multaddMe(int,int)
java.text.MessageFormat.applyPattern(java.lang.String)
java.util.regex.Pattern$StartS.init(java.util.regex.Pattern$Node)
sun.java2d.x11.X11SurfaceData$X11PixmapSurfaceData.init(sun.awt.X11GraphicsConfig,int,int,java.awt.Image,sun.java2d.loops.SurfaceType,java.awt.image.ColorModel,long,int)
java.awt.Window$1DisposeAction.run()
sun.java2d.pipe.Region.clipAdd(int,int)
java.util.Properties.getProperty(java.lang.String)
org.codehaus.janino.SimpleCompiler.getClassLoader()
sun.java2d.loops.GraphicsPrimitiveMgr.locate(sun.java2d.loops.GraphicsPrimitiveMgr$PrimitiveSpec)
java.awt.datatransfer.MimeTypeParameterList.set(java.lang.String,java.lang.String)
org.codehaus.janino.ClassBodyEvaluator.addPackageMemberClassDeclaration(org.codehaus.janino.Location,org.codehaus.janino.Java$CompilationUnit)
org.sunflow.core.ParameterList$Parameter.init(boolean)
java.util.PropertyResourceBundle.init(java.io.InputStream)
java.awt.Component.show(boolean)
org.sunflow.core.ParameterList$Parameter.init(java.lang.String[])
sun.reflect.AccessorGenerator.init()
org.sunflow.system.Parser.getNextToken()
java.security.PrivilegedActionException.toString()
java.util.regex.Pattern$Dot.init()
javax.swing.text.AbstractDocument$1.init(javax.swing.text.AbstractDocument)
javax.swing.UIManager.makeInstalledLAFKey(java.lang.String,java.lang.String)
javax.swing.JComponent.adjustPaintFlags()
org.sunflow.util.FloatArray.init()
java.awt.GraphicsEnvironment$1.init()
org.codehaus.janino.Java$LocalVariableDeclarationStatement.init(org.codehaus.janino.Location,short,org.codehaus.janino.Java$Type,org.codehaus.janino.Java$VariableDeclarator[])
org.codehaus.janino.tools.Disassembler.disasm(java.io.InputStream)
org.codehaus.janino.Scanner.doc()
sun.awt.image.SunVolatileImage.getForeground()
org.sunflow.core.LightServer.lookupShadingCache(org.sunflow.core.ShadingState,org.sunflow.core.Shader)
java.io.BufferedInputStream.init(java.io.InputStream,int)
java.awt.EventQueue.uncacheEQItem(java.awt.EventQueueItem)
javax.swing.JComponent.setFont(java.awt.Font)
javax.swing.text.JTextComponent.moveCaretPosition(int)
org.codehaus.janino.IClass.getArrayIClass2(org.codehaus.janino.IClass)
java.lang.Enum.name()
java.awt.Component.getSiblingIndexAbove()
javax.swing.text.JTextComponent.setUI(javax.swing.plaf.TextUI)
java.text.Format.formatToCharacterIterator(java.lang.Object)
java.awt.AWTKeyStroke.getCachedStroke(char,int,int,boolean)
java.awt.Component.processComponentEvent(java.awt.event.ComponentEvent)
org.codehaus.janino.Java$FieldDeclaration.setDeclaringType(org.codehaus.janino.Java$TypeDeclaration)
org.codehaus.janino.samples.ClassBodyDemo.main(java.lang.String[])
java.awt.Component.areBoundsValid()
sun.java2d.SunGraphics2D.invalidatePipe()
org.sunflow.math.Matrix4.transformPZ(float,float,float)
javax.swing.JMenu.createWinListener(javax.swing.JPopupMenu)
java.awt.geom.Point2D$Float.init()
org.sunflow.core.Geometry.getNumPrimitives()
java.util.ResourceBundle.getBundleImpl(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle$Control)
sun.misc.SoftCache$ValueCell.access$400(java.lang.Object,java.lang.Object,java.lang.ref.ReferenceQueue)
java.lang.Thread.init(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long,java.security.AccessControlContext)
java.awt.event.FocusEvent.init(java.awt.Component,int)
sun.reflect.misc.ReflectUtil.isNonPublicProxyClass(java.lang.Class)
java.lang.Character.isWhitespace(char)
java.util.regex.Pattern.expr(java.util.regex.Pattern$Node)
org.sunflow.core.ParameterList$Parameter.init(int[],org.sunflow.core.ParameterList$1)
javax.swing.SwingUtilities.appContextPut(java.lang.Object,java.lang.Object)
javax.swing.LookAndFeel.initialize()
java.awt.Window.setClientSize(int,int)
org.sunflow.core.Geometry.getWorldBounds(org.sunflow.math.Matrix4)
javax.swing.JPanel.init(java.awt.LayoutManager,boolean)
javax.swing.BorderFactory.createEmptyBorder(int,int,int,int)
org.codehaus.janino.Java$Atom.toLvalue()
java.awt.Rectangle.init()
org.sunflow.core.Scene.getBounds()
java.util.concurrent.atomic.AtomicReference.init()
org.sunflow.util.FloatArray.trim()
java.util.logging.LogManager.loadLoggerHandlers(java.util.logging.Logger,java.lang.String,java.lang.String)
org.codehaus.janino.Parser.parseClassBody(org.codehaus.janino.Java$ClassDeclaration)
java.security.cert.CertificateException.init(java.lang.String)
java.util.regex.Pattern.nextEscaped()
java.awt.KeyboardFocusManager._clearGlobalFocusOwner()
java.awt.Graphics.hitClip(int,int,int,int)
java.util.Calendar.setTime(java.util.Date)
java.util.regex.Matcher.find(int)
java.lang.IllegalStateException.init(java.lang.String)
java.text.Format.createAttributedCharacterIterator(java.text.AttributedCharacterIterator,java.text.AttributedCharacterIterator$Attribute,java.lang.Object)
java.util.regex.Pattern.newSingle(int)
org.sunflow.system.SearchPath.addSearchPath(java.lang.String)
org.sunflow.core.LightServer.addShadingCache(org.sunflow.core.ShadingState,org.sunflow.core.Shader,org.sunflow.image.Color)
java.awt.Component.preferredSize()
java.lang.NumberFormatException.init(java.lang.String)
java.util.regex.Pattern$All.init()
javax.swing.text.AbstractDocument.getProperty(java.lang.Object)
sun.java2d.pipe.Region.getInstanceXYXY(int,int,int,int)
java.awt.Container.add(java.awt.Component)
java.lang.ThreadLocal$ThreadLocalMap.rehash()
java.awt.Menu.addNotify()
java.awt.Component.postEvent(java.awt.Event)
java.security.AccessControlContext.checkPermission2(java.security.Permission)
java.awt.event.MouseEvent.isPopupTrigger()
java.lang.reflect.Method.getMethodAccessor()
org.codehaus.janino.Compiler$1.init()
org.sunflow.SunflowAPI.parameter(java.lang.String,org.sunflow.math.Point3)
java.awt.Component.getDropTarget()
sun.awt.im.InputContext.getInputMethod()
java.util.logging.Logger.setCallersClassLoaderRef(java.lang.Class)
java.awt.Component.getComponentOrientation()
java.nio.Buffer.flip()
org.codehaus.janino.util.ClassFile.store(java.io.OutputStream)
javax.swing.DefaultButtonModel.setEnabled(boolean)
org.sunflow.core.light.DirectionalSpotlight.init()
java.io.UTFDataFormatException.init(java.lang.String)
org.codehaus.janino.tools.Disassembler$SourceRelatedAttributeInfo.init()
org.codehaus.janino.tools.Disassembler$7.init(float,org.codehaus.janino.tools.Disassembler)
java.lang.NoClassDefFoundError.init(java.lang.String)
org.sunflow.core.shader.GlassShader.init()
org.codehaus.janino.Java$FunctionDeclarator.init(org.codehaus.janino.Location,java.lang.String,short,org.codehaus.janino.Java$Type,java.lang.String,org.codehaus.janino.Java$FunctionDeclarator$FormalParameter[],org.codehaus.janino.Java$Type[],org.codehaus.janino.Java$Block)
java.awt.Component.processHierarchyBoundsEvent(java.awt.event.HierarchyEvent)
java.util.regex.ASCII.toUpper(int)
sun.awt.AWTAutoShutdown.activateBlockerThread()
java.awt.Component.firePropertyChange(java.lang.String,int,int)
org.sunflow.util.FastHashMap$Entry.remove()
java.util.regex.Pattern$UnixCaret.init()
org.codehaus.janino.util.Benchmark.end()
javax.swing.JRootPane.init()
javax.swing.RepaintManager$PaintManager.copyArea(javax.swing.JComponent,java.awt.Graphics,int,int,int,int,int,int,boolean)
org.codehaus.janino.util.iterator.DirectoryIterator.newArrayList(java.lang.Object)
javax.swing.JComponent.setAlignmentX(float)
org.sunflow.SunflowAPI.build()
java.nio.ByteBuffer.allocate(int)
java.util.AbstractCollection.retainAll(java.util.Collection)
javax.swing.JScrollPane.getHorizontalScrollBarPolicy()
java.lang.ClassLoader.findLoadedClass(java.lang.String)
java.awt.Component.dispatchEvent(java.awt.AWTEvent)
java.util.concurrent.locks.ReentrantLock.unlock()
sun.misc.FDBigInt.mult(sun.misc.FDBigInt)
sun.util.resources.LocaleData.getNumberFormatData(java.util.Locale)
java.awt.Component.getBounds(java.awt.Rectangle)
java.util.logging.Logger.setLevel(java.util.logging.Level)
sun.java2d.loops.GraphicsPrimitive.satisfiesSameAs(sun.java2d.loops.GraphicsPrimitive)
java.util.regex.Pattern$Node.init()
java.util.ResourceBundle$CacheKey.clone()
java.util.regex.Pattern$Bound.init(int)
javax.swing.DefaultButtonModel.isEnabled()
java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.init(java.util.concurrent.locks.ReentrantReadWriteLock)
java.lang.RuntimeException.init(java.lang.String,java.lang.Throwable)
java.awt.datatransfer.MimeTypeParameterList.init()
org.sunflow.core.photonmap.GlobalPhotonMap.init(int,int,float)
java.lang.Class.privateGetDeclaredFields(boolean)
java.awt.Component.getAppliedShape()
java.lang.Throwable.init(java.lang.String)
javax.swing.JComponent.fetchRectangle()
javax.swing.DebugGraphicsInfo.init()
java.awt.event.ItemEvent.getStateChange()
javax.swing.event.EventListenerList.add(java.lang.Class,java.util.EventListener)
java.util.EventObject.init(java.lang.Object)
java.util.DuplicateFormatFlagsException.init(java.lang.String)
java.util.logging.LogManager.access$900(java.util.logging.Logger,java.util.logging.Logger)
javax.swing.TimerQueue.sharedInstance()
sun.awt.image.BytePackedRaster.getDataBitOffset()
java.util.regex.Pattern.getClass(int)
java.util.AbstractSequentialList.iterator()
java.lang.StringBuilder.setLength(int)
java.awt.Dialog.isModal()
java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock.init(java.util.concurrent.locks.ReentrantReadWriteLock)
org.codehaus.janino.samples.ScriptDemo.usage()
javax.swing.ArrayTable.init()
java.util.Vector.add(java.lang.Object)
java.io.ByteArrayOutputStream.init()
java.net.URL.checkSpecifyHandler(java.lang.SecurityManager)
org.sunflow.math.Matrix4.scale(float,float,float)
java.beans.VetoableChangeSupport.fireVetoableChange(java.lang.String,java.lang.Object,java.lang.Object)
javax.swing.JComponent.paintImmediately(java.awt.Rectangle)
sun.awt.image.VSyncedBSManager.releaseVsync(java.awt.image.BufferStrategy)
java.io.IOException.init(java.lang.String)
java.awt.KeyboardFocusManager$HeavyweightFocusRequest.getFirstLightweightRequest()
org.codehaus.janino.Java$LabeledStatement.init(org.codehaus.janino.Location,java.lang.String,org.codehaus.janino.Java$Statement)
sun.java2d.pipe.Region.filterSpans(sun.java2d.pipe.Region,sun.java2d.pipe.Region,int)
java.nio.charset.CoderMalfunctionError.init(java.lang.Exception)
java.util.ResourceBundle.putBundleInCache(java.util.ResourceBundle$CacheKey,java.util.ResourceBundle,java.util.ResourceBundle$Control)
java.security.Permissions.getPermissionCollection(java.security.Permission,boolean)
java.lang.String.startsWith(java.lang.String)
javax.swing.RepaintManager.getDoubleBufferMaximumSize()
org.codehaus.janino.Parser.parseImportDeclarationBody()
java.nio.charset.CoderResult.throwException()
org.codehaus.janino.tools.JGrep.jGrep(java.io.File[],org.codehaus.janino.util.StringPattern[],org.codehaus.janino.util.StringPattern[],java.util.List)
java.awt.Component.subtractAndApplyShapeBelowMe()
javax.swing.JTextField$ScrollRepainter.init(javax.swing.JTextField)
org.codehaus.janino.Java$Rvalue.init(org.codehaus.janino.Location)
org.codehaus.janino.Java$CompilationUnit$StaticImportOnDemandDeclaration.init(org.codehaus.janino.Location,java.lang.String[])
org.codehaus.janino.Scanner.readNextChar()
org.sunflow.system.ImagePanel.reset()
sun.awt.SunToolkit.getSunAwtDisableMixing()
sun.nio.cs.StreamEncoder.implFlushBuffer()
javax.swing.JRootPane.createGlassPane()
java.util.Hashtable$Entry.init(int,java.lang.Object,java.lang.Object,java.util.Hashtable$Entry)
java.awt.KeyboardFocusManager.setMostRecentFocusOwner(java.awt.Window,java.awt.Component)
javax.swing.JFrame.setDefaultCloseOperation(int)
org.codehaus.janino.ScriptEvaluator.evaluate(int,java.lang.Object[])
java.awt.Component.getSize()
sun.java2d.loops.DrawPath.locate(sun.java2d.loops.SurfaceType,sun.java2d.loops.CompositeType,sun.java2d.loops.SurfaceType)
javax.swing.event.UndoableEditEvent.init(java.lang.Object,javax.swing.undo.UndoableEdit)
javax.swing.AbstractButton.updateMnemonicProperties()
javax.swing.text.AbstractDocument.insertString(int,java.lang.String,javax.swing.text.AttributeSet)
java.util.Hashtable.access$500(java.util.Hashtable)
sun.awt.im.InputContext.disableNativeIM()
java.awt.Component.transferFocus(boolean)
java.net.Inet6Address.getScopeId()
sun.awt.image.IntegerComponentRaster.getPixelStride()
sun.reflect.misc.ReflectUtil.checkProxyPackageAccess(java.lang.ClassLoader,java.lang.Class[])
sun.misc.FloatingDecimal.init(float)
java.util.FormatFlagsConversionMismatchException.init(java.lang.String,char)
java.util.SimpleTimeZone.getStart(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int)
java.util.Arrays.asList(java.lang.Object[])
org.sunflow.Benchmark.init(int,boolean,boolean,boolean)
java.awt.datatransfer.MimeTypeParameterList.skipWhiteSpace(java.lang.String,int)
java.awt.Container.invalidateTree()
java.awt.Container.recursiveApplyCurrentShape()
java.lang.IllegalAccessException.init(java.lang.String)
org.sunflow.core.gi.PathTracingGIEngine.init(org.sunflow.core.Options)
java.awt.AWTEvent.getID()
javax.swing.text.GapVector.close(int,int)
java.security.AccessController.checkPermission(java.security.Permission)
java.awt.Toolkit.getEventQueue()
javax.swing.text.StyleContext$SmallAttributeSet.updateResolveParent()
javax.swing.text.JTextComponent.setEditable(boolean)
java.text.NumberFormat.clone()
java.util.ArrayList.init(int)
java.util.WeakHashMap.resize(int)
java.text.RuleBasedBreakIterator.init(java.lang.String)
java.lang.SecurityManager.getPackages(java.lang.String)
java.util.ArrayList.add(java.lang.Object)
java.awt.event.InputEvent.getModifiers()
java.lang.StringCoding$StringDecoder.init(java.nio.charset.Charset,java.lang.String)
org.sunflow.math.BoundingBox.include(org.sunflow.math.BoundingBox)
java.lang.Short.shortValue()
java.nio.charset.CharacterCodingException.init()
java.text.DateFormat.getDateInstance(int,java.util.Locale)
java.text.Bidi.getLength()
java.awt.Container.checkAddToSelf(java.awt.Component)
org.sunflow.core.display.FastDisplay.imageBegin(int,int,int)
org.sunflow.RenderObjectMap.put(java.lang.String,org.sunflow.core.LightSource)
org.sunflow.core.Scene.setInstanceLists(org.sunflow.core.Instance[],org.sunflow.core.Instance[])
java.awt.im.InputContext.dispose()
org.sunflow.util.FastHashMap.alloc(int)
javax.swing.text.AbstractDocument$BranchElement.getElement(int)
java.util.AbstractList.rangeCheckForAdd(int)
sun.util.calendar.AbstractCalendar.init()
javax.swing.TransferHandler$DropHandler.init()
sun.java2d.SurfaceData.setBlitProxyKey(java.lang.Object)
org.codehaus.janino.ScriptEvaluator.getDefaultReturnType()
sun.awt.dnd.SunDropTargetContextPeer.access$302(sun.awt.dnd.SunDropTargetContextPeer,int)
java.awt.geom.AffineTransform.init(double,double,double,double,double,double,int)
java.awt.Component.invalidate()
java.util.ResourceBundle.loadBundle(java.util.ResourceBundle$CacheKey,java.util.List,java.util.ResourceBundle$Control,boolean)
org.sunflow.RenderObjectMap$RenderObjectHandle.access$400(org.sunflow.RenderObjectMap$RenderObjectHandle)
java.beans.PropertyChangeSupport.removePropertyChangeListener(java.beans.PropertyChangeListener)
java.lang.Class.getConstructor0(java.lang.Class[],int)
java.text.DateFormat.init()
org.codehaus.janino.util.resource.LazyMultiResourceFinder.init(java.util.Iterator)
java.lang.StringBuffer.append(java.lang.Object)
java.lang.ConditionalSpecialCasing.isBeforeDot(java.lang.String,int)
java.util.ResourceBundle.hasValidParentChain(java.util.ResourceBundle)
java.lang.Math.sqrt(double)
sun.misc.Unsafe.fieldOffset(java.lang.reflect.Field)
java.text.DecimalFormat.applyPattern(java.lang.String,boolean)
java.util.logging.LogManager$LoggerWeakRef.dispose()
java.awt.ContainerOrderFocusTraversalPolicy.init()
java.awt.AWTEventMulticaster.remove(java.awt.event.MouseListener,java.awt.event.MouseListener)
java.util.Vector.clone()
javax.swing.RepaintManager.currentManager(java.awt.Component)
java.lang.ThreadLocal$ThreadLocalMap.expungeStaleEntry(int)
java.awt.Component.removePropertyChangeListener(java.beans.PropertyChangeListener)
org.codehaus.janino.tools.Disassembler.decodeAccess(short)
org.codehaus.janino.SimpleCompiler.compileToClassLoader(org.codehaus.janino.Java$CompilationUnit,org.codehaus.janino.util.enumerator.EnumeratorSet)
java.util.regex.Pattern.caseInsensitiveRangeFor(int,int)
java.util.ArrayList$SubList.init(java.util.ArrayList,java.util.AbstractList,int,int,int)
java.text.AttributedString.addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)
java.io.PrintWriter.newLine()
javax.swing.JComponent.recycleRectangle(java.awt.Rectangle)
java.util.concurrent.ConcurrentHashMap.get(java.lang.Object)
sun.reflect.ReflectionFactory.checkInitted()
sun.reflect.Label.add(sun.reflect.ClassFileAssembler,short,short,int)
org.sunflow.RenderObjectMap.lookupOptions(java.lang.String)
javax.swing.text.AbstractDocument$DefaultDocumentEvent.addEdit(javax.swing.undo.UndoableEdit)
org.codehaus.janino.Java$BreakableStatement.init(org.codehaus.janino.Location)
java.security.PermissionsHash.init()
java.util.Formatter$FormatSpecifier.width(java.lang.String)
org.sunflow.core.InstanceList.getWorldBounds(org.sunflow.math.Matrix4)
org.codehaus.janino.util.resource.JarDirectoriesResourceFinder.init(java.io.File[])
java.util.SimpleTimeZone.getOffsets(long,int[])
sun.reflect.AccessorGenerator.internalize(java.lang.String)
org.codehaus.janino.ScriptEvaluator.createFastScriptEvaluator(java.lang.String,java.lang.Class,java.lang.String[])
java.util.ResourceBundle.checkList(java.util.List)
java.util.regex.Pattern.ref(int)
java.lang.Thread.init(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long)
javax.swing.ToolTipManager$AccessibilityKeyListener.init(javax.swing.ToolTipManager,javax.swing.ToolTipManager$1)
java.util.Vector.indexOf(java.lang.Object)
org.sunflow.SunflowAPI.camera(java.lang.String,org.sunflow.core.CameraLens)
java.util.logging.LogManager.getLogger(java.lang.String)
java.awt.event.ContainerEvent.init(java.awt.Component,int,java.awt.Component)
java.util.PriorityQueue.init(int,java.util.Comparator)
org.codehaus.janino.tools.Disassembler$ConstantUtf8Info.init(org.codehaus.janino.tools.Disassembler,java.lang.String)
org.codehaus.janino.Scanner$Token.init(org.codehaus.janino.Scanner,org.codehaus.janino.Scanner$1)
java.awt.KeyboardFocusManager.addKeyEventPostProcessor(java.awt.KeyEventPostProcessor)
java.io.PrintWriter.flush()
javax.swing.plaf.ComponentUI.uninstallUI(javax.swing.JComponent)
java.nio.charset.CharsetDecoder.flush(java.nio.CharBuffer)
java.awt.SentEvent.init(java.awt.AWTEvent,sun.awt.AppContext)
javax.swing.JLabel.setUI(javax.swing.plaf.LabelUI)
javax.swing.RepaintManager.useVolatileDoubleBuffer()
java.util.regex.ASCII.isType(int,int)
java.nio.BufferOverflowException.init()
sun.util.LocaleServiceProviderPool.getParentLocale(java.util.Locale)
sun.util.calendar.LocalGregorianCalendar.getLocalGregorianCalendar(java.lang.String)
java.lang.reflect.Method.getReturnType()
org.sunflow.core.LightServer$1.run()
sun.util.calendar.CalendarUtils.mod(long,long)
java.security.AccessControlException.init(java.lang.String,java.security.Permission)
java.lang.StringBuffer.append(char)
java.util.regex.Pattern$SliceU.init(int[])
java.awt.datatransfer.SystemFlavorMap$2.init(java.awt.datatransfer.SystemFlavorMap)
javax.swing.plaf.metal.DefaultMetalTheme.install()
sun.awt.PeerEvent.coalesceEvents(sun.awt.PeerEvent)
java.util.TimeZone$1.init(java.lang.String)
java.awt.Component.bounds()
java.lang.Exception.init(java.lang.String)
org.sunflow.core.renderer.SimpleRenderer.init()
javax.swing.JScrollPane.createViewport()
java.lang.NullPointerException.init()
sun.net.util.IPAddressUtil.textToNumericFormatV6(java.lang.String)
java.util.regex.Pattern$Branch.add(java.util.regex.Pattern$Node)
org.codehaus.janino.Parser.parseWhileStatement()
java.lang.Character.isLetter(int)
java.awt.KeyboardFocusManager.retargetUnexpectedFocusEvent(java.awt.event.FocusEvent)
org.codehaus.janino.Java$CompilationUnit.addImportDeclaration(org.codehaus.janino.Java$CompilationUnit$ImportDeclaration)
java.util.regex.Pattern$BnM.init(int[],int[],int[],java.util.regex.Pattern$Node)
sun.awt.datatransfer.DataTransferer.getInstance()
org.codehaus.janino.Java$AmbiguousName.init(org.codehaus.janino.Location,java.lang.String[],int)
java.awt.im.InputContext.endComposition()
org.sunflow.RenderObjectMap$RenderObjectHandle.getInstance()
java.util.Hashtable.init(int,float)
sun.util.LocaleServiceProviderPool.findProvider(java.util.Locale)
java.util.BitSet.checkInvariants()
org.sunflow.Benchmark$BenchmarkScene.build()
sun.reflect.UnsafeShortFieldAccessorImpl.init(java.lang.reflect.Field)
java.util.ResourceBundle.findBundleInCache(java.util.ResourceBundle$CacheKey,java.util.ResourceBundle$Control)
sun.font.AttributeValues.defineAll(int)
org.sunflow.RenderObjectMap.put(java.lang.String,org.sunflow.core.Options)
java.util.logging.Level.getLocalizedLevelName()
sun.security.provider.PolicyFile$2.init(sun.security.provider.PolicyFile,java.net.URL,sun.security.provider.PolicyFile$PolicyInfo)
java.util.Currency.getInstance(java.util.Locale)
java.lang.ClassLoader.loadClass(java.lang.String)
org.codehaus.janino.Location.toString()
java.lang.AbstractStringBuilder.appendCodePoint(int)
java.awt.Component.constructComponentName()
org.codehaus.janino.Scanner.scanNumericLiteral(int)
org.codehaus.janino.Parser.parseFormalParameters(org.codehaus.janino.Java$Scope)
sun.awt.SunToolkit.flushPendingEvents()
org.codehaus.janino.Parser.peekOperator(java.lang.String[])
java.util.SimpleTimeZone.getTransition(sun.util.calendar.BaseCalendar,sun.util.calendar.BaseCalendar$Date,int,int,int,int,int,int)
sun.reflect.ClassFileAssembler.getMaxLocals()
sun.font.AttributeValues.init()
sun.awt.image.ByteComponentRaster.getDataOffset(int)
org.sunflow.util.FloatArray.add(float)
org.codehaus.janino.Parser.parseStatement()
org.sunflow.Benchmark.access$000(org.sunflow.Benchmark)
java.lang.SecurityManager.checkExit(int)
java.util.LinkedList.getFirst()
sun.util.calendar.BaseCalendar.init()
java.util.logging.LogManager$LoggerContext$1.init(java.util.logging.LogManager$LoggerContext,java.util.logging.Logger,java.lang.String)
java.awt.Container.isParentOf(java.awt.Component)
sun.awt.image.BufImgSurfaceData.createDataBP(java.awt.image.BufferedImage,sun.java2d.loops.SurfaceType)
java.util.Formatter$Flags.init(int)
javax.swing.event.ChangeEvent.init(java.lang.Object)
javax.swing.JViewport.getViewLocation()
java.util.WeakHashMap.eq(java.lang.Object,java.lang.Object)
org.codehaus.janino.Java$Located.init(org.codehaus.janino.Location)
sun.util.calendar.CalendarDate.init()
java.lang.String.lastIndexOf(char[],int,int,char[],int,int,int)
java.util.regex.Pattern$LastMatch.init()
java.util.Random.next(int)
sun.reflect.ClassFileAssembler.opc_ifeq(sun.reflect.Label)
javax.swing.JInternalFrame.getRootPane()
java.util.Collections$SynchronizedMap.init(java.util.Map)
SunflowGUI$16.init(SunflowGUI)
java.util.Locale.getInstance(java.lang.String,java.lang.String,java.lang.String)
sun.nio.cs.StreamDecoder.close()
java.util.regex.Pattern$UnixDot.init()
java.awt.Component.isMinimumSizeSet()
SunflowGUI.newFileMenuItemActionPerformed(java.awt.event.ActionEvent)
java.lang.Integer.getChars(int,int,char[])
java.util.concurrent.atomic.AtomicLong.compareAndSet(long,long)
org.codehaus.janino.Parser.parseSwitchStatement()
java.awt.dnd.DropTarget$DropTargetAutoScroller.stop()
org.codehaus.janino.Java$Crement.init(org.codehaus.janino.Location,org.codehaus.janino.Java$Lvalue,java.lang.String)
java.awt.Component.printAll(java.awt.Graphics)
java.lang.Float.parseFloat(java.lang.String)
java.awt.Component.isFocusTraversable()
org.codehaus.janino.util.TeeReader.init(java.io.Reader,java.io.Writer,boolean)
org.codehaus.janino.util.iterator.DirectoryIterator.init(java.io.File,java.io.FilenameFilter,java.io.FilenameFilter)
sun.awt.image.ShortComponentRaster.getDataStorage()
org.sunflow.RenderObjectMap$RenderObjectHandle.access$700(org.sunflow.RenderObjectMap$RenderObjectHandle)
java.util.concurrent.ConcurrentHashMap.values()
javax.swing.JScrollPane.getVerticalScrollBarPolicy()
javax.swing.JPopupMenu.setUI(javax.swing.plaf.PopupMenuUI)
java.text.FieldPosition.getFieldAttribute()
java.util.ResourceBundle$Control.needsReload(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,java.util.ResourceBundle,long)
java.awt.Window.toFront()
javax.swing.text.GapVector.open(int,int)
java.awt.KeyboardFocusManager.getDefaultFocusTraversalPolicy()
org.codehaus.janino.UnitCompiler$2.init(org.codehaus.janino.UnitCompiler)
sun.java2d.InvalidPipeException.init(java.lang.String)
javax.swing.text.DocumentFilter.remove(javax.swing.text.DocumentFilter$FilterBypass,int,int)
sun.text.normalizer.NormalizerBase.normalize(java.lang.String,java.text.Normalizer$Form,int)
java.util.ResourceBundle$Control.toResourceName(java.lang.String,java.lang.String)
org.codehaus.janino.Java$Atom.init(org.codehaus.janino.Location)
java.awt.Component.removeComponentListener(java.awt.event.ComponentListener)
sun.reflect.ClassFileAssembler.opc_aload_3()
java.nio.charset.Charset$3.init()
org.sunflow.SunflowAPI.getUniqueName(java.lang.String)
org.codehaus.janino.samples.DemoBase.stringToType(java.lang.String)
java.util.regex.Pattern.escape(boolean,boolean)
java.awt.Component.addMouseMotionListener(java.awt.event.MouseMotionListener)
java.awt.Container.checkNotAWindow(java.awt.Component)
sun.reflect.UnsafeStaticBooleanFieldAccessorImpl.init(java.lang.reflect.Field)
java.lang.Boolean.valueOf(java.lang.String)
java.text.BreakDictionary.init(java.lang.String)
java.util.HashMap.containsKey(java.lang.Object)
sun.security.provider.PolicyFile$1.init(sun.security.provider.PolicyFile)
sun.misc.FloatingDecimal.developLongDigits(int,long,long)
java.text.DecimalFormatSymbols$DecimalFormatSymbolsGetter.access$000()
org.codehaus.janino.Parser.parseInterfaceBody(org.codehaus.janino.Java$InterfaceDeclaration)
javax.accessibility.AccessibleContext.getAccessibleName()
java.lang.Thread.isDaemon()
org.sunflow.system.ImagePanel$ScrollZoomListener.init(org.sunflow.system.ImagePanel,org.sunflow.system.ImagePanel$1)
javax.swing.text.AbstractDocument$DefaultDocumentEvent.access$100(javax.swing.text.AbstractDocument$DefaultDocumentEvent)
java.awt.Container.removeNotify()
java.awt.geom.Point2D.init()
java.lang.ConditionalSpecialCasing.toLowerCaseCharArray(java.lang.String,int,java.util.Locale)
java.lang.Character.digit(char,int)
java.lang.Class.forName(java.lang.String,boolean,java.lang.ClassLoader)
java.util.logging.Logger.checkPermission()
java.awt.Container.getFocusTraversalKeys(int)
javax.swing.AbstractButton.updateDisplayedMnemonicIndex(java.lang.String,int)
java.awt.image.Raster.getHeight()
sun.util.calendar.BaseCalendar.getMonthLength(int,int)
java.text.DecimalFormatSymbols.getPerMill()
sun.awt.image.SurfaceManager.flush(boolean)
java.lang.ClassLoader.getClassLoader(java.lang.Class)
java.io.File.getParent()
org.codehaus.janino.Compiler$2.init(java.io.File)
java.text.AttributedString.length()
org.sunflow.core.Instance.getBounds()
java.util.concurrent.locks.LockSupport.unpark(java.lang.Thread)
java.lang.Character.digit(int,int)
javax.swing.JComponent.setDefaultLocale(java.util.Locale)
javax.swing.text.AbstractDocument.fireInsertUpdate(javax.swing.event.DocumentEvent)
sun.awt.EventQueueItem.init(java.awt.AWTEvent)
java.util.regex.Pattern.addFlag()
java.text.AttributedString.init(java.text.AttributedCharacterIterator)
sun.security.util.Debug.getInstance(java.lang.String)
javax.swing.ArrayTable.grow()
java.awt.AWTEventMulticaster.add(java.awt.event.MouseListener,java.awt.event.MouseListener)
java.io.DeleteOnExitHook.add(java.lang.String)
org.sunflow.image.Color.init(float,float,float)
java.lang.StringCoding$StringDecoder.charsetName()
org.codehaus.janino.ClassBodyEvaluator.createFastClassBodyEvaluator(org.codehaus.janino.Scanner,java.lang.String,java.lang.Class,java.lang.Class[],java.lang.ClassLoader)
org.codehaus.janino.samples.ClassBodyDemo.class$(java.lang.String)
sun.awt.dnd.SunDropTargetEvent.dispatch()
java.awt.image.ColorModel.getNumComponents()
java.awt.KeyboardFocusManager.isTemporary(java.awt.Component,java.awt.Component)
org.codehaus.janino.UnitCompiler.setWarningHandler(org.codehaus.janino.WarningHandler)
java.awt.Component.getFocusTraversalKeys_NoIDCheck(int)
java.awt.datatransfer.DataFlavor.initialize(java.lang.String,java.lang.String,java.lang.ClassLoader)
java.util.regex.Pattern$Node.study(java.util.regex.Pattern$TreeInfo)
java.util.logging.Logger.finest(java.lang.String)
java.text.NumberFormat.setParseIntegerOnly(boolean)
java.nio.charset.IllegalCharsetNameException.init(java.lang.String)
sun.misc.FloatingDecimal.stickyRound(double)
java.awt.image.BufferedImage.getRGB(int,int)
javax.swing.RepaintManager$PaintManager.getValidImage(java.awt.Image)
java.security.Policy.implies(java.security.ProtectionDomain,java.security.Permission)
org.codehaus.janino.Parser.parseUnaryExpression()
java.awt.image.ColorModel.getDataElements(int,java.lang.Object)
org.codehaus.janino.Java$Located.getLocation()
java.awt.Color.getRGB()
java.awt.Component.getBoundsOp()
java.lang.ClassLoader.initSystemClassLoader()
java.util.Formatter$FormatSpecifier.checkDateTime()
sun.util.calendar.ZoneInfoFile$2.init(java.lang.String)
java.io.PrintStream.println()
org.codehaus.janino.Parser.peekKeyword(java.lang.String)
javax.swing.JPanel.init()
java.net.InetAddress.holder()
org.sunflow.system.Parser.close()
org.sunflow.Benchmark.access$100(org.sunflow.Benchmark)
sun.misc.FDBigInt.init(int)
java.lang.Class.newInstance()
java.awt.event.WindowAdapter.init()
javax.swing.ArrayTable.shrink()
sun.misc.VM.allowArraySyntax()
sun.java2d.SurfaceData.getSurfaceType()
java.lang.Class.checkMemberAccess(int,java.lang.Class,boolean)
sun.reflect.ClassFileAssembler.opc_aload_0()
java.awt.Toolkit.enabledOnToolkit(long)
java.awt.Component.isShowing()
java.util.logging.LogManager.access$1100(java.util.logging.LogManager)
sun.text.normalizer.NormalizerImpl.getNorm32(int)
sun.util.calendar.BaseCalendar$Date.init()
javax.swing.JComponent.clientPropertyChanged(java.lang.Object,java.lang.Object,java.lang.Object)
java.lang.String.equals(java.lang.Object)
java.awt.event.MouseEvent.setOldModifiers()
org.codehaus.janino.tools.JGrep$2.init()
org.codehaus.janino.Java$ClassDeclaration.addVariableDeclaratorOrInitializer(org.codehaus.janino.Java$TypeBodyDeclaration)
java.util.regex.Pattern.accept(int,java.lang.String)
org.codehaus.janino.tools.Disassembler.init()
sun.java2d.pipe.Region.isRectangular()
org.codehaus.janino.Scanner$Token.isKeyword(java.lang.String)
java.awt.Toolkit.getDefaultToolkit()
java.awt.geom.AffineTransform.calculateType()
sun.util.calendar.ZoneInfo.getLastRawOffset()
sun.awt.image.BufImgSurfaceData.init(java.awt.image.DataBuffer,java.awt.image.BufferedImage,sun.java2d.loops.SurfaceType)
org.sunflow.core.ParameterList$Parameter.getFloatValue()
javax.swing.Timer.getLock()
java.util.Hashtable.containsKey(java.lang.Object)
org.sunflow.system.UI.printWarning(org.sunflow.system.UI$Module,java.lang.String,java.lang.Object[])
java.io.OutputStream.close()
org.codehaus.janino.Java$Statement.setEnclosingScope(org.codehaus.janino.Java$Scope)
org.codehaus.janino.Java$Atom.toTypeOrPE()
java.text.DecimalFormat.setMinimumIntegerDigits(int)
java.lang.StringCoding.set(java.lang.ThreadLocal,java.lang.Object)
sun.reflect.ClassFileAssembler.opc_aload_1()
java.text.DateFormatSymbols$DateFormatSymbolsGetter.access$000()
sun.swing.AccessibleMethod.invoke(java.lang.Object,java.lang.Object[])
org.codehaus.janino.ScriptEvaluator.createFastEvaluator(org.codehaus.janino.ScriptEvaluator,org.codehaus.janino.Scanner,java.lang.String[],java.lang.Class)
sun.util.calendar.ZoneInfo.init(java.lang.String,int)
java.text.Format.format(java.lang.Object)
org.codehaus.janino.Parser.parseInclusiveOrExpression()
javax.swing.text.StyleContext$NamedStyle.setResolveParent(javax.swing.text.AttributeSet)
java.awt.Container.getComponentCount()
javax.swing.BufferStrategyPaintManager.init()
java.util.Formatter.checkText(java.lang.String)
java.util.regex.ASCII.isSpace(int)
org.codehaus.janino.ByteArrayClassLoader.init(java.util.Map,java.lang.ClassLoader)
sun.misc.Launcher.getClassLoader()
java.util.Random.init()
java.awt.Container.addNotify()
org.sunflow.RenderObjectMap$RenderObjectHandle.init(org.sunflow.core.Instance,org.sunflow.RenderObjectMap$1)
java.awt.image.ColorModel.getGreen(java.lang.Object)
java.lang.ConditionalSpecialCasing.isCased(int)
org.codehaus.janino.IClass.init()
javax.swing.JComponent.isOpaque()
java.awt.AWTEventMulticaster.removeInternal(java.util.EventListener,java.util.EventListener)
java.util.Stack.init()
javax.swing.UIManager$LookAndFeelInfo.init(java.lang.String,java.lang.String)
org.sunflow.math.Point3.normal(org.sunflow.math.Point3,org.sunflow.math.Point3,org.sunflow.math.Point3)
sun.reflect.MethodAccessorGenerator.emitInvoke()
javax.swing.ArrayTable.isArray()
sun.awt.image.SunVolatileImage.getFont()
javax.swing.UIManager$2.init()
java.util.concurrent.ConcurrentHashMap$HashEntry.init(int,java.lang.Object,java.lang.Object,java.util.concurrent.ConcurrentHashMap$HashEntry)
java.awt.Container.setLayout(java.awt.LayoutManager)
sun.font.AttributeValues.i_equals(sun.font.EAttribute,sun.font.AttributeValues)
java.lang.reflect.Field.getType()
java.awt.datatransfer.MimeTypeParseException.init(java.lang.String)
java.awt.Component.enableEvents(long)
java.util.regex.Pattern$SliceI.init(int[])
java.util.regex.Pattern$3.init(java.util.regex.Pattern,int,int)
org.sunflow.core.InstanceList.init()
java.awt.event.MouseWheelEvent.getScrollAmount()
org.sunflow.util.FastHashMap.put(java.lang.Object,java.lang.Object)
java.awt.image.BufferedImage.init(java.awt.image.ColorModel,java.awt.image.WritableRaster,boolean,java.util.Hashtable)
sun.reflect.ClassFileAssembler.opc_ifnull(sun.reflect.Label)
java.io.DataInputStream.readInt()
org.sunflow.system.RenderGlobalsPanel.init()
java.lang.Thread.interrupt()
java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync.init()
java.util.regex.Pattern.unicodeBlockPropertyFor(java.lang.String)
sun.util.calendar.CalendarDate.setMonth(int)
java.nio.charset.MalformedInputException.init(int)
sun.util.LocaleServiceProviderPool.findProviderLocale(java.util.Locale,java.util.Locale)
sun.util.calendar.CalendarDate.setZone(java.util.TimeZone)
java.util.Formatter.format(java.util.Locale,java.lang.String,java.lang.Object[])
java.util.Formatter$Conversion.isFloat(char)
sun.reflect.ClassFileAssembler.emitShort(short,short)
java.io.FileNotFoundException.init(java.lang.String)
java.lang.Integer.intValue()
java.awt.Component.subtractAndApplyShape(sun.java2d.pipe.Region)
java.util.Formatter$FormatSpecifier.flags(java.lang.String)
java.security.BasicPermission.init(java.lang.String,java.lang.String)
java.util.Hashtable.access$400(java.util.Hashtable)
org.codehaus.janino.Java$Crement.init(org.codehaus.janino.Location,java.lang.String,org.codehaus.janino.Java$Lvalue)
java.util.concurrent.atomic.AtomicReference.set(java.lang.Object)
org.sunflow.system.ImagePanel.fit()
javax.swing.RepaintManager.scheduleProcessingRunnable(sun.awt.AppContext)
java.lang.reflect.Method.getName()
java.text.DateFormat.getTimeInstance(int,java.util.Locale)
java.util.regex.Pattern.x()
java.util.regex.Pattern$SingleS.init(int)
java.util.StringTokenizer.skipDelimiters(int)
javax.swing.JFrame.setRootPane(javax.swing.JRootPane)
org.sunflow.math.BoundingBox.getExtents()
java.security.PermissionCollection.init()
sun.reflect.NativeConstructorAccessorImpl.setParent(sun.reflect.DelegatingConstructorAccessorImpl)
java.lang.String.toLowerCase(java.util.Locale)
org.codehaus.janino.ExpressionEvaluator.setExpressionTypes(java.lang.Class[])
org.codehaus.janino.tools.Disassembler$LineNumberTableAttribute.init(org.codehaus.janino.tools.Disassembler,short[])
sun.reflect.ClassFileAssembler.opc_athrow()
org.sunflow.core.InstanceList.getNumPrimitives(int)
java.awt.Dialog.isModal_NoClientCode()
java.awt.Container.containsFocus()
org.codehaus.janino.Java$ReferenceType.init(org.codehaus.janino.Location,java.lang.String[])
sun.awt.im.InputMethodLocator.deriveLocator(java.util.Locale)
org.sunflow.core.accel.BoundingIntervalHierarchy.init()
java.lang.RuntimeException.init(java.lang.String)
javax.swing.TimerQueue.startIfNeeded()
sun.reflect.ClassFileAssembler.opc_areturn()
sun.awt.dnd.SunDropTargetContextPeer.access$202(sun.awt.dnd.SunDropTargetContextPeer,long[])
sun.java2d.SurfaceData.init(sun.java2d.StateTrackableDelegate,sun.java2d.loops.SurfaceType,java.awt.image.ColorModel)
java.awt.Component.isDisplayable()
javax.swing.UIManager.initializeAuxiliaryLAFs(java.util.Properties)
java.util.regex.Pattern$Node.match(java.util.regex.Matcher,int,java.lang.CharSequence)
org.codehaus.janino.Parser.parseSelector(org.codehaus.janino.Java$Atom)
org.sunflow.math.Point3.init(float,float,float)
java.nio.Buffer.position()
java.util.Dictionary.init()
java.awt.Container.getComponents()
java.io.File.getName()
javax.swing.text.StyleContext.createSmallAttributeSet(javax.swing.text.AttributeSet)
org.sunflow.core.gi.FakeGIEngine.init(org.sunflow.core.Options)
sun.misc.URLClassPath.check(java.net.URL)
java.awt.Cursor.init(int)
java.lang.Math.sin(double)
sun.awt.im.InputContext.addedClientWindowListeners()
java.util.PropertyPermission.init(java.lang.String,java.lang.String)
org.codehaus.janino.tools.Disassembler.readByteArray(java.io.InputStream,int)
java.awt.event.PaintEvent.init(java.awt.Component,int,java.awt.Rectangle)
javax.swing.JComponent.isValidateRoot()
java.util.logging.LogManager$LogNode.init(java.util.logging.LogManager$LogNode,java.util.logging.LogManager$LoggerContext)
java.awt.Component.getHeight()
javax.swing.JComponent.isOptimizedDrawingEnabled()
java.util.Arrays.copyOf(char[],int)
javax.swing.text.JTextComponent.setCaretPosition(int)
org.sunflow.core.Instance.getNumPrimitives()
java.io.InputStreamReader.close()
javax.swing.UIManager.initializeInstalledLAFs(java.util.Properties)
javax.swing.TransferHandler.init(java.lang.String)
org.codehaus.janino.Java$VariableDeclarator.init(org.codehaus.janino.Location,java.lang.String,int,org.codehaus.janino.Java$ArrayInitializerOrRvalue)
java.util.Arrays.mergeSort(java.lang.Object[],java.lang.Object[],int,int,int)
